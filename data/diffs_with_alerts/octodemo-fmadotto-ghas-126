diff --git a/pom.xml b/pom.xml
index bd00067..9f5a771 100644
--- a/pom.xml
+++ b/pom.xml
@@ -18,7 +18,7 @@
             Dependency Versions
         -->
         <jetty.version>10.0.10</jetty.version>
-        <log4j.version>2.17.2</log4j.version>
+        <log4j.version>2.14.1</log4j.version>
 
         <!--
             Properties used to create a CD style version number for the Maven build
@@ -74,7 +74,7 @@
 
         <dependency>
             <groupId>org.apache.logging.log4j</groupId>
-            <artifactId>log4j-slf4j18-impl</artifactId>
+            <artifactId>log4j-core</artifactId>
             <version>${log4j.version}</version>
         </dependency>
 
diff --git a/src/main/java/com/github/demo/service/BookDatabase.java b/src/main/java/com/github/demo/service/BookDatabase.java
index 43bb420..82354d4 100644
--- a/src/main/java/com/github/demo/service/BookDatabase.java
+++ b/src/main/java/com/github/demo/service/BookDatabase.java
@@ -14,5 +14,7 @@ public interface BookDatabase {
 
     void populateUsers(Collection<User> users) throws BookServiceException;
 
+    List<Book> getBooksByTitle(String name) throws BookServiceException;
+
     void destroy() throws BookServiceException;
 }
\ No newline at end of file
diff --git a/src/main/java/com/github/demo/service/BookDatabaseImpl.java b/src/main/java/com/github/demo/service/BookDatabaseImpl.java
index 71f5828..fd38a5f 100644
--- a/src/main/java/com/github/demo/service/BookDatabaseImpl.java
+++ b/src/main/java/com/github/demo/service/BookDatabaseImpl.java
@@ -249,4 +249,44 @@ private Connection getConnection(String url, Properties props) throws BookServic
         logger.info("Database Connection successful? " + (connection != null));
         return connection;
     }
-}
+
+    @Override
+    public List<Book> getBooksByTitle(String name) throws BookServiceException {
+        List<Book> books = new ArrayList<Book>();
+
+        if (!isValid()) {
+            throw new BookServiceException("Database connection is not valid, check logs for failure details.");
+        }
+
+        Statement stmt = null;
+
+        try {
+            stmt = connection.createStatement();
+            String query = "SELECT * FROM books WHERE title LIKE '%" + name + "%'";
+
+            ResultSet results = stmt.executeQuery(query);
+
+            while (results.next()) {
+                Book book = new Book(
+                        results.getString("author"),
+                        results.getString("title"),
+                        results.getString("image"));
+                books.add(book);
+            }
+        } catch (SQLException e) {
+            logger.error("Failed while searching");
+            throw new BookServiceException(e);
+        } finally {
+            try {
+                if (stmt != null) {
+                    stmt.close();
+                }
+            } catch (SQLException se) {
+                // Do nothing
+            } finally {
+                stmt = null;
+            }
+        }
+        return books;
+    }
+}
\ No newline at end of file
diff --git a/src/main/java/com/github/demo/service/BookService.java b/src/main/java/com/github/demo/service/BookService.java
index 05ba456..ff417b6 100644
--- a/src/main/java/com/github/demo/service/BookService.java
+++ b/src/main/java/com/github/demo/service/BookService.java
@@ -24,4 +24,7 @@ public List<Book> getBooks() throws BookServiceException {
         return this.booksDatabase.getAll();
     }
 
+    public List<Book> searchBooks(String name) throws BookServiceException {
+        return this.booksDatabase.getBooksByTitle(name);
+    }
 }
\ No newline at end of file
diff --git a/src/main/java/com/github/demo/servlet/BookServlet.java b/src/main/java/com/github/demo/servlet/BookServlet.java
index 626765c..6dace96 100644
--- a/src/main/java/com/github/demo/servlet/BookServlet.java
+++ b/src/main/java/com/github/demo/servlet/BookServlet.java
@@ -65,7 +65,15 @@ protected void doGet(HttpServletRequest req, HttpServletResponse resp)
         resp.setContentType("text/html; charset=UTF-8");
 
         try {
-            List<Book> books = bookService.getBooks();
+            List<Book> books;
+
+            String searchTerm = req.getParameter("title");
+            if (searchTerm != null) {
+                books = bookService.searchBooks(searchTerm);
+            } else {
+                books = bookService.getBooks();
+            }
+
             ctx.setVariable("books", books);
             engine.process("books", ctx, resp.getWriter());
         } catch (BookServiceException e) {
