diff --git a/src/main/java/com/github/demo/model/Book.java b/src/main/java/com/github/demo/model/Book.java
index ca14e0c..1b12f18 100644
--- a/src/main/java/com/github/demo/model/Book.java
+++ b/src/main/java/com/github/demo/model/Book.java
@@ -11,21 +11,39 @@ public class Book {
 
     private String cover;
 
-    public Book() {
+    private int rating;
+
+    private String[] reviews;
 
+    public Book() {
+        this.title = "";
+        this.author = "";
+        this.cover = "";
+        this.rating = 0;
+        this.reviews = null;
     }
 
     public Book(String author, String title) {
+        this();
         this.author = author;
         this.title = title;
     }
 
     public Book(String author, String title, String cover) {
+        this();
         this.author = author;
         this.title = title;
         this.cover = cover;
     }
 
+    public Book(String author, String title, String cover, int rating) {
+        this();
+        this.author = author;
+        this.title = title;
+        this.cover = cover;
+        this.rating = rating;
+    }
+
     public String getTitle() {
         return title;
     }
@@ -53,4 +71,27 @@ public String getCover() {
     public void setCover(String cover) {
         this.cover = cover;
     }
+
+    public int getRating() {
+        return rating;
+    }
+
+    public void setRating(int rating) {
+        this.rating = rating;
+    }
+
+    public void addReview(String review) {
+    // Add a review to the book
+    if (reviews == null) {
+        reviews = new String[1];
+        reviews[0] = review;
+    } else {
+        String[] newReviews = new String[reviews.length + 1];
+        System.arraycopy(reviews, 0, newReviews, 0, reviews.length);
+        newReviews[reviews.length] = review;
+        reviews = newReviews;
+    }
+
+}
+
 }
diff --git a/src/main/java/com/github/demo/service/BookDatabaseImpl.java b/src/main/java/com/github/demo/service/BookDatabaseImpl.java
index 9023ef5..68753a5 100644
--- a/src/main/java/com/github/demo/service/BookDatabaseImpl.java
+++ b/src/main/java/com/github/demo/service/BookDatabaseImpl.java
@@ -92,7 +92,8 @@ public List<Book> getAll() throws BookServiceException {
                 Book book = new Book(
                     rs.getString("author"),
                     rs.getString("title"),
-                    rs.getString("image")
+                    rs.getString("image"),
+                    rs.getInt("rating")
                 );
                 books.add(book);
             }
@@ -123,7 +124,8 @@ public List<Book> getBooksByTitle(String name) throws BookServiceException {
                 Book book = new Book(
                     results.getString("author"),
                     results.getString("title"),
-                    results.getString("image")
+                    results.getString("image"),
+                    results.getInt("rating")
                 );
                 books.add(book);
             }
@@ -169,6 +171,7 @@ public void populate(Collection<Book> books) throws BookServiceException {
                     ps.setString(1, book.getTitle());
                     ps.setString(2, book.getAuthor());
                     ps.setString(3, book.getCover());
+                    ps.setInt(4, book.getRating());
                     ps.execute();
                 }
                 logger.info("Database populated.");
diff --git a/src/main/java/com/github/demo/service/BookUtils.java b/src/main/java/com/github/demo/service/BookUtils.java
index 6232d5a..848bfd5 100644
--- a/src/main/java/com/github/demo/service/BookUtils.java
+++ b/src/main/java/com/github/demo/service/BookUtils.java
@@ -10,12 +10,12 @@ public class BookUtils {
     public static List<Book> getSampleBooks() {
         List<Book> books = new ArrayList<Book>(6);
 
-        books.add(new Book("Jeff Sutherland","Scrum: The Art of Doing Twice the Work in Half the Time", "scrum.jpg"));
-        books.add(new Book("Eric Ries","The Lean Startup: How Constant Innovation Creates Radically Successful Businesses", "lean.jpg"));
-        books.add(new Book("Geoffrey A. Moore","Crossing the Chasm", "chasm.jpg"));
-        books.add(new Book("David Thomas","The Pragmatic Programmer: From Journeyman to Master", "pragmatic.jpg"));
-        books.add(new Book("Frederick P. Brooks Jr.", "The Mythical Man-Month: Essays on Software Engineering", "month.jpg"));
-        books.add(new Book("Steve Krug","Don't Make Me Think, Revisited: A Common Sense Approach to Web Usability", "think.jpg"));
+        books.add(new Book("Jeff Sutherland", "Scrum: The Art of Doing Twice the Work in Half the Time", "scrum.jpg", 5));
+        books.add(new Book("Eric Ries", "The Lean Startup: How Constant Innovation Creates Radically Successful Businesses", "lean.jpg", 2));
+        books.add(new Book("Geoffrey A. Moore", "Crossing the Chasm", "chasm.jpg", 4));
+        books.add(new Book("David Thomas", "The Pragmatic Programmer: From Journeyman to Master", "pragmatic.jpg", 1));
+        books.add(new Book("Frederick P. Brooks Jr.", "The Mythical Man-Month: Essays on Software Engineering", "month.jpg", 5));
+        books.add(new Book("Steve Krug", "Don't Make Me Think, Revisited: A Common Sense Approach to Web Usability", "think.jpg", 3));
 
         return books;
     }
diff --git a/src/main/webapp/static/books.html b/src/main/webapp/static/books.html
index dbba20d..69b19e5 100644
--- a/src/main/webapp/static/books.html
+++ b/src/main/webapp/static/books.html
@@ -80,6 +80,13 @@
                   <h4 class="media-heading"><a href="#">[[${book.title}]]</a></h4>
                   <h5 class="media-heading"> by <a href="#">[[${book.author}]]</a></h5>
                   <span>Status: </span><span class="text-success"><strong>In Stock</strong></span>
+                  <!-- Rating shown in stars -->
+                  <div>
+                    <span>Rating: </span>
+                    <span th:each="i : ${#numbers.sequence(1, book.rating)}">
+                      <img src="/static/images/star.png" style="width: 12px; height: 12px;" />
+                    </span>
+                  </div>
                 </div>
               </div>
             </td>
diff --git a/src/server.js b/src/server.js
new file mode 100644
index 0000000..4c56933
--- /dev/null
+++ b/src/server.js
@@ -0,0 +1,51 @@
+var express = require('express')
+var bodyParser = require('body-parser')
+const { Pool } = require('pg')
+
+const pool = new Pool({
+    user: 'dbuser',
+    host: 'database.server.com',
+    database: 'mydb',
+    password: process.env.POSTGRES_PASSWORD,
+    port: 3211,
+})
+
+var test;
+var app = express()
+app.use(bodyParser.json())
+app.use(bodyParser.urlencoded({
+    extended: true
+}));
+
+
+const rateLimit = require("express-rate-limit");
+
+const limiter = rateLimit({
+  windowMs: 15 * 60 * 1000, // 15 minutes
+  max: 100, // limit each IP to 100 requests per windowMs
+});
+
+app.get("/", limiter, function(req, res){
+    const search = req.query.q;
+
+    if (search != "") {
+        const squery = "SELECT * FROM users WHERE name = ?";
+        pool.query(squery, [search], (err, result) => {
+            if (err) {
+                console.error(err);
+                res.status(500).send("Internal server error");
+            } else {
+                console.log(result);
+                res.send(result);
+            }
+        });
+    }
+});
+
+app.listen(8000, function () {
+    console.log("Server running");
+});
+
+  let drinks = ['lemonade', 'soda', 'tea', 'water'];
+  let food = ['beans', 'chicken', 'rice'];
+  let iban = "DE012345678910112345"
\ No newline at end of file
diff --git a/src/test/java/com/github/demo/service/BookServiceTest.java b/src/test/java/com/github/demo/service/BookServiceTest.java
index c9aaf76..478440a 100644
--- a/src/test/java/com/github/demo/service/BookServiceTest.java
+++ b/src/test/java/com/github/demo/service/BookServiceTest.java
@@ -16,7 +16,7 @@ public class BookServiceTest {
 
     // Testing API token key
     private static final String API_TOKEN = "AIzaSyAQfxPJiounkhOjODEO5ZieffeBv6yft2Q";
-    
+
     private BookService bookService;
 
     @Test
