diff --git a/.ruby-version b/.ruby-version
index 5347b6dea48..87d3afa187d 100644
--- a/.ruby-version
+++ b/.ruby-version
@@ -1 +1 @@
-jruby-9.2.4.1
+jruby-9.1.12.0
diff --git a/Gemfile.template b/Gemfile.template
index 8b0082e5615..8795c68166a 100644
--- a/Gemfile.template
+++ b/Gemfile.template
@@ -14,7 +14,7 @@ gem "benchmark-ips", :group => :development
 gem "octokit", "~> 4", :group => :build
 gem "stud", "~> 0.0.22", :group => :build
 gem "rack-test", :require => "rack/test", :group => :development
-gem "fpm", "~> 1.11", :group => :build
+gem "fpm", "~> 1.3.3", :group => :build
 gem "rubyzip", "~> 1", :group => :build
 gem "gems", "~> 1", :group => :build
 gem "flores", "~> 0.0.6", :group => :development
diff --git a/build.gradle b/build.gradle
index d5cdeeb6fd9..5086ea303a3 100644
--- a/build.gradle
+++ b/build.gradle
@@ -217,6 +217,7 @@ task downloadAndInstallJRuby(dependsOn: [verifyFile, installCustomJRuby], type:
     into "${projectDir}/vendor/jruby"
     doLast {
       rubyGradleUtils.gem("rake", "12.3.1", "${projectDir}/vendor/bundle/jruby/2.5.0")
+      rubyGradleUtils.gem("json", "1.8.6", "${projectDir}/vendor/bundle/jruby/2.5.0")
     }
 }
 
@@ -232,6 +233,7 @@ task installDefaultGems(dependsOn: downloadAndInstallJRuby) {
   outputs.dir("${projectDir}/vendor/bundle/jruby/2.5.0")
   doLast {
     rubyGradleUtils.gem("rake", "12.3.1", "${projectDir}/vendor/bundle/jruby/2.5.0")
+    rubyGradleUtils.gem("json", "1.8.6", "${projectDir}/vendor/bundle/jruby/2.5.0")
     rubyGradleUtils.rake('plugin:install-default')
   }
 }
@@ -250,6 +252,7 @@ task installTestGems(dependsOn: assemblyDeps) {
   outputs.dir("${projectDir}/vendor/bundle/jruby/2.5.0")
   doLast {
     rubyGradleUtils.gem("rake", "12.3.1", "${projectDir}/vendor/bundle/jruby/2.5.0")
+    rubyGradleUtils.gem("json", "1.8.6", "${projectDir}/vendor/bundle/jruby/2.5.0")
     rubyGradleUtils.rake('test:install-core')
   }
 }
diff --git a/logstash-core/logstash-core.gemspec b/logstash-core/logstash-core.gemspec
index 036745b6ba8..c2603b4f4fb 100644
--- a/logstash-core/logstash-core.gemspec
+++ b/logstash-core/logstash-core.gemspec
@@ -49,7 +49,7 @@ Gem::Specification.new do |gem|
 
   gem.add_runtime_dependency "pry", "~> 0.12"  #(Ruby license)
   gem.add_runtime_dependency "stud", "~> 0.0.19" #(Apache 2.0 license)
-  gem.add_runtime_dependency "clamp", "~> 1" #(MIT license) for command line args/flags
+  gem.add_runtime_dependency "clamp", "~> 0.6" #(MIT license) for command line args/flags
   gem.add_runtime_dependency "filesize", "~> 0.2" #(MIT license) for :bytes config validator
   gem.add_runtime_dependency "gems", "~> 1"  #(MIT license)
   gem.add_runtime_dependency "concurrent-ruby", "~> 1"
diff --git a/rakelib/artifacts.rake b/rakelib/artifacts.rake
index fb7c70b489e..dd5792b293b 100644
--- a/rakelib/artifacts.rake
+++ b/rakelib/artifacts.rake
@@ -1,4 +1,5 @@
 namespace "artifact" do
+  gem 'json', '~> 1'
 
   SNAPSHOT_BUILD = ENV["RELEASE"] != "1"
   VERSION_QUALIFIER = ENV["VERSION_QUALIFIER"]
diff --git a/rakelib/dependency.rake b/rakelib/dependency.rake
index b2de8661966..f586174566d 100644
--- a/rakelib/dependency.rake
+++ b/rakelib/dependency.rake
@@ -5,7 +5,7 @@ namespace "dependency" do
   end
 
   task "clamp" do
-    Rake::Task["gem:require"].invoke("clamp", "~> 0.6.5")
+    Rake::Task["gem:require"].invoke("clamp", "~> 0.6")
   end
 
   task "rbx-stdlib" do
@@ -21,7 +21,7 @@ namespace "dependency" do
   end # task stud
 
   task "fpm" do
-    Rake::Task["gem:require"].invoke("fpm", ">= 0")
+    Rake::Task["gem:require"].invoke("fpm", "~> 1.3.3")
   end # task stud
 
   task "rubyzip" do
diff --git a/x-pack/spec/monitoring/inputs/metrics_spec.rb b/x-pack/spec/monitoring/inputs/metrics_spec.rb
index ebfe9934dd6..b94ebd3344b 100644
--- a/x-pack/spec/monitoring/inputs/metrics_spec.rb
+++ b/x-pack/spec/monitoring/inputs/metrics_spec.rb
@@ -112,7 +112,7 @@ def state_events
           metrics_input.update(collector.snapshot_metric)
         end
 
-        it 'should add a stats events to the queue' do
+        xit 'should add a stats events to the queue' do
           wait(60).for { stats_events.size }.to be >= 1
         end
 
