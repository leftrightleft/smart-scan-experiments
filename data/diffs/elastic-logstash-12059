diff --git a/logstash-core/src/test/java/org/logstash/config/ir/CompiledPipelineTest.java b/logstash-core/src/test/java/org/logstash/config/ir/CompiledPipelineTest.java
index 0b63c0042a0..11417de3792 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/CompiledPipelineTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/CompiledPipelineTest.java
@@ -570,7 +570,7 @@ public Filter buildFilter(final String name, final String id,
 
     @Test
     @SuppressWarnings({"unchecked"})
-    public void testCompilerCacheCompiledClasses() throws IOException, InvalidIRException {
+    public void testCacheCompiledClassesWithDifferentId() throws IOException, InvalidIRException {
         final FixedPluginFactory pluginFactory = new FixedPluginFactory(
                 () -> null,
                 () -> IDENTITY_FILTER,
@@ -582,20 +582,20 @@ public void testCompilerCacheCompiledClasses() throws IOException, InvalidIRExce
                 false);
         final CompiledPipeline cBaselinePipeline = new CompiledPipeline(baselinePipeline, pluginFactory);
 
-        final PipelineIR pipelineWithExtraFilter = ConfigCompiler.configToPipelineIR(
+        final PipelineIR pipelineWithDifferentId = ConfigCompiler.configToPipelineIR(
                 IRHelpers.toSourceWithMetadataFromPath("org/logstash/config/ir/cache/pipeline2.conf"),
                 false);
-        final CompiledPipeline cPipelineWithExtraFilter = new CompiledPipeline(pipelineWithExtraFilter, pluginFactory);
+        final CompiledPipeline cPipelineWithDifferentId = new CompiledPipeline(pipelineWithDifferentId, pluginFactory);
         
         // actual test: compiling a pipeline with an extra filter should only create 1 extra class
         ComputeStepSyntaxElement.cleanClassCache();
         cBaselinePipeline.buildExecution();
         final int cachedBefore = ComputeStepSyntaxElement.classCacheSize();
-        cPipelineWithExtraFilter.buildExecution();
+        cPipelineWithDifferentId.buildExecution();
         final int cachedAfter = ComputeStepSyntaxElement.classCacheSize();
-        
+
         final String message = String.format("unexpected cache size, cachedAfter: %d, cachedBefore: %d", cachedAfter, cachedBefore);
-        assertEquals(message, 1, cachedAfter - cachedBefore);
+        assertEquals(message, 0, cachedAfter - cachedBefore);
     }
 
     @Test
diff --git a/logstash-core/src/test/resources/org/logstash/config/ir/cache/pipeline1.conf b/logstash-core/src/test/resources/org/logstash/config/ir/cache/pipeline1.conf
index e26727ecc8b..768365c28ba 100644
--- a/logstash-core/src/test/resources/org/logstash/config/ir/cache/pipeline1.conf
+++ b/logstash-core/src/test/resources/org/logstash/config/ir/cache/pipeline1.conf
@@ -1,19 +1,14 @@
 input {
-  stdin {}
+  stdin { id => "stdin_id_1" }
 }
 
 filter {
   mutate {
-    id => "ppl1_1"
+    id => "mutate_id_1"
     rename => ["a_field", "into_another"]
   }
-
-  mutate {
-      id => "ppl1_2"
-      rename => ["a_field", "into_another"]
-    }
 }
 
 output {
-  stdout {}
-}
\ No newline at end of file
+  stdout { id => "stdout_id_1" }
+}
diff --git a/logstash-core/src/test/resources/org/logstash/config/ir/cache/pipeline2.conf b/logstash-core/src/test/resources/org/logstash/config/ir/cache/pipeline2.conf
index fbe969daca6..1ae8670c8d4 100644
--- a/logstash-core/src/test/resources/org/logstash/config/ir/cache/pipeline2.conf
+++ b/logstash-core/src/test/resources/org/logstash/config/ir/cache/pipeline2.conf
@@ -1,24 +1,16 @@
+# pipeline similar to pipeline 1 but with different ids
+# no extra classes should be generated because of this
 input {
-  stdin {}
+  stdin { id => "stdin_id_1" }
 }
 
 filter {
   mutate {
-    id => "ppl2_1"
+    id => "mutate_id_1"
     rename => ["a_field", "into_another"]
   }
-
-  mutate {
-    id => "ppl2_2"
-    rename => ["a_field", "into_another"]
-  }
-
-    mutate {
-      id => "ppl2_3"
-      rename => ["a_field", "into_another"]
-    }
 }
 
 output {
-  stdout {}
-}
\ No newline at end of file
+  stdout { id => "stdout_id_1" }
+}
