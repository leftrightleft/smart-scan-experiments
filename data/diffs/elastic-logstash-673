diff --git a/lib/logstash/filters/kv.rb b/lib/logstash/filters/kv.rb
index 12ab43868bc..33fad922a95 100644
--- a/lib/logstash/filters/kv.rb
+++ b/lib/logstash/filters/kv.rb
@@ -207,10 +207,14 @@ def parse(text, event, kv_keys)
     end
     text.scan(@scan_re) do |key, v1, v2, v3|
       value = v1 || v2 || v3
-      key = @trimkey.nil? ? key : key.gsub(@trimkey_re, "")      
-      key = event.sprintf(@prefix) + key
+      key = @trimkey.nil? ? key : key.gsub(@trimkey_re, "")
+
+      # Bail out as per the values of @include_keys and @exclude_keys
       next if not @include_keys.empty? and not @include_keys.include?(key)
       next if @exclude_keys.include?(key)
+
+      key = event.sprintf(@prefix) + key
+
       value = @trim.nil? ? value : value.gsub(@trim_re, "")
       if kv_keys.has_key?(key)
         if kv_keys[key].is_a? Array
diff --git a/spec/filters/kv.rb b/spec/filters/kv.rb
index dcaf45795b8..3b65aaacc58 100644
--- a/spec/filters/kv.rb
+++ b/spec/filters/kv.rb
@@ -312,6 +312,39 @@
     end
   end
 
+  describe "test include_keys with prefix" do
+    config <<-CONFIG
+      filter {
+        kv {
+          include_keys => [ "foo", "singlequoted" ]
+          prefix       => "__"
+        }
+      }
+    CONFIG
+
+    sample "hello=world foo=bar baz=fizz doublequoted=\"hello world\" singlequoted='hello world'" do
+      insist { subject["__foo"] } == "bar"
+      insist { subject["__singlequoted"] } == "hello world"
+    end
+  end
+
+  describe "test exclude_keys with prefix" do
+    config <<-CONFIG
+      filter {
+        kv {
+          exclude_keys => [ "foo", "singlequoted" ]
+          prefix       => "__"
+        }
+      }
+    CONFIG
+
+    sample "hello=world foo=bar baz=fizz doublequoted=\"hello world\" singlequoted='hello world'" do
+      insist { subject["__hello"] } == "world"
+      insist { subject["__baz"] } == "fizz"
+      insist { subject["__doublequoted"] } == "hello world"
+    end
+  end
+
   describe "test include_keys and exclude_keys" do
     config <<-CONFIG
       filter {
