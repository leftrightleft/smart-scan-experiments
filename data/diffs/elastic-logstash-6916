diff --git a/logstash-core/lib/logstash/event_dispatcher.rb b/logstash-core/lib/logstash/event_dispatcher.rb
index 34b92311ca5..9d68cc3efa4 100644
--- a/logstash-core/lib/logstash/event_dispatcher.rb
+++ b/logstash-core/lib/logstash/event_dispatcher.rb
@@ -1,13 +1,13 @@
 # encoding: utf-8
 module LogStash
   class EventDispatcher
-    java_import "java.util.concurrent.CopyOnWriteArrayList"
+    java_import "java.util.concurrent.CopyOnWriteArraySet"
 
     attr_reader :emitter
 
     def initialize(emitter)
       @emitter = emitter
-      @listeners = CopyOnWriteArrayList.new
+      @listeners = CopyOnWriteArraySet.new
     end
 
     # This operation is slow because we use a CopyOnWriteArrayList
diff --git a/logstash-core/spec/logstash/event_dispatcher_spec.rb b/logstash-core/spec/logstash/event_dispatcher_spec.rb
index cda57efaf22..339df8189d8 100644
--- a/logstash-core/spec/logstash/event_dispatcher_spec.rb
+++ b/logstash-core/spec/logstash/event_dispatcher_spec.rb
@@ -34,6 +34,13 @@ def method_exists_with_arguments(argument1, argument2, argument3)
   let(:listener) { CustomSpy }
   subject(:emitter) { DummyEmitter.new }
 
+  it "ignores duplicate listener" do
+    emitter.dispatcher.add_listener(listener)
+    emitter.dispatcher.add_listener(listener)
+    expect(listener).to receive(:method_exists).with(emitter).once
+    emitter.method_exists
+  end
+
   describe "Emits events" do
     before do
       emitter.dispatcher.add_listener(listener)
