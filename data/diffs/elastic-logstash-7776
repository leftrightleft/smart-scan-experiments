diff --git a/logstash-core/src/main/java/org/logstash/common/io/DeadLetterQueueReader.java b/logstash-core/src/main/java/org/logstash/common/io/DeadLetterQueueReader.java
index fa8e22714ed..c228fd3632d 100644
--- a/logstash-core/src/main/java/org/logstash/common/io/DeadLetterQueueReader.java
+++ b/logstash-core/src/main/java/org/logstash/common/io/DeadLetterQueueReader.java
@@ -18,6 +18,7 @@
  */
 package org.logstash.common.io;
 
+import java.io.Closeable;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 import org.logstash.DLQEntry;
@@ -39,7 +40,7 @@
 import static java.nio.file.StandardWatchEventKinds.ENTRY_DELETE;
 import static org.logstash.common.io.DeadLetterQueueWriter.getSegmentPaths;
 
-public class DeadLetterQueueReader {
+public final class DeadLetterQueueReader implements Closeable {
     private static final Logger logger = LogManager.getLogger(DeadLetterQueueReader.class);
 
     private RecordIOReader currentReader;
@@ -142,6 +143,7 @@ public long getCurrentPosition() {
         return currentReader.getChannelPosition();
     }
 
+    @Override
     public void close() throws IOException {
         if (currentReader != null) {
             currentReader.close();
diff --git a/logstash-core/src/main/java/org/logstash/common/io/DeadLetterQueueWriter.java b/logstash-core/src/main/java/org/logstash/common/io/DeadLetterQueueWriter.java
index 9fe828a7806..5e1f287bb2d 100644
--- a/logstash-core/src/main/java/org/logstash/common/io/DeadLetterQueueWriter.java
+++ b/logstash-core/src/main/java/org/logstash/common/io/DeadLetterQueueWriter.java
@@ -18,6 +18,7 @@
  */
 package org.logstash.common.io;
 
+import java.io.Closeable;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 import org.logstash.DLQEntry;
@@ -37,7 +38,7 @@
 
 import static org.logstash.common.io.RecordIOWriter.RECORD_HEADER_SIZE;
 
-public class DeadLetterQueueWriter {
+public final class DeadLetterQueueWriter implements Closeable {
 
     private static final Logger logger = LogManager.getLogger(DeadLetterQueueWriter.class);
     private static final long MAX_SEGMENT_SIZE_BYTES = 10 * 1024 * 1024;
@@ -143,6 +144,7 @@ private void innerWriteEntry(DLQEntry entry) throws IOException {
         currentQueueSize.add(currentWriter.writeEvent(record));
     }
 
+    @Override
     public synchronized void close() throws IOException {
         this.lock.release();
         if (currentWriter != null) {
diff --git a/logstash-core/src/main/java/org/logstash/common/io/RecordIOReader.java b/logstash-core/src/main/java/org/logstash/common/io/RecordIOReader.java
index 1ccce42a735..2dea36ac3ca 100644
--- a/logstash-core/src/main/java/org/logstash/common/io/RecordIOReader.java
+++ b/logstash-core/src/main/java/org/logstash/common/io/RecordIOReader.java
@@ -18,6 +18,7 @@
  */
 package org.logstash.common.io;
 
+import java.io.Closeable;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.nio.channels.ClosedByInterruptException;
@@ -36,7 +37,7 @@
 
 /**
  */
-public class RecordIOReader {
+public final class RecordIOReader implements Closeable {
 
     private final FileChannel channel;
     private final ByteBuffer currentBlock;
@@ -228,6 +229,7 @@ public byte[] readEvent() throws IOException {
         }
     }
 
+    @Override
     public void close() throws IOException {
         channel.close();
     }
diff --git a/logstash-core/src/main/java/org/logstash/common/io/RecordIOWriter.java b/logstash-core/src/main/java/org/logstash/common/io/RecordIOWriter.java
index 7bd8f56d543..d8bbcb562e6 100644
--- a/logstash-core/src/main/java/org/logstash/common/io/RecordIOWriter.java
+++ b/logstash-core/src/main/java/org/logstash/common/io/RecordIOWriter.java
@@ -18,6 +18,7 @@
  */
 package org.logstash.common.io;
 
+import java.io.Closeable;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.nio.channels.FileChannel;
@@ -63,7 +64,7 @@
  *           by a final END record type.
  *   END: The final record segment of an LS Event, the final record representing the end of an LS Event.
  */
-public class RecordIOWriter {
+public final class RecordIOWriter implements Closeable {
 
     private final FileChannel channel;
     private int posInBlock;
@@ -139,6 +140,7 @@ public long writeEvent(byte[] eventArray) throws IOException {
         return channel.position() - startPosition;
     }
 
+    @Override
     public void close() throws IOException {
         channel.close();
     }
