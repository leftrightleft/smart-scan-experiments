diff --git a/docs/index.asciidoc b/docs/index.asciidoc
index aaa9321cb0d..8b052cdf708 100644
--- a/docs/index.asciidoc
+++ b/docs/index.asciidoc
@@ -257,12 +257,15 @@ include::static/maintainer-guide.asciidoc[]
 
 // Submitting a Plugin
 
-:edit_url: https://github.com/elastic/logstash/edit/{branch}/docs/static/submitting-a-plugin.asciidoc
+:edit_url!:
 include::static/submitting-a-plugin.asciidoc[]
 
+:edit_url!:
+include::static/listing-a-plugin.asciidoc[]
+
 // Contributing to Logstash - JAVA EDITION
 
-:edit_url: https://github.com/elastic/logstash/edit/{branch}/docs/static/contributing-java-plugin.asciidoc
+:edit_url!:
 include::static/contributing-java-plugin.asciidoc[]
 
 // Glossary of Terms
diff --git a/docs/static/contributing-java-plugin.asciidoc b/docs/static/contributing-java-plugin.asciidoc
index 45cb134b987..2e4b2cba280 100644
--- a/docs/static/contributing-java-plugin.asciidoc
+++ b/docs/static/contributing-java-plugin.asciidoc
@@ -5,8 +5,7 @@ Now you can write your own Java plugin for use with {ls}.
 We have provided instructions and GitHub examples to give
 you a head start. 
 
-Native support for Java plugins in {ls} consists of several components
-including:
+Native support for Java plugins in {ls} consists of several components:
 
 * Extensions to the Java execution engine to support running Java plugins in
 Logstash pipelines
@@ -17,7 +16,7 @@ implementations of API interfaces outside that package. The implementation of
 classes outside of the API package may change at any time.
 * Tooling to automate the packaging and deployment of Java plugins in Logstash.
 
-[float]
+[discrete]
 === Process overview
 Here are the steps:
 
diff --git a/docs/static/contributing-to-logstash.asciidoc b/docs/static/contributing-to-logstash.asciidoc
index d5102fbf574..535d5993e9f 100644
--- a/docs/static/contributing-to-logstash.asciidoc
+++ b/docs/static/contributing-to-logstash.asciidoc
@@ -3,14 +3,14 @@
 
 You can add your own input, codec, filter, or output plugins to Logstash. 
 
-[float]
+[discrete]
 === Adding plugins
 
 Plugins can be developed and deployed independently of the Logstash
 core. Here are some documents to guide you through the process of coding and
 deploying your own plugin:
 
-* <<plugin-generator,Generating a New Plugin>>
+* <<plugin-generator,Generating a new plugin>>
 * <<input-new-plugin,How to write a Logstash input plugin>>
 * <<codec-new-plugin,How to write a Logstash codec plugin>>
 * <<filter-new-plugin,How to write a Logstash filter plugin>>
@@ -20,22 +20,7 @@ deploying your own plugin:
 * <<community-maintainer,Community Maintainer's Guide>>
 * <<submitting-plugin,Submitting a Plugin>>
 
-[float]
-==== Plugin Shutdown APIs
-
-You have three options for shutting down a plugin: `stop`, `stop?`, and `close`.
-
-* Call the `stop` method from outside the plugin thread. This method signals the plugin to stop.
-* The `stop?` method returns `true` when the `stop` method has already been called for that plugin.
-* The `close` method performs final bookkeeping and cleanup after the plugin's `run` method and the plugin's thread both
-exit. The `close` method is a a new name for the method known as `teardown` in previous versions of Logstash.
-
-The `shutdown`, `finished`, `finished?`, `running?`, and `terminating?` methods are redundant and no longer present in the
-Plugin Base class.
-
-Sample code for the plugin shutdown APIs is https://github.com/logstash-plugins/logstash-input-example/blob/master/lib/logstash/inputs/example.rb[available].
-
-[float]
+[discrete]
 === Extending Logstash core
 
 We also welcome contributions and bug fixes to the Logstash core feature set.
diff --git a/docs/static/doc-for-plugin.asciidoc b/docs/static/doc-for-plugin.asciidoc
index fc549ab1a41..7ad92408adf 100644
--- a/docs/static/doc-for-plugin.asciidoc
+++ b/docs/static/doc-for-plugin.asciidoc
@@ -1,17 +1,23 @@
 [[plugin-doc]]
 === Documenting your plugin
 
+Documentation is a required component of your plugin.
 Quality documentation with good examples contributes to the adoption of your plugin.
 
-The documentation that you write for your plugin will be generated and published
-in the {logstash-ref}/index.html[Logstash Reference] and the
-{lsplugindocs}[Logstash Versioned Plugin Reference].
+.Plugin listing in {ls} Reference
+[NOTE]
+We can list your plugin in the {logstash-ref}/index.html[Logstash Reference] if
+it meets our requirements and quality standards. When we list your plugin, we point to
+your documentation--a readme.md, docs/index.asciidoc, or both--in your plugin repo.
+For more info on this option, see <<plugin-listing>>. 
 
+The following sections contain guidelines for documenting plugins hosted in
+the Github https://github.com/logstash-plugins/[logstash-plugins] organization. 
+ 
 [[plugin-doc-file]]
 ==== Documentation file
 
-Documentation is a required component of your plugin.
-It belongs in a single file called 'docs/index.asciidoc'.
+Documentation belongs in a single file called 'docs/index.asciidoc'.
 The <<plugin-generator,plugin generation utility>> creates a starter file for you.  
 
 [[heading-ids]]
@@ -65,7 +71,6 @@ Points to this heading in the same file:
 ==== Configuration models
 ----------------------------------
 
-
 ===== Link to content in the Logstash Reference Guide
 
 Use external link syntax for links that point to documentation for other plugins or content in the Logstash Reference Guide.
@@ -85,7 +90,6 @@ Use external link syntax for links that point to documentation for other plugins
 
 If you don't specify link text, the URL is used as the link text.
 
-
 *Examples*
 
 If you want your link to display as {logstash-ref}/getting-started-with-logstash.html, use this format:
@@ -94,14 +98,12 @@ If you want your link to display as {logstash-ref}/getting-started-with-logstash
 {logstash-ref}/getting-started-with-logstash.html
 -----
 
-
 If you want your link to display as {logstash-ref}/getting-started-with-logstash.html[Getting Started with Logstash], use this format:
 [source,txt]
 -----
 {logstash-ref}/getting-started-with-logstash.html[Getting Started with Logstash]
 -----
 
-
 ===== Link to data type descriptions
 
 We make an exception for links that point to data type descriptions,
@@ -109,7 +111,6 @@ such as `<<boolean,boolean>>`, because they are used so frequently.
 We have a cleanup step in the conversion script that converts the links to the
 correct syntax. 
 
-
 [[format-code]]
 ==== Code samples
 
diff --git a/docs/static/include/pluginbody.asciidoc b/docs/static/include/pluginbody.asciidoc
index 507822e2f15..29c31f46fd5 100644
--- a/docs/static/include/pluginbody.asciidoc
+++ b/docs/static/include/pluginbody.asciidoc
@@ -21,6 +21,7 @@ Each Logstash plugin lives in its own GitHub repository. To create a new reposit
 . Click the green **New** button in the upper right.
 . Specify the following settings for your new repo:
 ** **Repository name** -- a unique name of the form +logstash-pass:attributes[{plugintype}]-pluginname+.
+If the plugin name is more than one word, separate words with underscores.
 ** **Public or Private** -- your choice, but the repository must be Public if you want to submit it as an official plugin.
 ** **Initialize this repository with a README** -- enables you to immediately clone the repository to your computer.
 . Click **Create Repository**.
diff --git a/docs/static/listing-a-plugin.asciidoc b/docs/static/listing-a-plugin.asciidoc
new file mode 100644
index 00000000000..2ca9cb2cb8a
--- /dev/null
+++ b/docs/static/listing-a-plugin.asciidoc
@@ -0,0 +1,38 @@
+[[plugin-listing]]
+=== Listing your plugin
+
+The {logstash-ref}[Logstash Reference] is the first place {ls} users look for
+plugins and documentation. If your plugin meets the quality and acceptance
+guidelines, we can list it in the guide.
+
+The plugin source and readme will continue to live in your repo, and we will
+direct users there. 
+
+[discrete]
+[[plugin-acceptance]]
+==== Acceptance guidelines
+
+* **Consistency.** Your plugin must be consistent in quality and naming conventions
+used by other plugins. The plugin name must be unique and in this format:
+`logstash-plugintype-pluginname`. If the plugin name is more than one word,
+separate words with underscores. Example: _logstash-output-elastic_app_search_
+* **Documentation.** Documentation is a required component of your plugin.
+When we list your plugin, we point to your documentation--a readme.md,
+docs/index.asciidoc, or both--in your plugin repo.
+* **Code Review.** Your plugin must be reviewed by members of the community for
+coherence, quality, readability, stability and security.
+* **Tests.** Your plugin must contain tests to be accepted. You can
+refer to http://betterspecs.org/ for examples. 
+** Step 1. Enable travis on your account
+** Step 2. Import our standard travis.yml
+https://github.com/logstash-plugins/.ci/blob/1.x/travis/travis.yml, as shown in the
+https://github.com/logstash-plugins/logstash-filter-fingerprint/blob/master/.travis.yml[fingerprint
+filter example].
+** Step 3. Have specs in the spec folder.
+
+If you would like to have your plugin included in the {logstash-ref}[Logstash
+Reference], create a new https://github.com/elasticsearch/logstash/issues[issue]
+in the Logstash repository. 
+
+TODO:  Should we request that they apply labels for faster service?
+[Doc][PluginListing], for example.
diff --git a/docs/static/plugin-generator.asciidoc b/docs/static/plugin-generator.asciidoc
index 8b30bf31bf7..369b0ce240d 100644
--- a/docs/static/plugin-generator.asciidoc
+++ b/docs/static/plugin-generator.asciidoc
@@ -1,9 +1,11 @@
 [[plugin-generator]]
-=== Generating Plugins
+=== Generating plugins
 
-You can now create your own Logstash plugin in seconds! The generate subcommand of `bin/logstash-plugin` creates the foundation 
-for a new Logstash plugin with templatized files. It creates the correct directory structure, gemspec files, and dependencies so you 
-can start adding custom code to process data with Logstash.
+You can create your own Logstash plugin in seconds! The generate subcommand of
+`bin/logstash-plugin` creates the foundation  for a new Logstash plugin with
+templatized files. It creates the correct directory structure, gemspec files,
+and dependencies so you can start adding custom code to process data with
+Logstash.
 
 **Example Usage**
 
@@ -14,6 +16,6 @@ bin/logstash-plugin generate --type input --name xkcd --path ~/ws/elastic/plugin
 
 * `--type`: Type of plugin - input, filter, output, or codec
 * `--name`: Name for the new plugin
-* `--path`: Directory path where the new plugin structure will be created. If not specified, it will be
-created in the current directory.
+* `--path`: Directory path where the new plugin structure will be created. 
+If not specified, it will be created in the current directory.
 
diff --git a/docs/static/plugin-manager.asciidoc b/docs/static/plugin-manager.asciidoc
index 8e2c0c3fce7..de7ab6aeeb4 100644
--- a/docs/static/plugin-manager.asciidoc
+++ b/docs/static/plugin-manager.asciidoc
@@ -6,7 +6,7 @@
 ====
 Apple's rollout of stricter notarization requirements affected the notarization
 of the {version} {ls} artifacts. If macOS Catalina displays a dialog when you
-first run {ls} that interrupts it, you will need to take an action to allow it
+first run {ls} that interrupts it, you need to take an action to allow it
 to run.
 To prevent Gatekeeper checks on the {ls} files, run the following command on the
 downloaded `.tar.gz` archive or the directory to which was extracted:
@@ -98,6 +98,7 @@ bin/logstash-plugin install logstash-input-github
 
 After a plugin is successfully installed, you can use it in your configuration file.
 
+
 [discrete]
 [[updating-plugins]]
 === Updating plugins
@@ -110,6 +111,25 @@ Using the update subcommand you can get the latest version of the plugin.
 bin/logstash-plugin update <1>
 bin/logstash-plugin update logstash-input-github <2>
 ----------------------------------
+
+[discrete]
+[[plugin-shutdown]]
+==== Plugin Shutdown APIs
+
+You have three options for shutting down a plugin: `stop`, `stop?`, and `close`.
+
+* Call the `stop` method from outside the plugin thread. This method signals the plugin to stop.
+* The `stop?` method returns `true` when the `stop` method has already been called for that plugin.
+* The `close` method performs final bookkeeping and cleanup after the plugin's `run` method and the plugin's thread both
+exit. The `close` method is a a new name for the method known as `teardown` in previous versions of Logstash.
+
+The `shutdown`, `finished`, `finished?`, `running?`, and `terminating?` methods are redundant and no longer present in the
+Plugin Base class.
+
+Sample code for the plugin shutdown APIs is https://github.com/logstash-plugins/logstash-input-example/blob/master/lib/logstash/inputs/example.rb[available].
+
+
+=======
 <1> updates all installed plugins
 <2> updates only the plugin you specify
 
@@ -137,6 +157,7 @@ locally built plugin which is packaged as a ruby gem. Using a file location:
 bin/logstash-plugin install /path/to/logstash-output-kafka-1.0.0.gem
 ----------------------------------
 
+
 [discrete]
 [[installing-local-plugins-path]]
 ==== Advanced: Using `--path.plugins`
diff --git a/docs/static/submitting-a-plugin.asciidoc b/docs/static/submitting-a-plugin.asciidoc
index 1a9030aab58..bd77365c7d3 100644
--- a/docs/static/submitting-a-plugin.asciidoc
+++ b/docs/static/submitting-a-plugin.asciidoc
@@ -1,28 +1,28 @@
 [[submitting-plugin]]
-=== Submitting your plugin to RubyGems.org and the logstash-plugins repository
+=== Submitting your plugin to RubyGems.org
 
-Logstash uses http://rubygems.org[RubyGems.org] as its repository for all plugin
-artifacts. Once you have developed your new plugin, you can make it available to
-Logstash users by simply publishing it to RubyGems.org.
+Logstash uses http://rubygems.org[RubyGems.org] as the repository for all plugin
+artifacts. After you have developed your new plugin, you can make it available to
+Logstash users by publishing it to RubyGems.org.
 
 ==== Licensing
 Logstash and all its plugins are licensed under
 https://github.com/elasticsearch/logstash/blob/master/LICENSE[Apache License, version 2 ("ALv2")].
-If you make your plugin publicly available via http://rubygems.org[RubyGems.org],
-please make sure to have this line in your gemspec:
+If you make your plugin publicly available from http://rubygems.org[RubyGems.org],
+be sure that your gemspec includes this line:
 
 * `s.licenses = ['Apache License (2.0)']`
 
-==== Publishing to http://rubygems.org[RubyGems.org]
+==== Publishing to RubyGems.org
 
-To begin, you’ll need an account on RubyGems.org
+You’ll need an account on http://rubygems.org[RubyGems.org].
 
-* https://rubygems.org/sign_up[Sign-up for a RubyGems account].
+* https://rubygems.org/sign_up[Sign-up] for a RubyGems account.
 
 After creating an account,
 http://guides.rubygems.org/rubygems-org-api/#api-authorization[obtain] an API
 key from RubyGems.org. By default, RubyGems uses the file `~/.gem/credentials`
-to store your API key. These credentials will be used to publish the gem.
+to store your API key. These credentials are used to publish the gem.
 Replace `username` and `password` with the credentials you created at
 RubyGems.org:
 
@@ -32,7 +32,7 @@ curl -u username:password https://rubygems.org/api/v1/api_key.yaml > ~/.gem/cred
 chmod 0600 ~/.gem/credentials
 ----------------------------------
 
-Before proceeding, make sure you have the right version in your gemspec file
+Make sure that you have the right version in your gemspec file
 and commit your changes.
 
 * `s.version = '0.1.0'`
@@ -65,43 +65,7 @@ by running:
 [source,sh]
 [subs="attributes"]
 ----------------------------------
-bin/plugin install logstash-{plugintype}-mypluginname
+bin/plugin install logstash-<plugintype>-<mypluginname>
 ----------------------------------
-
-==== Contributing your source code to https://github.com/logstash-plugins[logstash-plugins]
-
-It is not required to contribute your source code to
-https://github.com/logstash-plugins[logstash-plugins] github organization, but
-we always welcome new plugins!
-
-==== Benefits
-
-Some of the many benefits of having your plugin in the logstash-plugins
-repository are:
-
-* **Discovery** Your plugin will appear in the {logstash-ref}[Logstash Reference],
-where Logstash users look first for plugins and documentation.
-* **Documentation** Your plugin documentation will automatically be added to the 
-{logstash-ref}[Logstash Reference].
-* **Testing** With our testing infrastructure, your plugin will be continuously
-tested against current and future releases of Logstash.  As a result, users will
-have the assurance that if incompatibilities arise, they will be quickly
-discovered and corrected.
-
-==== Acceptance Guidelines
-
-* **Code Review** Your plugin must be reviewed by members of the community for
-coherence, quality, readability, stability and security.
-* **Tests** Your plugin must contain tests to be accepted.  These tests are also
-subject to code review for scope and completeness.  It's ok if you don't know
-how to write tests -- we will guide you. We are working on publishing a guide to
-creating tests for Logstash which will make it easier.  In the meantime, you can
-refer to http://betterspecs.org/ for examples.
-
-To begin migrating your plugin to logstash-plugins, simply create a new
-https://github.com/elasticsearch/logstash/issues[issue] in
-the Logstash repository. When the acceptance guidelines are completed, we will
-facilitate the move to the logstash-plugins organization using the recommended
-https://help.github.com/articles/transferring-a-repository/#transferring-from-a-user-to-an-organization[github process].
-
-
+Where <plugintype> is `input`, `output`, `filter`, or `codec`, and
+<mypluginname> is the name of your new plugin.
