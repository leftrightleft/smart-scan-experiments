diff --git a/docs/configuration.md b/docs/configuration.md
index 25ea556b11b..0cb63ca92ed 100644
--- a/docs/configuration.md
+++ b/docs/configuration.md
@@ -27,7 +27,8 @@ Example:
 
 ## Filters and Ordering
 
-For a given event, are applied in the order of appearance in the config file.
+For a given event, are applied in the order of appearance in the
+configuration file.
 
 ## Comments
 
@@ -57,22 +58,24 @@ that plugin. For example, how about two file inputs:
       }
     }
 
-The above configures a two file separate inputs. Both set two config settings
-each: path and type. Each plugin has different settings for configuring it,
-seek the documentation for your plugin to learn what settings are available and
-what they mean. For example, the [file input][fileinput] documentation will
-explain the meanings of the path and type settings.
+The above configures a two file separate inputs. Both set two
+configuration settings each: path and type. Each plugin has different
+settings for configuring it, seek the documentation for your plugin to
+learn what settings are available and what they mean. For example, the
+[file input][fileinput] documentation will explain the meanings of the
+path and type settings.
 
 [fileinput]: inputs/file
 
 ## Value Types
 
-The documentation for a plugin may say that a config field has a certain type.
-Examples include boolean, string, array, number, hash, etc.
+The documentation for a plugin may say that a configuration field has a
+certain type.  Examples include boolean, string, array, number, hash,
+etc.
 
 ### <a name="boolean"></a>Boolean
 
-A boolean must be either true or false.
+A boolean must be either `true` or `false`.
 
 Examples:
 
@@ -98,7 +101,7 @@ Example:
 
 ### <a name="array"></a>Array
 
-An 'array' can be a single string value or multiple. If you specify the same
+An array can be a single string value or multiple. If you specify the same
 field multiple times, it appends to the array.
 
 Examples:
@@ -110,17 +113,18 @@ The above makes 'path' a 3-element array including all 3 strings.
 
 ### <a name="hash"></a>Hash
 
-A 'hash' is basically the same syntax as Ruby hashes. 
-The 'key' and 'value' are simply pairs, such as:
+A hash is basically the same syntax as Ruby hashes. 
+The key and value are simply pairs, such as:
 
     match => { "field1" => "value1", "field2" => "value2", ... }
 
 ## Conditionals
 
-Sometimes you only want a filter or output to process an even under certain conditions. For that, you'll want to use a conditional!
+Sometimes you only want a filter or output to process an even under
+certain conditions. For that, you'll want to use a conditional!
 
 Conditionals in logstash look and act the same way they do in programming
-languages. You have 'if' 'else if' and 'else' statements. Conditionals may be
+languages. You have `if`, `else if` and `else` statements. Conditionals may be
 nested if you need that.
 
 The syntax is follows:
@@ -149,10 +153,11 @@ The following unary operators are supported:
 
 * !
 
-Expressions may contain expresions. Expressions may be negated with '!'.
-Expressions may be grouped with parenthises (...).
+Expressions may contain expressions. Expressions may be negated with `!`.
+Expressions may be grouped with parentheses `(...)`.
 
-For example, if we want to remove the field 'secret' if the field 'action' has a value of "login":
+For example, if we want to remove the field `secret` if the field
+`action` has a value of `login`:
 
     filter {
       if [action] == "login" {
@@ -160,9 +165,9 @@ For example, if we want to remove the field 'secret' if the field 'action' has a
       }
     }
 
-The above uses the field reference syntax to get the value of the 'action'
-field. It is compared against the text "login" and, when equal, allows the
-mutate filter to do delete the field named 'secret'
+The above uses the field reference syntax to get the value of the
+`action` field. It is compared against the text `login` and, when equal,
+allows the mutate filter to do delete the field named `secret`
 
 How about a more complex example?
 
