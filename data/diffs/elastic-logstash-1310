diff --git a/lib/logstash/inputs/gelf.rb b/lib/logstash/inputs/gelf.rb
index 777c3ce87da..3fcb0d314c9 100644
--- a/lib/logstash/inputs/gelf.rb
+++ b/lib/logstash/inputs/gelf.rb
@@ -14,7 +14,8 @@ class LogStash::Inputs::Gelf < LogStash::Inputs::Base
   config_name "gelf"
   milestone 2
 
-  default :codec, "plain"
+  # The gelf payload is utf-8-encoded json by specification, so this should normally not be changed
+  default :codec, "json"
 
   # The IP address or hostname to listen on.
   config :host, :validate => :string, :default => "0.0.0.0"
@@ -89,16 +90,17 @@ def udp_listener(output_queue)
       # Gelfd parser outputs null if it received and cached a non-final chunk
       next if data.nil?
 
-      event = LogStash::Event.new(JSON.parse(data))
-      event["source_host"] = client[3]
-      if event["timestamp"].is_a?(Numeric)
-        event["@timestamp"] = Time.at(event["timestamp"]).gmtime
-        event.remove("timestamp")
+      @codec.decode(data) do |event| 
+        event["source_host"] = client[3]
+        if event["timestamp"].is_a?(Numeric)
+          event["@timestamp"] = Time.at(event["timestamp"]).gmtime
+          event.remove("timestamp")
+        end
+        remap_gelf(event) if @remap
+        strip_leading_underscore(event) if @strip_leading_underscore
+        decorate(event)
+        output_queue << event
       end
-      remap_gelf(event) if @remap
-      strip_leading_underscore(event) if @strip_leading_underscore
-      decorate(event)
-      output_queue << event
     end
   rescue LogStash::ShutdownSignal
     # Do nothing, shutdown.
@@ -131,5 +133,5 @@ def strip_leading_underscore(event)
        event[key[1..-1]] = event[key]
        event.remove(key)
      end
-  end # deef removing_leading_underscores
+  end # def strip_leading_underscore
 end # class LogStash::Inputs::Gelf
diff --git a/spec/inputs/gelf.rb b/spec/inputs/gelf.rb
index e2cab136d36..31eadb02883 100644
--- a/spec/inputs/gelf.rb
+++ b/spec/inputs/gelf.rb
@@ -6,7 +6,7 @@
 
   describe "reads chunked gelf messages " do
     port = 12209
-    host = "127.0.0.1"
+    host = "127.0.111.1"
     chunksize = 1420
     gelfclient = GELF::Notifier.new(host,port,chunksize)
 
@@ -34,7 +34,8 @@
       [ "hello", 
         "world", 
         large_random, 
-        "we survived gelf!" 
+        "we survived gelf!",
+        "some UTF chars too: h\u{20AC}ll\u{C3B3} japale\u{C3B1}o ..."
       ].each do |m| 
   	gelfclient.notify!( "short_message" => m )
         # poll at most 10 times 
