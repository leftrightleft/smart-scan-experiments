diff --git a/logstash-core/lib/logstash/elasticsearch_client.rb b/logstash-core/lib/logstash/elasticsearch_client.rb
index 7953d4f2781..a59d72e3c8b 100644
--- a/logstash-core/lib/logstash/elasticsearch_client.rb
+++ b/logstash-core/lib/logstash/elasticsearch_client.rb
@@ -18,6 +18,7 @@
 require "elasticsearch"
 require "elasticsearch/transport/transport/http/manticore"
 require 'logstash/util/manticore_ssl_config_helper'
+require 'logstash/util/password'
 
 module LogStash class ElasticsearchClient
   include LogStash::Util::Loggable
diff --git a/logstash-core/lib/logstash/modules/kibana_client.rb b/logstash-core/lib/logstash/modules/kibana_client.rb
index 4de1205dddc..c4b624cc420 100644
--- a/logstash-core/lib/logstash/modules/kibana_client.rb
+++ b/logstash-core/lib/logstash/modules/kibana_client.rb
@@ -18,6 +18,7 @@
 require "logstash/json"
 require "manticore"
 require 'logstash/util/manticore_ssl_config_helper'
+require 'logstash/util/password'
 
 module LogStash module Modules class KibanaClient
   include LogStash::Util::Loggable
diff --git a/logstash-core/lib/logstash/util/substitution_variables.rb b/logstash-core/lib/logstash/util/substitution_variables.rb
index ed24a8ec428..90c8962f090 100644
--- a/logstash-core/lib/logstash/util/substitution_variables.rb
+++ b/logstash-core/lib/logstash/util/substitution_variables.rb
@@ -18,6 +18,7 @@
 java_import "org.logstash.secret.store.SecretStoreExt"
 
 require_relative 'lazy_singleton'
+require_relative 'password'
 
 module ::LogStash::Util::SubstitutionVariables
 
diff --git a/qa/integration/fixtures/keystore_spec.yml b/qa/integration/fixtures/keystore_spec.yml
new file mode 100644
index 00000000000..cbfc784af81
--- /dev/null
+++ b/qa/integration/fixtures/keystore_spec.yml
@@ -0,0 +1,3 @@
+---
+services:
+  - logstash
diff --git a/qa/integration/fixtures/logstash.keystore b/qa/integration/fixtures/logstash.keystore
new file mode 100644
index 00000000000..694f62f19fb
Binary files /dev/null and b/qa/integration/fixtures/logstash.keystore differ
diff --git a/qa/integration/specs/cli/keystore_spec.rb b/qa/integration/specs/cli/keystore_spec.rb
new file mode 100644
index 00000000000..054207c74f2
--- /dev/null
+++ b/qa/integration/specs/cli/keystore_spec.rb
@@ -0,0 +1,67 @@
+# Licensed to Elasticsearch B.V. under one or more contributor
+# license agreements. See the NOTICE file distributed with
+# this work for additional information regarding copyright
+# ownership. Elasticsearch B.V. licenses this file to you under
+# the Apache License, Version 2.0 (the "License"); you may
+# not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#  http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+
+require_relative "../../framework/fixture"
+require_relative "../../framework/settings"
+require_relative "../../services/logstash_service"
+# require_relative "../../framework/helpers"
+require "logstash/devutils/rspec/spec_helper"
+require "stud/temporary"
+require "fileutils"
+require "open3"
+
+describe "CLI > logstash-keystore" do
+
+  before(:all) do
+    @fixture = Fixture.new(__FILE__)
+    @logstash = @fixture.get_service("logstash")
+  end
+
+  context 'create' do
+
+    before do
+      FileUtils.rm_f File.join(@logstash.logstash_home, 'config', 'logstash.keystore')
+    end
+
+    it "works" do
+      keystore_list = @logstash.run_cmd(['bin/logstash-keystore', 'create'], true, 'LOGSTASH_KEYSTORE_PASS' => 'PaSSWD')
+      expect(keystore_list.stderr_and_stdout).to_not match(/ERROR/)
+      expect(keystore_list.stderr_and_stdout).to include('Created Logstash keystore')
+    end
+
+  end
+
+  context 'list' do
+
+    before do
+      keystore = File.expand_path(File.join(File.dirname(__FILE__), "..", "..", "fixtures", "logstash.keystore"))
+      FileUtils.cp keystore, File.join(@logstash.logstash_home, 'config')
+    end
+
+    after do
+      FileUtils.rm_f File.join(@logstash.logstash_home, 'config', 'logstash.keystore')
+    end
+
+    it "works" do
+      keystore_list = @logstash.run_cmd(['bin/logstash-keystore', 'list'], true, 'LOGSTASH_KEYSTORE_PASS' => 'PaSSWD')
+      expect(keystore_list.stderr_and_stdout).to_not match(/ERROR/)
+      expect(keystore_list.stderr_and_stdout).to include('foo') # contains foo: bar
+    end
+
+  end
+
+end
