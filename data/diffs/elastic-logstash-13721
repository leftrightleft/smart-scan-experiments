diff --git a/logstash-core/src/main/java/org/logstash/ackedqueue/PqCheck.java b/logstash-core/src/main/java/org/logstash/ackedqueue/PqCheck.java
index 512ea6a81b3..65c6b74250a 100644
--- a/logstash-core/src/main/java/org/logstash/ackedqueue/PqCheck.java
+++ b/logstash-core/src/main/java/org/logstash/ackedqueue/PqCheck.java
@@ -61,7 +61,7 @@ private static void checkPQ(final Path path) throws IOException {
         }
         System.out.println(String.format("Checking queue dir: %s", path));
         try (
-            DirectoryStream<Path> checkpoints = Files.newDirectoryStream(path, "checkpoint.*")
+            DirectoryStream<Path> checkpoints = Files.newDirectoryStream(path, "checkpoint.{[0-9]*,head}")
         ) {
             StreamSupport.stream(
                 checkpoints.spliterator(), true
diff --git a/logstash-core/src/main/java/org/logstash/ackedqueue/PqRepair.java b/logstash-core/src/main/java/org/logstash/ackedqueue/PqRepair.java
index ab91a3b9829..110145563ba 100644
--- a/logstash-core/src/main/java/org/logstash/ackedqueue/PqRepair.java
+++ b/logstash-core/src/main/java/org/logstash/ackedqueue/PqRepair.java
@@ -62,6 +62,9 @@ public static void repair(final Path path) throws IOException {
                 String.format("Given PQ path %s is not a directory.", path)
             );
         }
+
+        deleteTempCheckpoint(path);
+
         final Map<Integer, Path> pageFiles = new HashMap<>();
         try (final DirectoryStream<Path> pfs = Files.newDirectoryStream(path, "page.*")) {
             pfs.forEach(p -> pageFiles.put(
@@ -87,6 +90,15 @@ public static void repair(final Path path) throws IOException {
         fixMissingCheckpoints(pageFiles, checkpointFiles);
     }
 
+    private static void deleteTempCheckpoint(final Path root) throws IOException {
+        try (final DirectoryStream<Path> cpTmp = Files.newDirectoryStream(root, "checkpoint.*.tmp")) {
+            for (Path cpTmpPath: cpTmp) {
+                LOGGER.info("Deleting temp checkpoint {}", cpTmpPath);
+                Files.delete(cpTmpPath);
+            }
+        }
+    }
+
     private static void deleteFullyAcked(final Path root, final Map<Integer, Path> pages,
         final Map<Integer, Path> checkpoints) throws IOException {
         final String headCpName = "checkpoint.head";
diff --git a/logstash-core/src/test/java/org/logstash/ackedqueue/PqRepairTest.java b/logstash-core/src/test/java/org/logstash/ackedqueue/PqRepairTest.java
index 63272952e26..e8dc6eb062d 100644
--- a/logstash-core/src/test/java/org/logstash/ackedqueue/PqRepairTest.java
+++ b/logstash-core/src/test/java/org/logstash/ackedqueue/PqRepairTest.java
@@ -95,6 +95,14 @@ public void testRemoveUselessCheckpoint() throws Exception {
         verifyQueue(0, 1, 4, 5);
     }
 
+    @Test
+    public void testRemoveTempCheckPoint() throws Exception {
+        Files.createFile(dataPath.resolve("checkpoint.head.tmp"));
+        Files.createFile(dataPath.resolve("checkpoint.1.tmp"));
+        PqRepair.repair(dataPath);
+        verifyQueue();
+    }
+
     private void verifyQueue() throws IOException {
         verifyQueue(IntStream.range(0, 6).toArray());
     }
