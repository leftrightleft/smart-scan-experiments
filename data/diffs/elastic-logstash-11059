diff --git a/logstash-core/lib/logstash/api/commands/stats.rb b/logstash-core/lib/logstash/api/commands/stats.rb
index 461644b7a2b..a473d5ed034 100644
--- a/logstash-core/lib/logstash/api/commands/stats.rb
+++ b/logstash-core/lib/logstash/api/commands/stats.rb
@@ -65,8 +65,8 @@ def pipeline(pipeline_id = nil, opts={})
             service.agent,
             service.snapshot.metric_store,
             true).each_with_object({}) do |pipeline_stats, memo|
-              pipeline_id = pipeline_stats["id"].to_s
-              memo[pipeline_id] = pipeline_stats
+              p_id = pipeline_stats["id"].to_s
+              memo[p_id] = pipeline_stats
             end
 
           if pipeline_id.nil?
diff --git a/logstash-core/spec/logstash/api/commands/stats_spec.rb b/logstash-core/spec/logstash/api/commands/stats_spec.rb
index c1106d2f43b..ffe57e03574 100644
--- a/logstash-core/spec/logstash/api/commands/stats_spec.rb
+++ b/logstash-core/spec/logstash/api/commands/stats_spec.rb
@@ -143,8 +143,16 @@
         )
       end
     end
+    context "when using multiple pipelines" do
+      before(:each) do
+        expect(LogStash::Config::PipelinesInfo).to receive(:format_pipelines_info).and_return([
+          {"id" => :main},
+          {"id" => :secondary},
+        ])
+      end
+      it "contains metrics for all pipelines" do
+        expect(report.keys).to include(:main, :secondary)
+      end
+    end
   end
-
-
-
 end
diff --git a/logstash-core/spec/support/shared_contexts.rb b/logstash-core/spec/support/shared_contexts.rb
index 55ddfd7e9f4..b2ac83f9097 100644
--- a/logstash-core/spec/support/shared_contexts.rb
+++ b/logstash-core/spec/support/shared_contexts.rb
@@ -24,9 +24,12 @@
     settings.set("config.reload.automatic", false)
     @agent = make_test_agent(settings)
     @agent.execute
+    @pipelines_registry = LogStash::PipelinesRegistry.new
     pipeline_config = mock_pipeline_config(:main, "input { generator { id => '123' } } output { null {} }")
     pipeline_creator =  LogStash::PipelineAction::Create.new(pipeline_config, @agent.metric)
-    @pipelines_registry = LogStash::PipelinesRegistry.new
+    expect(pipeline_creator.execute(@agent, @pipelines_registry)).to be_truthy
+    pipeline_config = mock_pipeline_config(:secondary, "input { generator { id => '123' } } output { null {} }")
+    pipeline_creator =  LogStash::PipelineAction::Create.new(pipeline_config, @agent.metric)
     expect(pipeline_creator.execute(@agent, @pipelines_registry)).to be_truthy
   end
 
