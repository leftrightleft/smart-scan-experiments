diff --git a/lib/logstash/outputs/base.rb b/lib/logstash/outputs/base.rb
index e22b8a2ec5a..130f418b90a 100644
--- a/lib/logstash/outputs/base.rb
+++ b/lib/logstash/outputs/base.rb
@@ -45,6 +45,9 @@ class LogStash::Outputs::Base < LogStash::Plugin
   # be handled. Defaults to all.
   config :exclude_any, :validate => :boolean, :default => true
 
+  # Don't send events that have @timestamp older than specified number of seconds.
+  config :ignore_older_than, :validate => :number, :default => 0
+
   public
   def initialize(params)
     super
@@ -116,6 +119,11 @@ def output?(event)
       end
     end
 
+    if @ignore_older_than > 0 && Time.now - event.ruby_timestamp > @ignore_older_than
+      @logger.debug? and @logger.debug("Skipping metriks for old event", :event => event)
+      return
+    end
+
     return true
   end
 end # class LogStash::Outputs::Base
diff --git a/lib/logstash/outputs/statsd.rb b/lib/logstash/outputs/statsd.rb
index 8b4445129fd..5903395ebb7 100644
--- a/lib/logstash/outputs/statsd.rb
+++ b/lib/logstash/outputs/statsd.rb
@@ -61,9 +61,6 @@ class LogStash::Outputs::Statsd < LogStash::Outputs::Base
   # Enable debugging output?
   config :debug, :validate => :boolean, :default => false
 
-  # Don't send events that have @timestamp older than specified number of seconds.
-  config :ignore_older_than, :validate => :number, :default => 0
-
   public
   def register
     require "statsd"
@@ -74,12 +71,6 @@ def register
   def receive(event)
     return unless output?(event)
 
-    # TODO(piavlo): This should probably move to base output plugin?
-    if @ignore_older_than > 0 && Time.now - event.ruby_timestamp > @ignore_older_than
-      @logger.debug? and @logger.debug("Skipping metriks for old event", :event => event)
-      return
-    end
-
     @client.namespace = event.sprintf(@namespace) if not @namespace.empty?
     @logger.debug? and @logger.debug("Original sender: #{@sender}")
     sender = event.sprintf(@sender)
