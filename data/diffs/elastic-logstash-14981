diff --git a/logstash-core/src/main/java/org/logstash/common/io/DeadLetterQueueWriter.java b/logstash-core/src/main/java/org/logstash/common/io/DeadLetterQueueWriter.java
index c606484232d..81b24b68afa 100644
--- a/logstash-core/src/main/java/org/logstash/common/io/DeadLetterQueueWriter.java
+++ b/logstash-core/src/main/java/org/logstash/common/io/DeadLetterQueueWriter.java
@@ -388,7 +388,10 @@ private long deleteTailSegment(Path segment, String motivation) throws IOExcepti
     }
 
     private void updateOldestSegmentReference() throws IOException {
-        oldestSegmentPath = listSegmentPaths(this.queuePath).sorted().findFirst();
+        oldestSegmentPath = listSegmentPaths(this.queuePath)
+                .filter(p -> p.toFile().length() > 1) // take the files that have content to process
+                .sorted()
+                .findFirst();
         if (!oldestSegmentPath.isPresent()) {
             oldestSegmentTimestamp = Optional.empty();
             return;
@@ -409,14 +412,14 @@ private void updateOldestSegmentReference() throws IOException {
      * */
     private static Optional<Timestamp> readTimestampOfLastEventInSegment(Path segmentPath) throws IOException {
         final int lastBlockId = (int) Math.ceil(((Files.size(segmentPath) - VERSION_SIZE) / (double) BLOCK_SIZE)) - 1;
-        byte[] eventBytes;
+        byte[] eventBytes = null;
         try (RecordIOReader recordReader = new RecordIOReader(segmentPath)) {
             int blockId = lastBlockId;
-            do {
+            while (eventBytes == null && blockId >= 0) { // no event present in last block, try with the one before
                 recordReader.seekToBlock(blockId);
                 eventBytes = recordReader.readEvent();
                 blockId--;
-            } while (eventBytes == null && blockId >= 0); // no event present in last block, try with the one before
+            }
         } catch (NoSuchFileException nsfex) {
             // the segment file may have been removed by the clean consumed feature on the reader side
             return Optional.empty();
diff --git a/logstash-core/src/test/java/org/logstash/common/io/DeadLetterQueueWriterTest.java b/logstash-core/src/test/java/org/logstash/common/io/DeadLetterQueueWriterTest.java
index 5702d169a54..abeac640f7a 100644
--- a/logstash-core/src/test/java/org/logstash/common/io/DeadLetterQueueWriterTest.java
+++ b/logstash-core/src/test/java/org/logstash/common/io/DeadLetterQueueWriterTest.java
@@ -398,4 +398,14 @@ public void testDropEventCountCorrectlyNotEnqueuedEvents() throws IOException, I
             assertEquals(2, writeManager.getDroppedEvents());
         }
     }
+
+    @Test(expected = Test.None.class)
+    public void testInitializeWriterWith1ByteEntry() throws Exception {
+        Files.write(dir.resolve("1.log"), "1".getBytes());
+
+        DeadLetterQueueWriter writer = DeadLetterQueueWriter
+                .newBuilder(dir, 1_000, 100_000, Duration.ofSeconds(1))
+                .build();
+        writer.close();
+    }
 }
