diff --git a/lib/logstash/inputs/rabbitmq.rb b/lib/logstash/inputs/rabbitmq.rb
index 41924738874..1e2b130fa68 100644
--- a/lib/logstash/inputs/rabbitmq.rb
+++ b/lib/logstash/inputs/rabbitmq.rb
@@ -83,7 +83,6 @@ class LogStash::Inputs::RabbitMQ < LogStash::Inputs::Threadable
   config :passive, :validate => :boolean, :default => false
 
 
-
   #
   # (Optional) Exchange binding
   #
@@ -102,6 +101,9 @@ class LogStash::Inputs::RabbitMQ < LogStash::Inputs::Threadable
   # * Wildcards are not valid on direct exchanges.
   config :key, :validate => :string, :default => "logstash"
 
+  # If declare the queue or Use the existed queue without declaration
+  config :declare, :validate => :boolean, :default => true
+
 
   def initialize(params)
     params["codec"] = "json" if !params["codec"]
diff --git a/lib/logstash/inputs/rabbitmq/march_hare.rb b/lib/logstash/inputs/rabbitmq/march_hare.rb
index 6a80d4de2af..4df24e988e1 100644
--- a/lib/logstash/inputs/rabbitmq/march_hare.rb
+++ b/lib/logstash/inputs/rabbitmq/march_hare.rb
@@ -92,12 +92,22 @@ def setup
 
       @arguments_hash = Hash[*@arguments]
 
-      @q = @ch.queue(@queue,
-        :durable     => @durable,
-        :auto_delete => @auto_delete,
-        :exclusive   => @exclusive,
-        :passive     => @passive,
-        :arguments   => @arguments)
+      if @declare
+        @q = @ch.queue(@queue,
+          :durable     => @durable,
+          :auto_delete => @auto_delete,
+          :exclusive   => @exclusive,
+          :passive     => @passive,
+          :arguments   => @arguments)
+      else
+        @q = MarchHare::Queue.new(@ch,@queue,
+          :durable     => @durable,
+          :auto_delete => @auto_delete,
+          :exclusive   => @exclusive,
+          :passive     => @passive,
+          :arguments   => @arguments)
+        @ch.register_queue(@q)
+      end
 
       # exchange binding is optional for the input
       if @exchange
diff --git a/lib/logstash/outputs/rabbitmq.rb b/lib/logstash/outputs/rabbitmq.rb
index 7b52baf2a7a..987e5b4724a 100644
--- a/lib/logstash/outputs/rabbitmq.rb
+++ b/lib/logstash/outputs/rabbitmq.rb
@@ -42,6 +42,9 @@ class LogStash::Outputs::RabbitMQ < LogStash::Outputs::Base
   # Validate SSL certificate
   config :verify_ssl, :validate => :boolean, :default => false
 
+  # If declare the exchange or Use the existed exchange without declaration
+  config :declare, :validate => :boolean, :default => true
+
   # Enable or disable logging
   config :debug, :validate => :boolean, :default => false, :deprecated => "Use the logstash --debug flag for this instead."
 
diff --git a/lib/logstash/outputs/rabbitmq/march_hare.rb b/lib/logstash/outputs/rabbitmq/march_hare.rb
index cdee3cf4bd9..f4dfcc8ec5f 100644
--- a/lib/logstash/outputs/rabbitmq/march_hare.rb
+++ b/lib/logstash/outputs/rabbitmq/march_hare.rb
@@ -129,9 +129,19 @@ def connect
     end
 
     def declare_exchange
-      @logger.debug("Declaring an exchange", :name => @exchange, :type => @exchange_type,
+      if @declare
+        @logger.debug("Declaring an exchange", :name => @exchange, :type => @exchange_type,
                     :durable => @durable)
-      @x = @ch.exchange(@exchange, :type => @exchange_type.to_sym, :durable => @durable)
+        @x = @ch.exchange(@exchange,
+          :type => @exchange_type.to_sym,
+          :durable     => @durable)
+      else
+        @logger.debug("do not decalre the exchange")
+        @x = MarchHare::Exchange.new(@ch,@exchange,
+          :type => @exchange_type.to_sym,
+          :durable     => @durable)
+        @ch.register_exchange(@x)
+      end
 
       # sets @connected to true during recovery. MK.
       @connected.set(true)
