diff --git a/logstash-core/src/main/java/org/logstash/Event.java b/logstash-core/src/main/java/org/logstash/Event.java
index 24aa8e6dba7..a4c5ed98190 100644
--- a/logstash-core/src/main/java/org/logstash/Event.java
+++ b/logstash-core/src/main/java/org/logstash/Event.java
@@ -131,6 +131,10 @@ public Object getField(final String reference) {
         return unconverted == null ? null : Javafier.deep(unconverted);
     }
 
+    public Object getField(final String reference, Object defaultValue) {
+        return includes(reference) ? getField(reference) : defaultValue;
+    }
+
     public Object getUnconvertedField(final String reference) {
         return getUnconvertedField(PathCache.cache(reference));
     }
diff --git a/logstash-core/src/main/java/org/logstash/ext/JrubyEventExtLibrary.java b/logstash-core/src/main/java/org/logstash/ext/JrubyEventExtLibrary.java
index adf153db9b1..ea56d2d155f 100644
--- a/logstash-core/src/main/java/org/logstash/ext/JrubyEventExtLibrary.java
+++ b/logstash-core/src/main/java/org/logstash/ext/JrubyEventExtLibrary.java
@@ -119,6 +119,14 @@ public IRubyObject ruby_get_field(ThreadContext context, RubyString reference)
             );
         }
 
+        @JRubyMethod(name = "get", required = 2)
+        public IRubyObject ruby_get_field(ThreadContext context, RubyString reference, IRubyObject defaultValue) {
+            return Rubyfier.deep(
+                    context.runtime,
+                    this.event.getField(reference.asJavaString(), defaultValue)
+            );
+        }
+
         @JRubyMethod(name = "set", required = 2)
         public IRubyObject ruby_set_field(ThreadContext context, RubyString reference, IRubyObject value)
         {
diff --git a/logstash-core/src/test/java/org/logstash/EventTest.java b/logstash-core/src/test/java/org/logstash/EventTest.java
index b5bbbfb7587..d4c4776f0c5 100644
--- a/logstash-core/src/test/java/org/logstash/EventTest.java
+++ b/logstash-core/src/test/java/org/logstash/EventTest.java
@@ -1,5 +1,11 @@
 package org.logstash;
 
+import org.jruby.RubySymbol;
+import org.jruby.RubyTime;
+import org.jruby.java.proxies.ConcreteJavaProxy;
+import org.junit.Test;
+import org.logstash.ext.JrubyTimestampExtLibrary;
+
 import java.io.IOException;
 import java.math.BigDecimal;
 import java.math.BigInteger;
@@ -10,12 +16,6 @@
 import java.util.List;
 import java.util.Map;
 
-import org.jruby.RubySymbol;
-import org.jruby.RubyTime;
-import org.jruby.java.proxies.ConcreteJavaProxy;
-import org.junit.Test;
-import org.logstash.ext.JrubyTimestampExtLibrary;
-
 import static net.javacrumbs.jsonunit.JsonAssert.assertJsonEquals;
 import static org.hamcrest.CoreMatchers.is;
 import static org.hamcrest.MatcherAssert.assertThat;
@@ -193,6 +193,24 @@ public void testGetFieldList() throws Exception {
         assertEquals(1L, e.getField("[foo][0]"));
     }
 
+
+    @Test
+    public void testGetFieldDefaultValue() throws Exception {
+        Event event = new Event();
+
+        assertNull(event.getField("foo"));
+        assertEquals(1, event.getField("foo", 1));
+        event.setField("foo", 42L);
+        assertEquals(42L, event.getField("foo"));
+        assertEquals(42L, event.getField("foo", 1));
+
+        event.setField("[bar][innerFoo]", 42L);
+        assertEquals(42L, event.getField("[bar][innerFoo]"));
+        assertNull(event.getField("[bar][innerBar]"));
+        assertEquals(41L, event.getField("[bar][innerBar]", 41L));
+    }
+
+
     @Test
     public void testDeepGetField() throws Exception {
         Map<String, Object> data = new HashMap<>();
