diff --git a/lib/logstash/event.rb b/lib/logstash/event.rb
index 4bb31475ec0..7ea3cf31e56 100644
--- a/lib/logstash/event.rb
+++ b/lib/logstash/event.rb
@@ -70,7 +70,16 @@ def tags=(val); @data["@tags"] = val; end # def tags=
 
   # field-related access
   public
-  def [](key); @data["@fields"][key] end # def []
+  def [](key)
+    # If the key isn't in fields and it starts with an "@" sign, get it out of data instead of fields
+    if ! @data["@fields"].has_key?(key) and key.slice(0,1) == "@"
+      @data[key]
+    # Exists in @fields (returns value) or doesn't start with "@" (return null)
+    else
+      @data["@fields"][key]
+    end
+  end # def []
+  
   def []=(key, value); @data["@fields"][key] = value end # def []=
   def fields; return @data["@fields"] end # def fields
   
diff --git a/lib/logstash/filters/grep.rb b/lib/logstash/filters/grep.rb
index ef87f4a46a7..07d9bb6c5e0 100644
--- a/lib/logstash/filters/grep.rb
+++ b/lib/logstash/filters/grep.rb
@@ -67,7 +67,7 @@ def filter(event)
     matched = false
     config.each do |match|
       if ! match["match"]
-        @logging.debug(["Skipping match object, no match key", match])
+        @logger.debug(["Skipping match object, no match key", match])
         next
       end
 
@@ -75,7 +75,10 @@ def filter(event)
       # apply any fields/tags.
       match_count = 0
       match["match"].each do |field, re|
-        next unless event[field]
+        if ! event[field]
+          @logger.debug(["Skipping match object, field not present", field, event, event[field]])
+          next
+        end
 
         if event[field].empty? and match["negate"] == true
           match_count += 1
@@ -86,6 +89,7 @@ def filter(event)
             next if re.match(value)
             @logger.debug(["grep not-matched (negate requsted)", { field => value }])
           else
+            @logger.debug(["trying regex", re, value])
             next unless re.match(value)
             @logger.debug(["grep matched", { field => value }])
           end
