diff --git a/lib/logstash/inputs/gemfire.rb b/lib/logstash/inputs/gemfire.rb
index b2230b0557a..2b38c404008 100644
--- a/lib/logstash/inputs/gemfire.rb
+++ b/lib/logstash/inputs/gemfire.rb
@@ -17,7 +17,10 @@ class LogStash::Inputs::Gemfire < LogStash::Inputs::Threadable
   plugin_status "experimental"
 
   # Your client cache name
-  config :name, :validate => :string, :default => "logstash"
+  config :name, :validate => :string, :deprecated => true
+
+  # Your client cache name
+  config :cache_name, :validate => :string, :default => "logstash"
 
   # The path to a GemFire client cache XML file.
   #
@@ -51,6 +54,13 @@ class LogStash::Inputs::Gemfire < LogStash::Inputs::Threadable
   # How the message is serialized in the cache. Can be one of "json" or "plain"; default is plain
   config :serialization, :validate => :string, :default => nil
 
+  if @name
+    if @cache_name
+      @logger.error("'name' and 'cache_name' are the same setting, but 'name' is deprecated. Please use only 'cache_name'")
+    end
+    @cache_name = @name
+  end
+
   public
   def initialize(params)
     super
@@ -97,10 +107,10 @@ def teardown
   protected
   def connect
     begin
-      @logger.debug("Connecting to GemFire #{@name}")
+      @logger.debug("Connecting to GemFire #{@cache_name}")
 
       @cache = ClientCacheFactory.new.
-        set("name", @name).
+        set("name", @cache_name).
         set("cache-xml-file", @cache_xml_file).create
       @logger.debug("Created cache #{@cache.inspect}")
 
diff --git a/lib/logstash/outputs/gemfire.rb b/lib/logstash/outputs/gemfire.rb
index 2bf51248dae..708bd5d668b 100644
--- a/lib/logstash/outputs/gemfire.rb
+++ b/lib/logstash/outputs/gemfire.rb
@@ -16,7 +16,10 @@ class LogStash::Outputs::Gemfire < LogStash::Outputs::Base
   plugin_status "experimental"
 
   # Your client cache name
-  config :name, :validate => :string, :default => "logstash"
+  config :name, :validate => :string, :deprecated => true
+
+  # Your client cache name
+  config :cache_name, :validate => :string, :default => "logstash"
 
   # The path to a GemFire client cache XML file.
   #
@@ -40,6 +43,14 @@ class LogStash::Outputs::Gemfire < LogStash::Outputs::Base
   # A sprintf format to use when building keys
   config :key_format, :validate => :string, :default => "%{@source}-%{@timestamp}"
 
+  if @name
+    if @cache_name
+      @logger.error("'name' and 'cache_name' are the same setting, but 'name' is deprecated. Please use only 'cache_name'")
+    end
+    @cache_name = @name
+  end
+
+
   public
   def register
     import com.gemstone.gemfire.cache.client.ClientCacheFactory
@@ -52,10 +63,10 @@ def register
   public
   def connect
     begin
-      @logger.debug("Connecting to GemFire #{@name}")
+      @logger.debug("Connecting to GemFire #{@cache_name}")
 
       @cache = ClientCacheFactory.new.
-        set("name", @name).
+        set("name", @cache_name).
         set("cache-xml-file", @cache_xml_file).create
       @logger.debug("Created cache #{@cache.inspect}")
 
@@ -90,7 +101,7 @@ def receive(event)
 
   public
   def to_s
-    return "gemfire://#{name}"
+    return "gemfire://#{cache_name}"
   end
 
   public
