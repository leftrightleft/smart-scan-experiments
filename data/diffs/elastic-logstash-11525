diff --git a/config/logstash.yml b/config/logstash.yml
index d40e00c010a..27409295b42 100644
--- a/config/logstash.yml
+++ b/config/logstash.yml
@@ -215,6 +215,10 @@
 # Flag to output log lines of each pipeline in its separate log file. Each log filename contains the pipeline.name
 # Default is false
 # pipeline.separate_logs: false
+
+# Flag to disable the webserver
+# Default is false
+# webserver.disabled: false
 #
 # ------------ X-Pack Settings (not applicable for OSS build)--------------
 #
diff --git a/logstash-core/lib/logstash/agent.rb b/logstash-core/lib/logstash/agent.rb
index 098fc417dbe..e7789353fa5 100644
--- a/logstash-core/lib/logstash/agent.rb
+++ b/logstash-core/lib/logstash/agent.rb
@@ -96,7 +96,7 @@ def execute
 
     converge_state_and_update
 
-    start_webserver
+    start_webserver_if
 
     if auto_reload?
       # `sleep_then_run` instead of firing the interval right away
@@ -368,6 +368,19 @@ def dispatch_events(converge_results)
     end
   end
 
+  # Start the webserver, only if parameter 'webserver.disabled' is set to false (default value)
+  def start_webserver_if
+    if webserver_disabled == false
+      start_webserver
+    else
+      @logger.info("Disabled webserver via parameter 'webserver.disabled' in 'logstash.yml' configuration file")
+    end
+  end
+
+  def webserver_disabled
+    return @settings.get_setting("webserver.disabled").value
+  end
+
   def start_webserver
     @webserver_control_lock.synchronize do
       options = {:http_host => @http_host, :http_ports => @http_port, :http_environment => @http_environment }
@@ -379,6 +392,7 @@ def start_webserver
     end
   end
 
+
   def stop_webserver
     @webserver_control_lock.synchronize do
       if @webserver
diff --git a/logstash-core/lib/logstash/environment.rb b/logstash-core/lib/logstash/environment.rb
index 24f00ab200e..1dd3c40d001 100644
--- a/logstash-core/lib/logstash/environment.rb
+++ b/logstash-core/lib/logstash/environment.rb
@@ -71,7 +71,8 @@ module Environment
             Setting::TimeValue.new("slowlog.threshold.debug", "-1"),
             Setting::TimeValue.new("slowlog.threshold.trace", "-1"),
             Setting::String.new("keystore.classname", "org.logstash.secret.store.backend.JavaKeyStore"),
-            Setting::String.new("keystore.file", ::File.join(::File.join(LogStash::Environment::LOGSTASH_HOME, "config"), "logstash.keystore"), false) # will be populated on
+            Setting::String.new("keystore.file", ::File.join(::File.join(LogStash::Environment::LOGSTASH_HOME, "config"), "logstash.keystore"), false), # will be populated on
+            Setting::Boolean.new("webserver.disabled", false)
   # post_process
   ].each {|setting| SETTINGS.register(setting) }
 
