diff --git a/qa/Gemfile b/qa/Gemfile
index 76cbdeddcdf..1919a50f272 100644
--- a/qa/Gemfile
+++ b/qa/Gemfile
@@ -2,3 +2,4 @@ source "https://rubygems.org"
 gem "runner-tool", :git => "https://github.com/purbon/runner-tool.git"
 gem "rspec", "~> 3.1.0"
 gem "rake"
+gem "pry", :group => :test
diff --git a/qa/Rakefile b/qa/Rakefile
index f8d616d4eac..3893a7deb51 100644
--- a/qa/Rakefile
+++ b/qa/Rakefile
@@ -27,21 +27,21 @@ namespace :test do
   namespace :acceptance do
     desc "Run all acceptance"
     task :all do
-      exit(RSpec::Core::Runner.run([Rake::FileList["acceptance/spec/**/*_spec.rb"]]))
+      exit(RSpec::Core::Runner.run([Rake::FileList["acceptance/spec/lib/*_spec.rb"]]))
     end
 
     platforms.types.each do |type|
       desc "Run acceptance test in #{type} machines"
       task type do
-        exit(RSpec::Core::Runner.run([Rake::FileList["acceptance/spec/#{type}/**/*_spec.rb"]]))
+        ENV['LS_TEST_PLATFORM']=type
+        exit(RSpec::Core::Runner.run([Rake::FileList["acceptance/spec/lib/*_spec.rb"]]))
       end
     end
 
     desc "Run one single machine acceptance test"
-    task :single, :machine do  |t, args|
-      ENV['LS_VAGRANT_HOST'] = args[:machine]
-      platform = LogStash::VagrantHelpers.translate(args[:machine])
-      exit(RSpec::Core::Runner.run([Rake::FileList["acceptance/spec/**/*_spec.rb"]]))
+    task :single, :machine do |t, args|
+      ENV['LS_VAGRANT_HOST']  = args[:machine]
+      exit(RSpec::Core::Runner.run([Rake::FileList["acceptance/spec/lib/*_spec.rb"]]))
     end
   end
 end
diff --git a/qa/acceptance/spec/centos/spec_helper.rb b/qa/acceptance/spec/centos/spec_helper.rb
deleted file mode 100644
index cbb2c30e545..00000000000
--- a/qa/acceptance/spec/centos/spec_helper.rb
+++ /dev/null
@@ -1,15 +0,0 @@
-# encoding: utf-8
-require_relative '../spec_helper'
-
-def default_vagrant_boxes
-  [
-    "centos-6",
-    "centos-7"
-  ]
-end
-
-selected_boxes = SpecsHelper.find_selected_boxes(default_vagrant_boxes)
-
-SpecsHelper.configure(selected_boxes)
-
-puts "[Acceptance specs] running on #{ServiceTester.configuration.lookup.values}" if !selected_boxes.empty?
diff --git a/qa/acceptance/spec/config_helper.rb b/qa/acceptance/spec/config_helper.rb
index dc7b5b4fe44..3d9730c2d2d 100644
--- a/qa/acceptance/spec/config_helper.rb
+++ b/qa/acceptance/spec/config_helper.rb
@@ -3,25 +3,20 @@
 
 module SpecsHelper
 
-  def self.find_selected_boxes(default_boxes=[])
-    if ENV.include?('LS_VAGRANT_HOST') then
-      default_boxes.include?(ENV['LS_VAGRANT_HOST']) ? ENV['LS_VAGRANT_HOST'] : []
-    else
-      default_boxes
-    end
-  end
-
   def self.configure(vagrant_boxes)
     setup_config = JSON.parse(File.read(File.join(File.dirname(__FILE__), "..", "..", ".vm_ssh_config")))
-
+    boxes        = vagrant_boxes.inject({}) do |acc, v|
+      acc[v.name] = v.type
+      acc
+    end
     ServiceTester.configure do |config|
       config.servers = []
       config.lookup  = {}
       setup_config.each do |host_info|
-        next unless vagrant_boxes.include?(host_info["host"])
+        next unless boxes.keys.include?(host_info["host"])
         url = "#{host_info["hostname"]}:#{host_info["port"]}"
         config.servers << url
-        config.lookup[url] = host_info["host"]
+        config.lookup[url] = {"host" => host_info["host"], "type" => boxes[host_info["host"]] }
       end
     end
   end
diff --git a/qa/acceptance/spec/debian/spec_helper.rb b/qa/acceptance/spec/debian/spec_helper.rb
deleted file mode 100644
index c9cfe0da7d7..00000000000
--- a/qa/acceptance/spec/debian/spec_helper.rb
+++ /dev/null
@@ -1,15 +0,0 @@
-# encoding: utf-8
-require_relative '../spec_helper'
-
-def default_vagrant_boxes
-  [
-    "ubuntu-1204",
-    "ubuntu-1404"
-  ]
-end
-
-selected_boxes = SpecsHelper.find_selected_boxes(default_vagrant_boxes)
-
-SpecsHelper.configure(selected_boxes)
-
-puts "[Acceptance specs] running on #{ServiceTester.configuration.lookup.values}" if !selected_boxes.empty?
diff --git a/qa/acceptance/spec/lib/artifact_operation_spec.rb b/qa/acceptance/spec/lib/artifact_operation_spec.rb
new file mode 100644
index 00000000000..49094dba7c3
--- /dev/null
+++ b/qa/acceptance/spec/lib/artifact_operation_spec.rb
@@ -0,0 +1,13 @@
+# encoding: utf-8
+require_relative '../spec_helper'
+require_relative '../shared_examples/installed'
+require_relative '../shared_examples/running'
+
+describe "artifacts operation" do
+  config = ServiceTester.configuration
+  config.servers.each do |address|
+    logstash = ServiceTester::Artifact.new(address, config.lookup[address])
+    it_behaves_like "installable", logstash
+    it_behaves_like "runnable",    logstash
+  end
+end
diff --git a/qa/acceptance/spec/shared_examples/installed.rb b/qa/acceptance/spec/shared_examples/installed.rb
new file mode 100644
index 00000000000..9ca89ab004a
--- /dev/null
+++ b/qa/acceptance/spec/shared_examples/installed.rb
@@ -0,0 +1,24 @@
+require_relative '../spec_helper'
+require          'logstash/version'
+
+RSpec.shared_examples "installable" do |logstash|
+
+  before(:each) do
+    logstash.install(LOGSTASH_VERSION)
+  end
+
+  it "is installed on #{logstash.host}" do
+    expect(logstash).to be_installed
+  end
+
+  it "is running on #{logstash.host}" do
+    logstash.start_service
+    expect(logstash).to be_running
+    logstash.stop_service
+  end
+
+  it "is removable on #{logstash.host}" do
+    logstash.uninstall
+    expect(logstash).to be_removed
+  end
+end
diff --git a/qa/acceptance/spec/shared_examples/running.rb b/qa/acceptance/spec/shared_examples/running.rb
new file mode 100644
index 00000000000..0e2166f70d5
--- /dev/null
+++ b/qa/acceptance/spec/shared_examples/running.rb
@@ -0,0 +1,16 @@
+require_relative '../spec_helper'
+require          'logstash/version'
+
+RSpec.shared_examples "runnable" do |logstash|
+
+  before(:each) do
+    logstash.install(LOGSTASH_VERSION)
+  end
+
+  it "is running on #{logstash.host}" do
+    logstash.start_service
+    expect(logstash).to be_running
+    logstash.stop_service
+  end
+
+end
diff --git a/qa/acceptance/spec/spec_helper.rb b/qa/acceptance/spec/spec_helper.rb
index 4e8e0c40a5c..1aefa919232 100644
--- a/qa/acceptance/spec/spec_helper.rb
+++ b/qa/acceptance/spec/spec_helper.rb
@@ -3,6 +3,7 @@
 require_relative '../../rspec/helpers'
 require_relative '../../rspec/matchers'
 require_relative 'config_helper'
+require_relative "../../platform_config"
 
 ROOT = File.expand_path(File.join(File.dirname(__FILE__), '..', '..', '..'))
 $LOAD_PATH.unshift File.join(ROOT, 'logstash-core/lib')
@@ -12,3 +13,18 @@
 RSpec.configure do |c|
   c.include ServiceTester
 end
+
+platform = ENV['LS_TEST_PLATFORM'] || 'all'
+
+config   = PlatformConfig.new
+default_vagrant_boxes = ( platform == 'all' ? config.platforms : config.filter_type(platform) )
+
+selected_boxes = if ENV.include?('LS_VAGRANT_HOST') then
+                   config.platforms.select { |p| p.name  == ENV['LS_VAGRANT_HOST'] }
+                 else
+                   default_vagrant_boxes
+                 end
+
+SpecsHelper.configure(selected_boxes)
+
+puts "[Acceptance specs] running on #{ServiceTester.configuration.hosts}" if !selected_boxes.empty?
diff --git a/qa/platform_config.rb b/qa/platform_config.rb
index b3df09da7fe..969b7dba23f 100644
--- a/qa/platform_config.rb
+++ b/qa/platform_config.rb
@@ -2,9 +2,12 @@
 require "json"
 
 class PlatformConfig
+
   Platform = Struct.new(:name, :box, :type)
 
-  DEFAULT_CONFIG_LOCATION = File.join(File.dirname(__FILE__), "platforms.json")
+  DEFAULT_CONFIG_LOCATION = File.join(File.dirname(__FILE__), "platforms.json").freeze
+
+  attr_reader :platforms
 
   def initialize(config_path = DEFAULT_CONFIG_LOCATION)
     @config_path = config_path
diff --git a/qa/platforms.json b/qa/platforms.json
index f97de63cbdd..72d526d0532 100644
--- a/qa/platforms.json
+++ b/qa/platforms.json
@@ -1,6 +1,6 @@
 { 
   "ubuntu-1204": { "box": "elastic/ubuntu-12.04-x86_64", "type": "debian" },
   "ubuntu-1404": { "box": "elastic/ubuntu-14.04-x86_64", "type": "debian" },
-  "centos-6": { "box": "elastic/centos-6-x86_64", "type": "centos" },
-  "centos-7": { "box": "elastic/centos-7-x86_64", "type": "centos" }
+  "centos-6": { "box": "elastic/centos-6-x86_64", "type": "redhat" },
+  "centos-7": { "box": "elastic/centos-7-x86_64", "type": "redhat" }
 }
diff --git a/qa/rspec/commands.rb b/qa/rspec/commands.rb
index a06a8ceb10e..bdb873531de 100644
--- a/qa/rspec/commands.rb
+++ b/qa/rspec/commands.rb
@@ -1,16 +1,61 @@
 # encoding: utf-8
-require_relative "./debian/commands"
-require_relative "./centos/commands"
+require_relative "./commands/debian"
+require_relative "./commands/redhat"
+require "forwardable"
 
 module ServiceTester
+
+  class Artifact
+
+    extend Forwardable
+    def_delegators :@client, :installed?, :removed?, :running?
+
+    attr_reader :host, :client
+
+    def initialize(host, options={})
+      @host     = host
+      @options  = options
+      @client = CommandsFactory.fetch(options["type"])
+    end
+
+    def name
+      "logstash"
+    end
+
+    def hosts
+      [@host]
+    end
+
+    def start_service
+      client.start_service(name, host)
+    end
+
+    def stop_service
+      client.stop_service(name, host)
+    end
+
+    def install(version)
+      package = client.package_for(version)
+      client.install(package, host)
+    end
+
+    def uninstall
+      client.uninstall(name, host)
+    end
+
+    def to_s
+      "Artifact #{name}@#{host}"
+    end
+  end
+
   class CommandsFactory
 
     def self.fetch(type)
       case type
-      when :debian
+      when "debian"
         return DebianCommands.new
-      when :centos
-        return CentosCommands.new
+      when "redhat"
+        return RedhatCommands.new
       else
         return
       end
diff --git a/qa/rspec/commands/base.rb b/qa/rspec/commands/base.rb
new file mode 100644
index 00000000000..148dcdd9ea0
--- /dev/null
+++ b/qa/rspec/commands/base.rb
@@ -0,0 +1,18 @@
+# encoding: utf-8
+
+module ServiceTester
+
+  class Base
+
+    LOCATION="/logstash-build".freeze
+
+    def start_service(service, host=nil)
+      service_manager(service, "start", host)
+    end
+
+    def stop_service(service, host=nil)
+      service_manager(service, "stop", host)
+    end
+
+  end
+end
diff --git a/qa/rspec/debian/commands.rb b/qa/rspec/commands/debian.rb
similarity index 90%
rename from qa/rspec/debian/commands.rb
rename to qa/rspec/commands/debian.rb
index c0570dcad65..0edccfdbea9 100644
--- a/qa/rspec/debian/commands.rb
+++ b/qa/rspec/commands/debian.rb
@@ -1,6 +1,8 @@
 # encoding: utf-8
+require_relative "base"
+
 module ServiceTester
-  class DebianCommands
+  class DebianCommands < Base
 
     def installed?(hosts, package)
       stdout = ""
@@ -12,6 +14,10 @@ def installed?(hosts, package)
       stdout.match(/^Status: install ok installed$/)
     end
 
+    def package_for(version)
+      File.join(ServiceTester::Base::LOCATION, "logstash-#{version}_all.deb")
+    end
+
     def install(package, host=nil)
       hosts = (host.nil? ? servers : Array(host))
       at(hosts, {in: :serial}) do |_|
diff --git a/qa/rspec/centos/commands.rb b/qa/rspec/commands/redhat.rb
similarity index 87%
rename from qa/rspec/centos/commands.rb
rename to qa/rspec/commands/redhat.rb
index c293bb65338..7072611233a 100644
--- a/qa/rspec/centos/commands.rb
+++ b/qa/rspec/commands/redhat.rb
@@ -1,6 +1,8 @@
 # encoding: utf-8
+require_relative "base"
+
 module ServiceTester
-  class CentosCommands
+  class RedhatCommands < Base
 
     def installed?(hosts, package)
       stdout = ""
@@ -12,6 +14,10 @@ def installed?(hosts, package)
       stdout.match(/^logstash.noarch/)
     end
 
+    def package_for(version)
+      File.join(ServiceTester::Base::LOCATION, "logstash-#{version}.noarch.rpm")
+    end
+
     def install(package, host=nil)
       hosts  = (host.nil? ? servers : Array(host))
       errors = {}
@@ -49,7 +55,7 @@ def running?(hosts, package)
 
     def service_manager(service, action, host=nil)
       hosts = (host.nil? ? servers : Array(host))
-      at(hosts, {in: :serial}) do |host|
+      at(hosts, {in: :serial}) do |_|
         sudo_exec!("service #{service} #{action}")
       end
     end
diff --git a/qa/rspec/helpers.rb b/qa/rspec/helpers.rb
index 60f6729a1b4..a939fa7dfca 100644
--- a/qa/rspec/helpers.rb
+++ b/qa/rspec/helpers.rb
@@ -9,6 +9,10 @@ def initialize
       @servers  = []
       @lookup   = {}
     end
+
+    def hosts
+      lookup.values.map { |val| val["host"] }
+    end
   end
 
   class << self
@@ -24,22 +28,6 @@ def servers
     ServiceTester.configuration.servers
   end
 
-  def install(package, host=nil)
-    select_client.install(package, host)
-  end
-
-  def uninstall(package, host=nil)
-    select_client.uninstall(package, host)
-  end
-
-  def start_service(service, host=nil)
-    select_client.service_manager(service, "start", host)
-  end
-
-  def stop_service(service, host=nil)
-    select_client.service_manager(service, "stop", host)
-  end
-
   def select_client
     CommandsFactory.fetch(current_example.metadata[:platform])
   end
diff --git a/qa/rspec/matchers/be_installed.rb b/qa/rspec/matchers/be_installed.rb
index 83ab67f80fe..cca6c56a0be 100644
--- a/qa/rspec/matchers/be_installed.rb
+++ b/qa/rspec/matchers/be_installed.rb
@@ -4,22 +4,13 @@
 
 RSpec::Matchers.define :be_installed do
 
-  match do |actual|
-    select_client.installed?([@host], actual)
-  end
-
-  chain :on do |host|
-    @host = host
+  match do |subject|
+    subject.installed?(subject.hosts, subject.name)
   end
 end
 
 RSpec::Matchers.define :be_removed do
-
-  match do |actual|
-    select_client.removed?([@host], actual)
-  end
-
-  chain :on do |host|
-    @host = host
+  match do |subject|
+    subject.removed?(subject.hosts, subject.name)
   end
 end
diff --git a/qa/rspec/matchers/be_running.rb b/qa/rspec/matchers/be_running.rb
index beeb98f1082..53dc2738c47 100644
--- a/qa/rspec/matchers/be_running.rb
+++ b/qa/rspec/matchers/be_running.rb
@@ -4,11 +4,7 @@
 
 RSpec::Matchers.define :be_running do
 
-  match do |actual|
-    select_client.running?([@host], actual)
-  end
-
-  chain :on do |host|
-    @host = host
+  match do |subject|
+    subject.running?(subject.hosts, subject.name)
   end
 end
diff --git a/qa/sys/centos/bootstrap.sh b/qa/sys/redhat/bootstrap.sh
similarity index 100%
rename from qa/sys/centos/bootstrap.sh
rename to qa/sys/redhat/bootstrap.sh
