diff --git a/lib/pluginmanager/templates/codec-plugin/lib/logstash/codecs/example.rb.erb b/lib/pluginmanager/templates/codec-plugin/lib/logstash/codecs/example.rb.erb
index 91ed93785b8..5fb97fec164 100644
--- a/lib/pluginmanager/templates/codec-plugin/lib/logstash/codecs/example.rb.erb
+++ b/lib/pluginmanager/templates/codec-plugin/lib/logstash/codecs/example.rb.erb
@@ -1,6 +1,5 @@
 # encoding: utf-8
 require "logstash/codecs/base"
-require "logstash/namespace"
 
 # This <%= @plugin_name %> codec will append a string to the message field
 # of an event, either in the decoding or encoding methods
diff --git a/lib/pluginmanager/templates/filter-plugin/lib/logstash/filters/example.rb.erb b/lib/pluginmanager/templates/filter-plugin/lib/logstash/filters/example.rb.erb
index ca5d9f7ca3b..690a711bfee 100644
--- a/lib/pluginmanager/templates/filter-plugin/lib/logstash/filters/example.rb.erb
+++ b/lib/pluginmanager/templates/filter-plugin/lib/logstash/filters/example.rb.erb
@@ -1,8 +1,7 @@
 # encoding: utf-8
 require "logstash/filters/base"
-require "logstash/namespace"
 
-# This <%= @plugin_name %> filter will replace the contents of the default 
+# This <%= @plugin_name %> filter will replace the contents of the default
 # message field with whatever you specify in the configuration.
 #
 # It is only intended to be used as an <%= @plugin_name %>.
@@ -18,14 +17,14 @@ class LogStash::Filters::<%= classify(plugin_name) %> < LogStash::Filters::Base
   # }
   #
   config_name "<%= plugin_name %>"
-  
+
   # Replace the message with this value.
   config :message, :validate => :string, :default => "Hello World!"
-  
+
 
   public
   def register
-    # Add instance variables 
+    # Add instance variables
   end # def register
 
   public
diff --git a/lib/pluginmanager/templates/input-plugin/lib/logstash/inputs/example.rb.erb b/lib/pluginmanager/templates/input-plugin/lib/logstash/inputs/example.rb.erb
index 176467ccb5c..5ad634a3834 100644
--- a/lib/pluginmanager/templates/input-plugin/lib/logstash/inputs/example.rb.erb
+++ b/lib/pluginmanager/templates/input-plugin/lib/logstash/inputs/example.rb.erb
@@ -1,6 +1,5 @@
 # encoding: utf-8
 require "logstash/inputs/base"
-require "logstash/namespace"
 require "stud/interval"
 require "socket" # for Socket.gethostname
 
diff --git a/lib/pluginmanager/templates/output-plugin/lib/logstash/outputs/example.rb.erb b/lib/pluginmanager/templates/output-plugin/lib/logstash/outputs/example.rb.erb
index eadd499bf98..18a4b99cbf7 100644
--- a/lib/pluginmanager/templates/output-plugin/lib/logstash/outputs/example.rb.erb
+++ b/lib/pluginmanager/templates/output-plugin/lib/logstash/outputs/example.rb.erb
@@ -1,6 +1,5 @@
 # encoding: utf-8
 require "logstash/outputs/base"
-require "logstash/namespace"
 
 # An <%= plugin_name %> output that does nothing.
 class LogStash::Outputs::<%= classify(plugin_name) %> < LogStash::Outputs::Base
diff --git a/lib/secretstore/cli.rb b/lib/secretstore/cli.rb
index ae4b8b5d485..1a607524ca8 100644
--- a/lib/secretstore/cli.rb
+++ b/lib/secretstore/cli.rb
@@ -2,7 +2,6 @@
 require_relative "../bootstrap/environment"
 LogStash::Bundler.setup!({:without => [:build, :development]})
 
-require "logstash/namespace"
 require "logstash-core/logstash-core"
 require "logstash/util/settings_helper"
 require "logstash/util/secretstore"
@@ -40,4 +39,4 @@ class LogStash::SecretStoreCli
     exit 1
   end
 
-end
\ No newline at end of file
+end
diff --git a/logstash-core/lib/logstash/codecs/base.rb b/logstash-core/lib/logstash/codecs/base.rb
index cf8b582d9d5..329ac12c5ac 100644
--- a/logstash-core/lib/logstash/codecs/base.rb
+++ b/logstash-core/lib/logstash/codecs/base.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/event"
 require "logstash/plugin"
 require "logstash/logging"
@@ -41,12 +40,12 @@ def encode(event)
   # over the current API for shared plugins
   # It is best if the codec implements this directly
   def multi_encode(events)
-    if @has_encode_sync              
+    if @has_encode_sync
       events.map {|event| [event, self.encode_sync(event)]}
     else
       batch = Thread.current[:logstash_output_codec_batch] ||= []
       batch.clear
-      
+
       events.each {|event| self.encode(event) }
       batch
     end
diff --git a/logstash-core/lib/logstash/config/cpu_core_strategy.rb b/logstash-core/lib/logstash/config/cpu_core_strategy.rb
index f6c09f097b3..5ad9ec34e3b 100644
--- a/logstash-core/lib/logstash/config/cpu_core_strategy.rb
+++ b/logstash-core/lib/logstash/config/cpu_core_strategy.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/config/defaults"
 
 module LogStash module Config module CpuCoreStrategy
diff --git a/logstash-core/lib/logstash/config/defaults.rb b/logstash-core/lib/logstash/config/defaults.rb
index c0c18fd7c04..ee77065d271 100644
--- a/logstash-core/lib/logstash/config/defaults.rb
+++ b/logstash-core/lib/logstash/config/defaults.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "concurrent"
 
 module LogStash module Config module Defaults
diff --git a/logstash-core/lib/logstash/config/file.rb b/logstash-core/lib/logstash/config/file.rb
index 6b5ae954675..c18427b7c10 100644
--- a/logstash-core/lib/logstash/config/file.rb
+++ b/logstash-core/lib/logstash/config/file.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/config/grammar"
 require "logstash/config/config_ast"
 require "logstash/errors"
diff --git a/logstash-core/lib/logstash/config/mixin.rb b/logstash-core/lib/logstash/config/mixin.rb
index 9f77d688638..0055e8dc95f 100644
--- a/logstash-core/lib/logstash/config/mixin.rb
+++ b/logstash-core/lib/logstash/config/mixin.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/plugins/registry"
 require "logstash/logging"
 require "logstash/util/password"
@@ -33,21 +32,21 @@
 # }
 #
 module LogStash::Config::Mixin
-  
+
   include LogStash::Util::SubstitutionVariables
-  
+
   attr_accessor :config
   attr_accessor :original_params
 
   PLUGIN_VERSION_1_0_0 = LogStash::Util::PluginVersion.new(1, 0, 0)
   PLUGIN_VERSION_0_9_0 = LogStash::Util::PluginVersion.new(0, 9, 0)
-  
+
   # This method is called when someone does 'include LogStash::Config'
   def self.included(base)
     # Add the DSL methods to the 'base' given.
     base.extend(LogStash::Config::Mixin::DSL)
   end
-  
+
   def config_init(params)
     # Validation will modify the values inside params if necessary.
     # For example: converting a string to a number, etc.
diff --git a/logstash-core/lib/logstash/dependency_report.rb b/logstash-core/lib/logstash/dependency_report.rb
index ba4899a7250..5f85c245817 100644
--- a/logstash-core/lib/logstash/dependency_report.rb
+++ b/logstash-core/lib/logstash/dependency_report.rb
@@ -4,7 +4,6 @@
 $DEBUGLIST = (ENV["DEBUG"] || "").split(",")
 
 require "clamp"
-require "logstash/namespace"
 require "rubygems"
 require "jars/gemspec_artifacts"
 
@@ -30,7 +29,7 @@ def execute
   end
 
   def gems
-    # @mgreau requested `logstash-*` dependencies be removed from this list: 
+    # @mgreau requested `logstash-*` dependencies be removed from this list:
     # https://github.com/elastic/logstash/pull/8837#issuecomment-351859433
     Gem::Specification.reject { |g| g.name =~ /^logstash-/ }.collect do |gem|
       licenses = ("UNKNOWN" if gem.licenses.empty?) || (gem.licenses.map { |l| SPDX.map(l) }.join("|") if !gem.licenses.empty?)
diff --git a/logstash-core/lib/logstash/dependency_report_runner.rb b/logstash-core/lib/logstash/dependency_report_runner.rb
index 47a894f2933..880c3c5c37a 100644
--- a/logstash-core/lib/logstash/dependency_report_runner.rb
+++ b/logstash-core/lib/logstash/dependency_report_runner.rb
@@ -8,10 +8,9 @@
     raise
   end
 
-  require "logstash/namespace"
   require_relative "../../../lib/bootstrap/patches/jar_dependencies"
   require "logstash/dependency_report"
 
-  exit_status = LogStash::DependencyReport.run 
+  exit_status = LogStash::DependencyReport.run
   exit(exit_status || 0)
 end
diff --git a/logstash-core/lib/logstash/elasticsearch_client.rb b/logstash-core/lib/logstash/elasticsearch_client.rb
index 910469d0ee4..9b341a03ea8 100644
--- a/logstash-core/lib/logstash/elasticsearch_client.rb
+++ b/logstash-core/lib/logstash/elasticsearch_client.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/logging"
 require "elasticsearch"
 require "elasticsearch/transport/transport/http/manticore"
diff --git a/logstash-core/lib/logstash/event.rb b/logstash-core/lib/logstash/event.rb
index 68309a04353..4be181587c5 100644
--- a/logstash-core/lib/logstash/event.rb
+++ b/logstash-core/lib/logstash/event.rb
@@ -1,6 +1,5 @@
 # encoding: utf-8
 
-require "logstash/namespace"
 require "logstash/json"
 
 # transient pipeline events for normal in-flow signaling as opposed to
diff --git a/logstash-core/lib/logstash/filters/base.rb b/logstash-core/lib/logstash/filters/base.rb
index 7b4aefbe5da..b15bc1e9410 100644
--- a/logstash-core/lib/logstash/filters/base.rb
+++ b/logstash-core/lib/logstash/filters/base.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/event"
 require "logstash/logging"
 require "logstash/plugin"
diff --git a/logstash-core/lib/logstash/inputs/base.rb b/logstash-core/lib/logstash/inputs/base.rb
index 6d853a4775f..fd6a6c02740 100644
--- a/logstash-core/lib/logstash/inputs/base.rb
+++ b/logstash-core/lib/logstash/inputs/base.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/event"
 require "logstash/plugin"
 require "logstash/logging"
@@ -94,7 +93,7 @@ def do_stop
   def stop?
     @stop_called.value
   end
-  
+
   def clone
     cloned = super
     cloned.codec = @codec.clone if @codec
@@ -105,7 +104,7 @@ def execution_context=(context)
     super
     # There is no easy way to propage an instance variable into the codec, because the codec
     # are created at the class level
-    # TODO(talevy): Codecs should have their own execution_context, for now they will inherit their 
+    # TODO(talevy): Codecs should have their own execution_context, for now they will inherit their
     #               parent plugin's
     @codec.execution_context = context
     context
diff --git a/logstash-core/lib/logstash/inputs/threadable.rb b/logstash-core/lib/logstash/inputs/threadable.rb
index 04d834b722c..7348c1edf7e 100644
--- a/logstash-core/lib/logstash/inputs/threadable.rb
+++ b/logstash-core/lib/logstash/inputs/threadable.rb
@@ -1,15 +1,14 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/inputs/base"
 
-# This is the threadable class for logstash inputs. 
+# This is the threadable class for logstash inputs.
 # Use this class in your inputs if it can support multiple threads
 class LogStash::Inputs::Threadable < LogStash::Inputs::Base
 
   # Set this to the number of threads you want this input to spawn.
   # This is the same as declaring the input multiple times
   config :threads, :validate => :number, :default => 1
- 
+
   def initialize(params)
     super
     @threadable = true
diff --git a/logstash-core/lib/logstash/java_pipeline.rb b/logstash-core/lib/logstash/java_pipeline.rb
index f1c000f3e3c..4404f61d832 100644
--- a/logstash-core/lib/logstash/java_pipeline.rb
+++ b/logstash-core/lib/logstash/java_pipeline.rb
@@ -1,7 +1,6 @@
 # encoding: utf-8
 require "thread"
 require "concurrent"
-require "logstash/namespace"
 require "logstash/errors"
 require "logstash/event"
 require "logstash/filters/base"
diff --git a/logstash-core/lib/logstash/logging.rb b/logstash-core/lib/logstash/logging.rb
index 201d706bc75..0ca78356ddc 100644
--- a/logstash-core/lib/logstash/logging.rb
+++ b/logstash-core/lib/logstash/logging.rb
@@ -1,3 +1,2 @@
 # encoding: utf-8
 require "logstash/logging/logger"
-require "logstash/namespace"
diff --git a/logstash-core/lib/logstash/modules/cli_parser.rb b/logstash-core/lib/logstash/modules/cli_parser.rb
index 6c0691d326e..54fbc6477b9 100644
--- a/logstash-core/lib/logstash/modules/cli_parser.rb
+++ b/logstash-core/lib/logstash/modules/cli_parser.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/logging"
 require "logstash/errors"
 
diff --git a/logstash-core/lib/logstash/modules/elasticsearch_config.rb b/logstash-core/lib/logstash/modules/elasticsearch_config.rb
index a4dd1d8cb52..102266a8ff2 100644
--- a/logstash-core/lib/logstash/modules/elasticsearch_config.rb
+++ b/logstash-core/lib/logstash/modules/elasticsearch_config.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/logging"
 
 require_relative "elasticsearch_resource"
diff --git a/logstash-core/lib/logstash/modules/elasticsearch_importer.rb b/logstash-core/lib/logstash/modules/elasticsearch_importer.rb
index bcf81c0cec5..5b14585d5e9 100644
--- a/logstash-core/lib/logstash/modules/elasticsearch_importer.rb
+++ b/logstash-core/lib/logstash/modules/elasticsearch_importer.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/logging"
 
 module LogStash module Modules class ElasticsearchImporter
diff --git a/logstash-core/lib/logstash/modules/elasticsearch_resource.rb b/logstash-core/lib/logstash/modules/elasticsearch_resource.rb
index c432abf2d6f..90744cd0919 100644
--- a/logstash-core/lib/logstash/modules/elasticsearch_resource.rb
+++ b/logstash-core/lib/logstash/modules/elasticsearch_resource.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require_relative "resource_base"
 
 module LogStash module Modules class ElasticsearchResource
diff --git a/logstash-core/lib/logstash/modules/file_reader.rb b/logstash-core/lib/logstash/modules/file_reader.rb
index 7df3b664b01..7e71ef05e69 100644
--- a/logstash-core/lib/logstash/modules/file_reader.rb
+++ b/logstash-core/lib/logstash/modules/file_reader.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/logging"
 require "logstash/json"
 
diff --git a/logstash-core/lib/logstash/modules/kibana_base.rb b/logstash-core/lib/logstash/modules/kibana_base.rb
index 4a9c76c43c6..635909d9113 100644
--- a/logstash-core/lib/logstash/modules/kibana_base.rb
+++ b/logstash-core/lib/logstash/modules/kibana_base.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/json"
 
 module LogStash module Modules class KibanaBase
diff --git a/logstash-core/lib/logstash/modules/kibana_client.rb b/logstash-core/lib/logstash/modules/kibana_client.rb
index 896820db19e..06675bc2303 100644
--- a/logstash-core/lib/logstash/modules/kibana_client.rb
+++ b/logstash-core/lib/logstash/modules/kibana_client.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/logging"
 require "logstash/json"
 require "manticore"
diff --git a/logstash-core/lib/logstash/modules/kibana_config.rb b/logstash-core/lib/logstash/modules/kibana_config.rb
index 03d4ea72a4b..4f6e642c81a 100644
--- a/logstash-core/lib/logstash/modules/kibana_config.rb
+++ b/logstash-core/lib/logstash/modules/kibana_config.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/logging"
 
 require_relative "file_reader"
diff --git a/logstash-core/lib/logstash/modules/kibana_dashboards.rb b/logstash-core/lib/logstash/modules/kibana_dashboards.rb
index c6f9606fead..27643e77645 100644
--- a/logstash-core/lib/logstash/modules/kibana_dashboards.rb
+++ b/logstash-core/lib/logstash/modules/kibana_dashboards.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/logging"
 require_relative "kibana_base"
 
diff --git a/logstash-core/lib/logstash/modules/kibana_importer.rb b/logstash-core/lib/logstash/modules/kibana_importer.rb
index 4093bccdbda..d00c94e6484 100644
--- a/logstash-core/lib/logstash/modules/kibana_importer.rb
+++ b/logstash-core/lib/logstash/modules/kibana_importer.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/logging"
 
 module LogStash module Modules class KibanaImporter
diff --git a/logstash-core/lib/logstash/modules/kibana_resource.rb b/logstash-core/lib/logstash/modules/kibana_resource.rb
index 6915c5aa47f..d512765a01e 100644
--- a/logstash-core/lib/logstash/modules/kibana_resource.rb
+++ b/logstash-core/lib/logstash/modules/kibana_resource.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require_relative "resource_base"
 
 module LogStash module Modules class KibanaResource
diff --git a/logstash-core/lib/logstash/modules/kibana_settings.rb b/logstash-core/lib/logstash/modules/kibana_settings.rb
index d1d21a3759c..0864280f44f 100644
--- a/logstash-core/lib/logstash/modules/kibana_settings.rb
+++ b/logstash-core/lib/logstash/modules/kibana_settings.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/logging"
 require_relative "kibana_base"
 
diff --git a/logstash-core/lib/logstash/modules/logstash_config.rb b/logstash-core/lib/logstash/modules/logstash_config.rb
index fd238bf3401..c72e0029990 100644
--- a/logstash-core/lib/logstash/modules/logstash_config.rb
+++ b/logstash-core/lib/logstash/modules/logstash_config.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require_relative "file_reader"
 require "logstash/settings"
 
diff --git a/logstash-core/lib/logstash/modules/resource_base.rb b/logstash-core/lib/logstash/modules/resource_base.rb
index 81148333d46..7951e6cd146 100644
--- a/logstash-core/lib/logstash/modules/resource_base.rb
+++ b/logstash-core/lib/logstash/modules/resource_base.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/json"
 require_relative "file_reader"
 
diff --git a/logstash-core/lib/logstash/modules/scaffold.rb b/logstash-core/lib/logstash/modules/scaffold.rb
index dbee6b801da..5921b961b1c 100644
--- a/logstash-core/lib/logstash/modules/scaffold.rb
+++ b/logstash-core/lib/logstash/modules/scaffold.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/logging"
 require "logstash/util/loggable"
 require "erb"
diff --git a/logstash-core/lib/logstash/modules/settings_merger.rb b/logstash-core/lib/logstash/modules/settings_merger.rb
index 56daba4a693..9b5ad11580b 100644
--- a/logstash-core/lib/logstash/modules/settings_merger.rb
+++ b/logstash-core/lib/logstash/modules/settings_merger.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/util"
 require "logstash/util/loggable"
 
diff --git a/logstash-core/lib/logstash/namespace.rb b/logstash-core/lib/logstash/namespace.rb
index 1cf4a35386b..4dfe43e4ccc 100644
--- a/logstash-core/lib/logstash/namespace.rb
+++ b/logstash-core/lib/logstash/namespace.rb
@@ -1,15 +1,2 @@
-# encoding: utf-8
-module LogStash
-  module Inputs; end
-  module Outputs; end
-  module Filters; end
-  module Search; end
-  module Config; end
-  module File; end
-  module Web; end
-  module Util; end
-  module PluginMixins; end
-  module PluginManager; end
-  module Api; end
-  module Modules; end
-end # module LogStash
+# The contents of this file have been ported to Java. It is included for for compatibility
+# with plugins that directly require it.
diff --git a/logstash-core/lib/logstash/outputs/base.rb b/logstash-core/lib/logstash/outputs/base.rb
index 0d5feadf9f4..ce087edfe70 100644
--- a/logstash-core/lib/logstash/outputs/base.rb
+++ b/logstash-core/lib/logstash/outputs/base.rb
@@ -2,7 +2,6 @@
 require "logstash/event"
 require "logstash/logging"
 require "logstash/plugin"
-require "logstash/namespace"
 require "logstash/config/mixin"
 require "concurrent/atomic/atomic_fixnum"
 
@@ -24,7 +23,7 @@ class LogStash::Outputs::Base < LogStash::Plugin
   # when we no longer support the :legacy type
   # This is hacky, but it can only be herne
   config :workers, :type => :number, :default => 1
-  
+
   # Set or return concurrency type
   def self.concurrency(type=nil)
     if type
@@ -68,7 +67,7 @@ def initialize(params={})
     # If we're running with a single thread we must enforce single-threaded concurrency by default
     # Maybe in a future version we'll assume output plugins are threadsafe
     @single_worker_mutex = Mutex.new
-    
+
     @receives_encoded = self.methods.include?(:multi_receive_encoded)
   end
 
@@ -108,7 +107,7 @@ def execution_context=(context)
     super
     # There is no easy way to propage an instance variable into the codec, because the codec
     # are created at the class level
-    # TODO(talevy): Codecs should have their own execution_context, for now they will inherit their 
+    # TODO(talevy): Codecs should have their own execution_context, for now they will inherit their
     #               parent plugin's
     @codec.execution_context = context
     context
diff --git a/logstash-core/lib/logstash/pipeline.rb b/logstash-core/lib/logstash/pipeline.rb
index 0eec62b254c..ae4e9dac70b 100644
--- a/logstash-core/lib/logstash/pipeline.rb
+++ b/logstash-core/lib/logstash/pipeline.rb
@@ -2,7 +2,6 @@
 require "thread"
 require "stud/interval"
 require "concurrent"
-require "logstash/namespace"
 require "logstash/errors"
 require "logstash-core/logstash-core"
 require "logstash/event"
diff --git a/logstash-core/lib/logstash/plugin.rb b/logstash-core/lib/logstash/plugin.rb
index 0c6a4710a29..3d10d37267a 100644
--- a/logstash-core/lib/logstash/plugin.rb
+++ b/logstash-core/lib/logstash/plugin.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/logging"
 require "logstash/config/mixin"
 require "logstash/instrument/null_metric"
diff --git a/logstash-core/lib/logstash/queue_factory.rb b/logstash-core/lib/logstash/queue_factory.rb
index 91152bde264..f0a081eac32 100644
--- a/logstash-core/lib/logstash/queue_factory.rb
+++ b/logstash-core/lib/logstash/queue_factory.rb
@@ -1,7 +1,6 @@
 # encoding: utf-8
 require "fileutils"
 require "logstash/event"
-require "logstash/namespace"
 
 module LogStash
   class QueueFactory
diff --git a/logstash-core/lib/logstash/runner.rb b/logstash-core/lib/logstash/runner.rb
index 07f9580ed97..54b6cbe29f9 100644
--- a/logstash-core/lib/logstash/runner.rb
+++ b/logstash-core/lib/logstash/runner.rb
@@ -15,7 +15,6 @@
 require "clamp"
 require "net/http"
 
-require "logstash/namespace"
 require "logstash-core/logstash-core"
 require "logstash/environment"
 require "logstash/modules/cli_parser"
diff --git a/logstash-core/lib/logstash/util.rb b/logstash-core/lib/logstash/util.rb
index 4a8ae1e84d7..9b6dbe0f426 100644
--- a/logstash-core/lib/logstash/util.rb
+++ b/logstash-core/lib/logstash/util.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/environment"
 
 module LogStash::Util
diff --git a/logstash-core/lib/logstash/util/byte_value.rb b/logstash-core/lib/logstash/util/byte_value.rb
index 36a8c6c83c6..593a1e034b5 100644
--- a/logstash-core/lib/logstash/util/byte_value.rb
+++ b/logstash-core/lib/logstash/util/byte_value.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 
 module LogStash; module Util; module ByteValue
   module_function
@@ -23,7 +22,7 @@ def parse(text)
 
   def multiplier(text)
     case text
-      when /(?:k|kb)$/ 
+      when /(?:k|kb)$/
         KB
       when /(?:m|mb)$/
         MB
@@ -35,7 +34,7 @@ def multiplier(text)
         PB
       when /(?:b)$/
         B
-      else 
+      else
         raise ArgumentError, "Unknown bytes value '#{text}'"
     end
   end
diff --git a/logstash-core/lib/logstash/util/charset.rb b/logstash-core/lib/logstash/util/charset.rb
index a82f1a7bdaa..38cf1a6a4ae 100644
--- a/logstash-core/lib/logstash/util/charset.rb
+++ b/logstash-core/lib/logstash/util/charset.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/util"
 
 class LogStash::Util::Charset
diff --git a/logstash-core/lib/logstash/util/cloud_setting_auth.rb b/logstash-core/lib/logstash/util/cloud_setting_auth.rb
index 7a5d4f16066..e3284f918fc 100644
--- a/logstash-core/lib/logstash/util/cloud_setting_auth.rb
+++ b/logstash-core/lib/logstash/util/cloud_setting_auth.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/util/password"
 
 module LogStash module Util class CloudSettingAuth
diff --git a/logstash-core/lib/logstash/util/cloud_setting_id.rb b/logstash-core/lib/logstash/util/cloud_setting_id.rb
index acea252e645..5c387bbebea 100644
--- a/logstash-core/lib/logstash/util/cloud_setting_id.rb
+++ b/logstash-core/lib/logstash/util/cloud_setting_id.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "base64"
 
 module LogStash module Util class CloudSettingId
@@ -72,4 +71,4 @@ def to_s
   def inspect
     to_s
   end
-end end end
\ No newline at end of file
+end end end
diff --git a/logstash-core/lib/logstash/util/decorators.rb b/logstash-core/lib/logstash/util/decorators.rb
index f5e4ac5dabd..bb98a081c0e 100644
--- a/logstash-core/lib/logstash/util/decorators.rb
+++ b/logstash-core/lib/logstash/util/decorators.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/util"
 
 module LogStash::Util
diff --git a/logstash-core/lib/logstash/util/loggable.rb b/logstash-core/lib/logstash/util/loggable.rb
index 25e24cfcb69..59bb9678b43 100644
--- a/logstash-core/lib/logstash/util/loggable.rb
+++ b/logstash-core/lib/logstash/util/loggable.rb
@@ -1,6 +1,5 @@
 # encoding: utf-8
 require "logstash/logging/logger"
-require "logstash/namespace"
 
 module LogStash module Util
   module Loggable
diff --git a/logstash-core/lib/logstash/util/modules_setting_array.rb b/logstash-core/lib/logstash/util/modules_setting_array.rb
index d22ac416152..85def77c599 100644
--- a/logstash-core/lib/logstash/util/modules_setting_array.rb
+++ b/logstash-core/lib/logstash/util/modules_setting_array.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/util/password"
 
 module LogStash module Util class ModulesSettingArray
@@ -25,4 +24,4 @@ def initialize(value)
   def __class__
     LogStash::Util::ModulesSettingArray
   end
-end end end
\ No newline at end of file
+end end end
diff --git a/logstash-core/lib/logstash/util/password.rb b/logstash-core/lib/logstash/util/password.rb
index 355da471cc5..c84adbe33fb 100644
--- a/logstash-core/lib/logstash/util/password.rb
+++ b/logstash-core/lib/logstash/util/password.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 
 # This class exists to quietly wrap a password string so that, when printed or
 # logged, you don't accidentally print the password itself.
diff --git a/logstash-core/lib/logstash/util/safe_uri.rb b/logstash-core/lib/logstash/util/safe_uri.rb
index 74612fc069f..0513833ac1b 100644
--- a/logstash-core/lib/logstash/util/safe_uri.rb
+++ b/logstash-core/lib/logstash/util/safe_uri.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/util"
 require "forwardable"
 
@@ -8,14 +7,14 @@
 class LogStash::Util::SafeURI
   PASS_PLACEHOLDER = "xxxxxx".freeze
   HOSTNAME_PORT_REGEX=/\A(?<hostname>([A-Za-z0-9\.\-]+)|\[[0-9A-Fa-f\:]+\])(:(?<port>\d+))?\Z/
-  
+
   extend Forwardable
-  
-  
+
+
   attr_reader :uri
 
   public
-  def initialize(arg)    
+  def initialize(arg)
     @uri = case arg
            when String
              arg = "//#{arg}" if HOSTNAME_PORT_REGEX.match(arg)
@@ -39,7 +38,7 @@ def inspect
 
   def sanitized
     return uri unless password # nothing to sanitize here!
-    
+
     user_info = user ? "#{user}:#{PASS_PLACEHOLDER}" : nil
 
     make_uri(scheme, user_info, host, port, path, query, fragment)
@@ -64,7 +63,7 @@ def update(field, value)
     new_query = query
     new_fragment = fragment
 
-    case field 
+    case field
     when :scheme
       new_scheme = value
     when :user
@@ -124,7 +123,7 @@ def port
     # In java this is an int
     uri.port < 1 ? nil : uri.port
   end
- 
+
   def port=(new_port)
     update(:port, new_port)
   end
diff --git a/logstash-core/lib/logstash/util/worker_threads_default_printer.rb b/logstash-core/lib/logstash/util/worker_threads_default_printer.rb
index b35058ac24e..11c5f687c32 100644
--- a/logstash-core/lib/logstash/util/worker_threads_default_printer.rb
+++ b/logstash-core/lib/logstash/util/worker_threads_default_printer.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/namespace"
 require "logstash/util"
 
 # This class exists to format the settings for default worker threads
diff --git a/logstash-core/spec/logstash/modules/scaffold_spec.rb b/logstash-core/spec/logstash/modules/scaffold_spec.rb
index a67c3937472..e08eb4a27ec 100644
--- a/logstash-core/spec/logstash/modules/scaffold_spec.rb
+++ b/logstash-core/spec/logstash/modules/scaffold_spec.rb
@@ -1,6 +1,5 @@
 # encoding: utf-8
 #
-require "logstash/namespace"
 require "logstash/elasticsearch_client"
 require "logstash/modules/kibana_client"
 require "logstash/modules/kibana_config"
diff --git a/logstash-core/src/main/java/org/logstash/RubyUtil.java b/logstash-core/src/main/java/org/logstash/RubyUtil.java
index 9fafd29ad51..e8194ec1294 100644
--- a/logstash-core/src/main/java/org/logstash/RubyUtil.java
+++ b/logstash-core/src/main/java/org/logstash/RubyUtil.java
@@ -1,5 +1,6 @@
 package org.logstash;
 
+import java.util.stream.Stream;
 import org.jruby.NativeException;
 import org.jruby.Ruby;
 import org.jruby.RubyClass;
@@ -118,6 +119,10 @@ public final class RubyUtil {
     static {
         RUBY = Ruby.getGlobalRuntime();
         LOGSTASH_MODULE = RUBY.getOrCreateModule("LogStash");
+        Stream.of(
+            "Inputs", "Outputs", "Filters", "Search", "Config", "File", "Web", "PluginMixins",
+            "PluginManager", "Api", "Modules"
+        ).forEach(module -> RUBY.defineModuleUnder(module, LOGSTASH_MODULE));
         final RubyModule instrumentModule =
             RUBY.defineModuleUnder("Instrument", LOGSTASH_MODULE);
         METRIC_EXCEPTION_CLASS = instrumentModule.defineClassUnder(
diff --git a/qa/integration/fixtures/logstash-dummy-pack/lib/logstash/outputs/secret.rb b/qa/integration/fixtures/logstash-dummy-pack/lib/logstash/outputs/secret.rb
index ed621ac3259..63b97c9ccbd 100644
--- a/qa/integration/fixtures/logstash-dummy-pack/lib/logstash/outputs/secret.rb
+++ b/qa/integration/fixtures/logstash-dummy-pack/lib/logstash/outputs/secret.rb
@@ -1,6 +1,5 @@
 # encoding: utf-8
 require "logstash/outputs/base"
-require "logstash/namespace"
 
 # An secret output that does nothing.
 class LogStash::Outputs::Secret < LogStash::Outputs::Base
