diff --git a/logstash-core/src/main/java/org/logstash/common/SourceWithMetadata.java b/logstash-core/src/main/java/org/logstash/common/SourceWithMetadata.java
index 5d535d93714..e2b3a94eb0a 100644
--- a/logstash-core/src/main/java/org/logstash/common/SourceWithMetadata.java
+++ b/logstash-core/src/main/java/org/logstash/common/SourceWithMetadata.java
@@ -8,7 +8,6 @@
 import java.util.Objects;
 import java.util.regex.Pattern;
 import java.util.stream.Collectors;
-import java.util.stream.Stream;
 
 /**
  * Created by andrewvc on 9/6/16.
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/Hashable.java b/logstash-core/src/main/java/org/logstash/config/ir/Hashable.java
index 8bb79b98fe1..5c711bf66a4 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/Hashable.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/Hashable.java
@@ -1,7 +1,5 @@
 package org.logstash.config.ir;
 
-import org.logstash.common.Util;
-
 /**
  * Created by andrewvc on 12/23/16.
  */
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/HashableWithSource.java b/logstash-core/src/main/java/org/logstash/config/ir/HashableWithSource.java
index 77cd0abcdf8..ce49814fc05 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/HashableWithSource.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/HashableWithSource.java
@@ -1,7 +1,6 @@
 package org.logstash.config.ir;
 
 import org.logstash.common.Util;
-import org.logstash.config.ir.Hashable;
 
 /**
  * Created by andrewvc on 6/12/17.
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/Expression.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/Expression.java
index ebbb75dcd19..e78a63c7385 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/Expression.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/Expression.java
@@ -3,7 +3,6 @@
 import org.jruby.RubyInstanceConfig;
 import org.jruby.embed.AttributeName;
 import org.jruby.embed.ScriptingContainer;
-import org.logstash.config.ir.Hashable;
 import org.logstash.config.ir.BaseSourceComponent;
 import org.logstash.common.SourceWithMetadata;
 import org.logstash.config.ir.HashableWithSource;
@@ -45,4 +44,4 @@ public String toString() {
     public String hashSource() {
         return toRubyString();
     }
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/main/java/org/logstash/instrument/metrics/counter/LongCounter.java b/logstash-core/src/main/java/org/logstash/instrument/metrics/counter/LongCounter.java
index 635d62e7b04..69aeceafb05 100644
--- a/logstash-core/src/main/java/org/logstash/instrument/metrics/counter/LongCounter.java
+++ b/logstash-core/src/main/java/org/logstash/instrument/metrics/counter/LongCounter.java
@@ -4,7 +4,6 @@
 import org.logstash.instrument.metrics.AbstractMetric;
 import org.logstash.instrument.metrics.MetricType;
 
-import java.util.List;
 import java.util.concurrent.atomic.LongAdder;
 
 /**
diff --git a/logstash-core/src/test/java/org/logstash/ackedqueue/io/FileCheckpointIOTest.java b/logstash-core/src/test/java/org/logstash/ackedqueue/io/FileCheckpointIOTest.java
index a6a6455a7f4..9fa3df2f552 100644
--- a/logstash-core/src/test/java/org/logstash/ackedqueue/io/FileCheckpointIOTest.java
+++ b/logstash-core/src/test/java/org/logstash/ackedqueue/io/FileCheckpointIOTest.java
@@ -5,8 +5,6 @@
 import org.junit.Test;
 import org.junit.rules.TemporaryFolder;
 import org.logstash.ackedqueue.Checkpoint;
-import org.logstash.ackedqueue.io.CheckpointIO;
-import org.logstash.ackedqueue.io.FileCheckpointIO;
 
 import java.net.URL;
 import java.nio.file.Files;
@@ -52,4 +50,4 @@ public void write() throws Exception {
         byte[] compare = Files.readAllBytes(path);
         assertThat(contents, is(equalTo(compare)));
     }
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/ackedqueue/io/FileMmapIOTest.java b/logstash-core/src/test/java/org/logstash/ackedqueue/io/FileMmapIOTest.java
index fbc7db370f1..493cdcd826a 100644
--- a/logstash-core/src/test/java/org/logstash/ackedqueue/io/FileMmapIOTest.java
+++ b/logstash-core/src/test/java/org/logstash/ackedqueue/io/FileMmapIOTest.java
@@ -6,7 +6,6 @@
 import org.junit.rules.TemporaryFolder;
 import org.logstash.ackedqueue.SequencedList;
 import org.logstash.ackedqueue.StringElement;
-import org.logstash.ackedqueue.io.MmapPageIO;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -53,4 +52,4 @@ public void roundTrip() throws Exception {
         }
         assertThat(readList, is(equalTo(list)));
     }
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/ackedqueue/io/wip/MemoryPageIOStreamTest.java b/logstash-core/src/test/java/org/logstash/ackedqueue/io/wip/MemoryPageIOStreamTest.java
index 7b3a63b6a65..5e07a8a6d78 100644
--- a/logstash-core/src/test/java/org/logstash/ackedqueue/io/wip/MemoryPageIOStreamTest.java
+++ b/logstash-core/src/test/java/org/logstash/ackedqueue/io/wip/MemoryPageIOStreamTest.java
@@ -4,7 +4,6 @@
 import org.logstash.ackedqueue.Queueable;
 import org.logstash.ackedqueue.SequencedList;
 import org.logstash.ackedqueue.StringElement;
-import org.logstash.ackedqueue.io.wip.MemoryPageIOStream;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
@@ -185,4 +184,4 @@ public void readFromFirstUnackedSeqNum() throws Exception {
             assertThat(ele.toString(), is(equalTo(values[i + 3])));
         }
     }
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/common/SourceWithMetadataTest.java b/logstash-core/src/test/java/org/logstash/common/SourceWithMetadataTest.java
index 3621f4b5489..76e078cfbb9 100644
--- a/logstash-core/src/test/java/org/logstash/common/SourceWithMetadataTest.java
+++ b/logstash-core/src/test/java/org/logstash/common/SourceWithMetadataTest.java
@@ -5,7 +5,6 @@
 import org.junit.runners.Parameterized;
 
 import java.util.Arrays;
-import java.util.Collection;
 
 /**
  * Created by andrewvc on 6/12/17.
@@ -59,4 +58,4 @@ public void itShouldInstantiateCleanlyWhenParamsAreGood() throws IncompleteSourc
     public void itShouldThrowWhenMissingAField() throws IncompleteSourceWithMetadataException {
         new SourceWithMetadata(parameterGroup.protocol, parameterGroup.path, parameterGroup.line, parameterGroup.column, parameterGroup.text);
     }
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/common/io/RecordIOReaderTest.java b/logstash-core/src/test/java/org/logstash/common/io/RecordIOReaderTest.java
index 0053d99b97b..26520e11052 100644
--- a/logstash-core/src/test/java/org/logstash/common/io/RecordIOReaderTest.java
+++ b/logstash-core/src/test/java/org/logstash/common/io/RecordIOReaderTest.java
@@ -11,7 +11,6 @@
 import java.nio.file.Path;
 import java.util.Arrays;
 import java.util.Comparator;
-import java.util.Random;
 import java.util.function.Function;
 
 import static org.hamcrest.CoreMatchers.equalTo;
@@ -178,4 +177,4 @@ private char[] fillArray(final int fillSize) {
         Arrays.fill(blockSize, 'e');
         return blockSize;
     }
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/PipelineIRTest.java b/logstash-core/src/test/java/org/logstash/config/ir/PipelineIRTest.java
index ad50d492621..c2e03edef20 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/PipelineIRTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/PipelineIRTest.java
@@ -4,11 +4,7 @@
 import org.logstash.common.Util;
 import org.logstash.config.ir.graph.Graph;
 
-import java.nio.channels.Pipe;
-
 import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertThat;
-import static org.junit.Assert.assertTrue;
 import static org.logstash.config.ir.DSL.*;
 import static org.logstash.config.ir.PluginDefinition.Type.*;
 
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/graph/GraphTest.java b/logstash-core/src/test/java/org/logstash/config/ir/graph/GraphTest.java
index dda10943f06..ae877065d2b 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/graph/GraphTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/graph/GraphTest.java
@@ -9,7 +9,6 @@
 
 import java.util.Collection;
 import java.util.Collections;
-import java.util.HashSet;
 
 import static org.hamcrest.CoreMatchers.instanceOf;
 import static org.hamcrest.CoreMatchers.is;
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/graph/PluginVertexTest.java b/logstash-core/src/test/java/org/logstash/config/ir/graph/PluginVertexTest.java
index 1c7b07b5dd0..78098a07b08 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/graph/PluginVertexTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/graph/PluginVertexTest.java
@@ -2,7 +2,6 @@
 
 import org.junit.Test;
 import org.logstash.common.IncompleteSourceWithMetadataException;
-import org.logstash.common.SourceWithMetadata;
 import org.logstash.config.ir.InvalidIRException;
 import org.logstash.config.ir.PluginDefinition;
 
diff --git a/logstash-core/src/test/java/org/logstash/instrument/metrics/counter/LongCounterTest.java b/logstash-core/src/test/java/org/logstash/instrument/metrics/counter/LongCounterTest.java
index 1fa1e5c49e2..de41d0141e5 100644
--- a/logstash-core/src/test/java/org/logstash/instrument/metrics/counter/LongCounterTest.java
+++ b/logstash-core/src/test/java/org/logstash/instrument/metrics/counter/LongCounterTest.java
@@ -4,8 +4,6 @@
 import org.junit.Test;
 import org.logstash.instrument.metrics.MetricType;
 
-import java.util.Collections;
-
 import static org.assertj.core.api.Assertions.assertThat;
 
 /**
@@ -57,4 +55,4 @@ public void noInitialValue() {
     public void type() {
         assertThat(longCounter.type()).isEqualTo(MetricType.COUNTER_LONG.asString());
     }
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/BooleanGaugeTest.java b/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/BooleanGaugeTest.java
index 773b8637d67..b29a1f631ec 100644
--- a/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/BooleanGaugeTest.java
+++ b/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/BooleanGaugeTest.java
@@ -3,8 +3,6 @@
 import org.junit.Test;
 import org.logstash.instrument.metrics.MetricType;
 
-import java.util.Collections;
-
 import static org.assertj.core.api.Assertions.assertThat;
 
 /**
@@ -34,4 +32,4 @@ public void set() {
         assertThat(gauge.getType()).isEqualTo(MetricType.GAUGE_BOOLEAN);
         assertThat(gauge.getValue()).isFalse();
     }
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/RubyHashGaugeTest.java b/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/RubyHashGaugeTest.java
index 8cd268e8cd1..09da50b0539 100644
--- a/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/RubyHashGaugeTest.java
+++ b/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/RubyHashGaugeTest.java
@@ -8,8 +8,6 @@
 import org.mockito.Mock;
 import org.mockito.runners.MockitoJUnitRunner;
 
-import java.util.Collections;
-
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.assertj.core.api.ThrowableAssert.catchThrowable;
 import static org.mockito.Mockito.when;
@@ -54,4 +52,4 @@ public void set() {
         assertThat(gauge.getType()).isEqualTo(MetricType.GAUGE_RUBYHASH);
     }
 
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/RubyTimeStampGaugeTest.java b/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/RubyTimeStampGaugeTest.java
index 6bd152b16fa..e4050407b2e 100644
--- a/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/RubyTimeStampGaugeTest.java
+++ b/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/RubyTimeStampGaugeTest.java
@@ -7,11 +7,8 @@
 import org.logstash.ext.JrubyTimestampExtLibrary.RubyTimestamp;
 import org.logstash.instrument.metrics.MetricType;
 import org.mockito.Mock;
-import org.mockito.Mockito;
 import org.mockito.runners.MockitoJUnitRunner;
 
-import java.util.Collections;
-
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.mockito.Mockito.when;
 
@@ -50,4 +47,4 @@ public void set() {
         assertThat(gauge.getValue()).isEqualTo(rubyTimestamp.getTimestamp());
         assertThat(gauge.getType()).isEqualTo(MetricType.GAUGE_RUBYTIMESTAMP);
     }
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/TextGaugeTest.java b/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/TextGaugeTest.java
index 2c2faf85560..5b19b0c9980 100644
--- a/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/TextGaugeTest.java
+++ b/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/TextGaugeTest.java
@@ -3,8 +3,6 @@
 import org.junit.Test;
 import org.logstash.instrument.metrics.MetricType;
 
-import java.util.Collections;
-
 import static org.assertj.core.api.Assertions.assertThat;
 
 /**
@@ -30,4 +28,4 @@ public void set() {
         assertThat(gauge.getValue()).isEqualTo("baz");
         assertThat(gauge.getType()).isEqualTo(MetricType.GAUGE_TEXT);
     }
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/UnknownGaugeTest.java b/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/UnknownGaugeTest.java
index 725a2bec73b..0b57805ea72 100644
--- a/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/UnknownGaugeTest.java
+++ b/logstash-core/src/test/java/org/logstash/instrument/metrics/gauge/UnknownGaugeTest.java
@@ -4,7 +4,6 @@
 import org.logstash.instrument.metrics.MetricType;
 
 import java.net.URI;
-import java.util.Collections;
 
 import static org.assertj.core.api.Assertions.assertThat;
 
diff --git a/logstash-core/src/test/java/org/logstash/instrument/witness/configuration/ConfigWitnessTest.java b/logstash-core/src/test/java/org/logstash/instrument/witness/configuration/ConfigWitnessTest.java
index da733c05133..337505a0669 100644
--- a/logstash-core/src/test/java/org/logstash/instrument/witness/configuration/ConfigWitnessTest.java
+++ b/logstash-core/src/test/java/org/logstash/instrument/witness/configuration/ConfigWitnessTest.java
@@ -3,7 +3,6 @@
 import com.fasterxml.jackson.databind.ObjectMapper;
 import org.junit.Before;
 import org.junit.Test;
-import org.logstash.instrument.witness.configuration.ConfigWitness;
 
 import static org.assertj.core.api.Assertions.assertThat;
 
@@ -141,4 +140,4 @@ public void testSerializeEnableDeadLetterPath() throws Exception {
                 "\"dead_letter_queue_enabled\":false,\"dead_letter_queue_path\":\"/var/dlq\"}}");
     }
 
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/DeadLetterQueueWitnessTest.java b/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/DeadLetterQueueWitnessTest.java
index e59f82c2e66..770a1dd181b 100644
--- a/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/DeadLetterQueueWitnessTest.java
+++ b/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/DeadLetterQueueWitnessTest.java
@@ -4,7 +4,6 @@
 import com.fasterxml.jackson.databind.ObjectMapper;
 import org.junit.Before;
 import org.junit.Test;
-import org.logstash.instrument.witness.pipeline.DeadLetterQueueWitness;
 
 import static org.assertj.core.api.Assertions.assertThat;
 
@@ -45,4 +44,4 @@ public void testSerializeQueueSize() throws Exception {
         String json = witness.asJson();
         assertThat(json).isEqualTo("{\"dead_letter_queue\":{\"queue_size_in_bytes\":98}}");
     }
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/ErrorWitnessTest.java b/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/ErrorWitnessTest.java
index ffa4f60882b..659a4d35d69 100644
--- a/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/ErrorWitnessTest.java
+++ b/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/ErrorWitnessTest.java
@@ -3,7 +3,6 @@
 import com.fasterxml.jackson.databind.ObjectMapper;
 import org.junit.Before;
 import org.junit.Test;
-import org.logstash.instrument.witness.pipeline.ErrorWitness;
 
 import static org.assertj.core.api.Assertions.assertThat;
 
@@ -68,4 +67,4 @@ public void testSerializeBackTrace() throws Exception {
         json = witness.asJson();
         assertThat(json).contains("Uh oh!").contains("ErrorWitnessTest");
     }
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/EventsWitnessTest.java b/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/EventsWitnessTest.java
index 1094a4a443a..283cc5bca81 100644
--- a/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/EventsWitnessTest.java
+++ b/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/EventsWitnessTest.java
@@ -3,7 +3,6 @@
 import com.fasterxml.jackson.databind.ObjectMapper;
 import org.junit.Before;
 import org.junit.Test;
-import org.logstash.instrument.witness.pipeline.EventsWitness;
 
 import static org.assertj.core.api.Assertions.assertThat;
 
@@ -145,4 +144,4 @@ public void testSerializeQueueDuration() throws Exception {
         assertThat(json).doesNotContain("555");
     }
 
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/PipelineWitnessTest.java b/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/PipelineWitnessTest.java
index a4b146d5f25..953be83d678 100644
--- a/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/PipelineWitnessTest.java
+++ b/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/PipelineWitnessTest.java
@@ -3,10 +3,8 @@
 import com.fasterxml.jackson.databind.ObjectMapper;
 import org.junit.Before;
 import org.junit.Test;
-import org.logstash.instrument.witness.pipeline.PipelineWitness;
 
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.assertj.core.api.Assertions.within;
 
 /**
  * Unit tests for {@link PipelineWitness}
@@ -130,4 +128,4 @@ public void testSerializeDeadLetterQueue() throws Exception {
         json = witness.asJson();
         assertThat(json).contains("\"dead_letter_queue\":{\"queue_size_in_bytes\":0}");
     }
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/PipelinesWitnessTest.java b/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/PipelinesWitnessTest.java
index efeecbdfcc1..197d3f74b8f 100644
--- a/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/PipelinesWitnessTest.java
+++ b/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/PipelinesWitnessTest.java
@@ -3,7 +3,6 @@
 import com.fasterxml.jackson.databind.ObjectMapper;
 import org.junit.Before;
 import org.junit.Test;
-import org.logstash.instrument.witness.pipeline.PipelinesWitness;
 
 import static org.assertj.core.api.Assertions.assertThat;
 
@@ -49,4 +48,4 @@ public void testSerializePipelines() throws Exception {
         assertThat(json).contains("aaa").contains("bbb").contains("ccc");
     }
 
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/PluginWitnessTest.java b/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/PluginWitnessTest.java
index 829224c48a4..092d69f4151 100644
--- a/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/PluginWitnessTest.java
+++ b/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/PluginWitnessTest.java
@@ -7,7 +7,6 @@
 import org.junit.Test;
 import org.logstash.RubyUtil;
 import org.logstash.instrument.metrics.MetricType;
-import org.logstash.instrument.witness.pipeline.PluginWitness;
 
 import java.io.IOException;
 import java.math.BigDecimal;
@@ -167,4 +166,4 @@ public void testSerializationUnknownCustomGauge() throws Exception {
         witness.custom().gauge("a", UUID.randomUUID());
         witness.asJson();
     }
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/PluginsWitnessTest.java b/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/PluginsWitnessTest.java
index 78a15554dde..1cc5b605d5a 100644
--- a/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/PluginsWitnessTest.java
+++ b/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/PluginsWitnessTest.java
@@ -4,7 +4,6 @@
 import com.fasterxml.jackson.databind.ObjectMapper;
 import org.junit.Before;
 import org.junit.Test;
-import org.logstash.instrument.witness.pipeline.PluginsWitness;
 
 import static org.assertj.core.api.Assertions.assertThat;
 
@@ -94,4 +93,4 @@ public void testSerializeCodecs() throws Exception{
         json = witness.asJson();
         assertThat(json).isEqualTo("{\"plugins\":{\"inputs\":[],\"filters\":[],\"outputs\":[]}}");
     }
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/QueueWitnessTest.java b/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/QueueWitnessTest.java
index 7232e369cc5..91b64a912a1 100644
--- a/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/QueueWitnessTest.java
+++ b/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/QueueWitnessTest.java
@@ -3,7 +3,6 @@
 import com.fasterxml.jackson.databind.ObjectMapper;
 import org.junit.Before;
 import org.junit.Test;
-import org.logstash.instrument.witness.pipeline.QueueWitness;
 
 import static org.assertj.core.api.Assertions.assertThat;
 
@@ -172,4 +171,4 @@ public void testSerializeEvents() throws Exception{
         assertThat(json).isEqualTo("{\"queue\":{\"type\":\"persisted\",\"events\":102,\"capacity\":{\"queue_size_in_bytes\":0,\"page_capacity_in_bytes\":0," +
                 "\"max_queue_size_in_bytes\":0,\"max_unread_events\":0},\"data\":{\"path\":null,\"free_space_in_bytes\":0,\"storage_type\":null}}}");
     }
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/ReloadWitnessTest.java b/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/ReloadWitnessTest.java
index 8da70124695..fdca66ea1b3 100644
--- a/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/ReloadWitnessTest.java
+++ b/logstash-core/src/test/java/org/logstash/instrument/witness/pipeline/ReloadWitnessTest.java
@@ -7,7 +7,6 @@
 import org.junit.runner.RunWith;
 import org.logstash.Timestamp;
 import org.logstash.ext.JrubyTimestampExtLibrary;
-import org.logstash.instrument.witness.pipeline.ReloadWitness;
 import org.mockito.Mock;
 import org.mockito.runners.MockitoJUnitRunner;
 
@@ -97,4 +96,4 @@ public void testSerializeError() throws Exception{
         assertThat(json).contains("bar");
     }
 
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/test/java/org/logstash/log/LogstashLoggerContextFactoryTest.java b/logstash-core/src/test/java/org/logstash/log/LogstashLoggerContextFactoryTest.java
index 43cad1609fd..a70feb30f63 100644
--- a/logstash-core/src/test/java/org/logstash/log/LogstashLoggerContextFactoryTest.java
+++ b/logstash-core/src/test/java/org/logstash/log/LogstashLoggerContextFactoryTest.java
@@ -1,17 +1,12 @@
 package org.logstash.log;
 
 
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
 import org.apache.logging.log4j.spi.LoggerContext;
-import org.apache.logging.log4j.spi.LoggerContextFactory;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.mockito.Mock;
 import org.mockito.runners.MockitoJUnitRunner;
-import static org.mockito.Mockito.verifyZeroInteractions;
-import static org.mockito.Mockito.verify;
 
 import java.net.URI;
 
@@ -40,4 +35,4 @@ public void testGetContextAlwaysReturnsTheSameObject() {
                 .isEqualTo(contextFactory.getContext("someRandomValue", null, null, false))
                 .isEqualTo(contextFactory.getContext("someOtherRandomValue", ClassLoader.getSystemClassLoader(), null, false, URI.create("foo"), "name"));
     }
-}
\ No newline at end of file
+}
