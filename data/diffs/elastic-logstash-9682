diff --git a/logstash-core/lib/logstash/pipeline_action/create.rb b/logstash-core/lib/logstash/pipeline_action/create.rb
index d8507d33443..af08b4f580e 100644
--- a/logstash-core/lib/logstash/pipeline_action/create.rb
+++ b/logstash-core/lib/logstash/pipeline_action/create.rb
@@ -43,10 +43,12 @@ def execute(agent, pipelines)
       status = nil
       pipelines.compute(pipeline_id) do |id,value|
         if value
-          LogStash::ConvergeResult::ActionResult.create(self, true)
+          # Something started it ahead of us, nothing to do here
+          status = true
+        else
+          status = pipeline.start # block until the pipeline is correctly started or crashed
+          pipeline # The pipeline is successfully started we can add it to the map
         end
-        status = pipeline.start # block until the pipeline is correctly started or crashed
-        pipeline # The pipeline is successfully started we can add it to the map
       end
 
 
diff --git a/logstash-core/lib/logstash/pipeline_action/reload.rb b/logstash-core/lib/logstash/pipeline_action/reload.rb
index 92557976626..9c14a02e5ae 100644
--- a/logstash-core/lib/logstash/pipeline_action/reload.rb
+++ b/logstash-core/lib/logstash/pipeline_action/reload.rb
@@ -47,16 +47,18 @@ def execute(agent, pipelines)
 
       logger.info("Reloading pipeline", "pipeline.id" => pipeline_id)
 
+      status = nil
       pipelines.compute(pipeline_id) do |_,pipeline|
         status = Stop.new(pipeline_id).execute(agent, pipelines)
 
         if status
-          return Create.new(@pipeline_config, @metric).execute(agent, pipelines)
-        else
-          return status
+          status Create.new(@pipeline_config, @metric).execute(agent, pipelines)
         end
+
         pipeline
       end
+
+      LogStash::ConvergeResult::ActionResult.create(self, status)
     end
   end
 end end
diff --git a/logstash-core/lib/logstash/pipeline_action/stop.rb b/logstash-core/lib/logstash/pipeline_action/stop.rb
index 06693a81c1a..2efd0f488a3 100644
--- a/logstash-core/lib/logstash/pipeline_action/stop.rb
+++ b/logstash-core/lib/logstash/pipeline_action/stop.rb
@@ -12,7 +12,8 @@ def initialize(pipeline_id)
     end
 
     def execute(agent, pipelines)
-      pipelines.compute(pipeline_id) do |_,pipeline|
+      # We only have work to do if the pipeline does, in-fact, exist
+      pipelines.computeIfPresent(pipeline_id) do |_,pipeline|
         pipeline.shutdown { LogStash::ShutdownWatcher.start(pipeline) }
         pipeline.thread.join
         nil # delete the pipeline
