diff --git a/CHANGELOG b/CHANGELOG
index b6658ee5bea..de27995e31a 100644
--- a/CHANGELOG
+++ b/CHANGELOG
@@ -1,4 +1,4 @@
-1.4.0 (???)
+1.4.0 beta1 (Feb 20, 2014)
   # general
   - Elasticsearch 1.0 libraries are now included. See the Elasticsearch
     release notes for details: http://www.elasticsearch.org/downloads/1-0-0/
@@ -14,6 +14,7 @@
   - The 'debug' setting was removed from most plugins. Prior to this, 
     most plugins advertised the availability of this setting but actually
     did not use it (#996, Jordan Sissel).
+  - bugfix: --pluginpath now lets you load codecs. (#1077, Sergey Zhemzhitsky)
 
   # inputs
   - improvement: log4j: port now defaults to 4560, the default log4j
diff --git a/Makefile b/Makefile
index e6e405ac161..5365a6718d7 100644
--- a/Makefile
+++ b/Makefile
@@ -288,7 +288,7 @@ build/flatgems: | build vendor/bundle
 	$(QUIET)rsync -a $(VENDOR_DIR)/gems/user_agent_parser-*/vendor/ua-parser $@/vendor
 	$(QUIET)rsync -a $(VENDOR_DIR)/gems/aws-sdk-*/ca-bundle.crt $@/root/
 	@# A lame hack to work around the aws-sdk bug (LOGSTASH-1718)
-	sed -i "" -e "s@SRC = ROOT + '/lib/aws'@SRC = ROOT + 'aws'@" $@/lib/aws/core.rb
+	sed -i -e "s@SRC = ROOT + '/lib/aws'@SRC = ROOT + 'aws'@" $@/lib/aws/core.rb
 
 
 flatjar-test:
@@ -351,19 +351,19 @@ build/docs/tutorials/getting-started-with-logstash.xml: docs/tutorials/getting-s
 # bluecloth gem doesn't work on jruby. Use ruby.
 build/docs/inputs/%.html: lib/logstash/inputs/%.rb docs/docgen.rb docs/plugin-doc.html.erb | build/docs/inputs
 	$(QUIET)ruby docs/docgen.rb -o build/docs $<
-	$(QUIET)sed -i "" -e 's/%VERSION%/$(VERSION)/g' $@
-	$(QUIET)sed -i "" -e 's/%ELASTICSEARCH_VERSION%/$(ELASTICSEARCH_VERSION)/g' $@
+	$(QUIET)sed -i -e 's/%VERSION%/$(VERSION)/g' $@
+	$(QUIET)sed -i -e 's/%ELASTICSEARCH_VERSION%/$(ELASTICSEARCH_VERSION)/g' $@
 build/docs/filters/%.html: lib/logstash/filters/%.rb docs/docgen.rb docs/plugin-doc.html.erb | build/docs/filters
 	$(QUIET)ruby docs/docgen.rb -o build/docs $<
-	$(QUIET)sed -i "" -e 's/%VERSION%/$(VERSION)/g' $@
-	$(QUIET)sed -i "" -e 's/%ELASTICSEARCH_VERSION%/$(ELASTICSEARCH_VERSION)/g' $@
+	$(QUIET)sed -i -e 's/%VERSION%/$(VERSION)/g' $@
+	$(QUIET)sed -i -e 's/%ELASTICSEARCH_VERSION%/$(ELASTICSEARCH_VERSION)/g' $@
 build/docs/outputs/%.html: lib/logstash/outputs/%.rb docs/docgen.rb docs/plugin-doc.html.erb | build/docs/outputs
 	$(QUIET)ruby docs/docgen.rb -o build/docs $<
-	$(QUIET)sed -i "" -e 's/%VERSION%/$(VERSION)/g' $@
-	$(QUIET)sed -i "" -e 's/%ELASTICSEARCH_VERSION%/$(ELASTICSEARCH_VERSION)/g' $@
+	$(QUIET)sed -i -e 's/%VERSION%/$(VERSION)/g' $@
+	$(QUIET)sed -i -e 's/%ELASTICSEARCH_VERSION%/$(ELASTICSEARCH_VERSION)/g' $@
 build/docs/codecs/%.html: lib/logstash/codecs/%.rb docs/docgen.rb docs/plugin-doc.html.erb | build/docs/codecs
 	$(QUIET)ruby docs/docgen.rb -o build/docs $<
-	$(QUIET)sed -i "" -e 's/%VERSION%/$(VERSION)/g' $@
+	$(QUIET)sed -i -e 's/%VERSION%/$(VERSION)/g' $@
 
 build/docs/%: docs/% lib/logstash/version.rb Makefile
 	@echo "Copying $< (to $@)"
@@ -372,8 +372,8 @@ build/docs/%: docs/% lib/logstash/version.rb Makefile
 	$(QUIET)case "$(suffix $<)" in \
 		.gz|.bz2|.png|.jpg) ;; \
 		*) \
-			sed -i "" -e 's/%VERSION%/$(VERSION)/g' $@ ; \
-			sed -i "" -e 's/%ELASTICSEARCH_VERSION%/$(ELASTICSEARCH_VERSION)/g' $@ ; \
+			sed -i -e 's/%VERSION%/$(VERSION)/g' $@ ; \
+			sed -i -e 's/%ELASTICSEARCH_VERSION%/$(ELASTICSEARCH_VERSION)/g' $@ ; \
 			;; \
 	esac
 
@@ -381,8 +381,8 @@ build/docs/index.html: $(addprefix build/docs/,$(subst lib/logstash/,,$(subst .r
 build/docs/index.html: docs/generate_index.rb lib/logstash/version.rb docs/index.html.erb Makefile
 	@echo "Building documentation index.html"
 	$(QUIET)ruby $< build/docs > $@
-	$(QUIET)sed -i "" -e 's/%VERSION%/$(VERSION)/g' $@
-	$(QUIET)sed -i "" -e 's/%ELASTICSEARCH_VERSION%/$(ELASTICSEARCH_VERSION)/g' $@
+	$(QUIET)sed -i -e 's/%VERSION%/$(VERSION)/g' $@
+	$(QUIET)sed -i -e 's/%ELASTICSEARCH_VERSION%/$(ELASTICSEARCH_VERSION)/g' $@
 
 .PHONY: patterns
 patterns:
@@ -453,8 +453,8 @@ prepare-tarball:
 	@echo "=> Preparing tarball"
 	$(QUIET)$(MAKE) $(WORKDIR)
 	$(QUIET)rsync -a --relative bin lib spec locales patterns vendor/bundle/jruby vendor/geoip vendor/jar vendor/kibana vendor/ua-parser vendor/collectd LICENSE README.md --exclude 'vendor/bundle/jruby/1.9/cache' --exclude 'vendor/bundle/jruby/1.9/gems/*/doc' --exclude 'vendor/jar/elasticsearch-$(ELASTICSEARCH_VERSION).tar.gz'  $(WORKDIR)
-	$(QUIET)sed -i "" -e 's/^LOGSTASH_VERSION = .*/LOGSTASH_VERSION = "$(VERSION)"/' $(WORKDIR)/lib/logstash/version.rb
-	$(QUIET)sed -i "" -e 's/%JRUBY_VERSION%/$(JRUBY_VERSION)/' $(WORKDIR)/bin/logstash.bat
+	$(QUIET)sed -i -e 's/^LOGSTASH_VERSION = .*/LOGSTASH_VERSION = "$(VERSION)"/' $(WORKDIR)/lib/logstash/version.rb
+	$(QUIET)sed -i -e 's/%JRUBY_VERSION%/$(JRUBY_VERSION)/' $(WORKDIR)/bin/logstash.bat
 
 .PHONY: tarball
 tarball: | build/logstash-$(VERSION).tar.gz
diff --git a/docs/extending/example-add-a-new-filter.md b/docs/extending/example-add-a-new-filter.md
index ab2819ac11f..6b613226735 100644
--- a/docs/extending/example-add-a-new-filter.md
+++ b/docs/extending/example-add-a-new-filter.md
@@ -91,27 +91,14 @@ plugin.
 You can use the agent flag --pluginpath flag to specify where the root of your
 plugin tree is. In our case, it's the current directory.
 
-    % logstash --pluginpath . -f example.conf
-
-If you use the jar release of logstash, you have an additional option - you can
-include the plugin right in the jar file.
-
-    # This command will take your 'logstash/filters/foo.rb' file
-    # and add it into the jar file.
-    % jar -uf logstash-%VERSION%-flatjar.jar logstash/filters/foo.rb
-
-    # Verify it's in the right location in the jar!
-    % jar tf logstash-%VERSION%-flatjar.jar | grep foo.rb
-    logstash/filters/foo.rb
-
-    % java -jar logstash-%VERSION%-flatjar.jar agent -f example.conf
+    % bin/logstash --pluginpath your/plugin/root -f example.conf
 
 ## Example running
 
 In the example below, I typed in "the quick brown fox" after running the java
 command.
 
-    % java -jar logstash-%VERSION%-flatjar.jar agent -f example.conf
+    % bin/logstash -f example.conf
     the quick brown fox   
     2011-05-12T01:05:09.495000Z stdin://snack.home/: Hello world!
 
diff --git a/docs/index.html.erb b/docs/index.html.erb
index d4485831075..7400e2bec91 100644
--- a/docs/index.html.erb
+++ b/docs/index.html.erb
@@ -6,7 +6,7 @@ layout: content_right
 
   <h3> For Users </h3>
   <ul>
-    <li> <a href="https://download.elasticsearch.org/logstash/logstash/logstash-%VERSION%-flatjar.jar"> download logstash %VERSION% </a> </li>
+    <li> <a href="https://download.elasticsearch.org/logstash/logstash/logstash-%VERSION%.tar.gz"> download logstash %VERSION% </a> </li>
     <li> <a href="repositories"> package repositories</a> </li>
     <li> <a href="configuration"> configuration file overview </a> </li>
     <li> <a href="configuration#conditionals">conditionals</a> </li>
diff --git a/docs/learn.md b/docs/learn.md
index bab0e9730b2..77f6f3d643e 100644
--- a/docs/learn.md
+++ b/docs/learn.md
@@ -38,7 +38,7 @@ for such things, that works for me, too.)
 
 ## Download It
 
-[Download logstash-%VERSION%](https://download.elasticsearch.org/logstash/logstash/logstash-%VERSION%-flatjar.jar)
+[Download logstash-%VERSION%](https://download.elasticsearch.org/logstash/logstash/logstash-%VERSION%.tar.gz)
 
 ## What's next?
 
diff --git a/docs/release-engineering.md b/docs/release-engineering.md
index 828f30011f2..f554b848be2 100644
--- a/docs/release-engineering.md
+++ b/docs/release-engineering.md
@@ -24,7 +24,7 @@ right? ;)
 
 * Make sure all tests pass (make test)
   * `ruby bin/logstash test`
-  * `java -jar logstash-x.y.z-flatjar.jar test`
+  * `java -jar logstash-x.y.z.tar.gz test`
 * Update VERSION.rb
   * VERSION=$(ruby -r./VERSION -e 'puts LOGSTASH_VERSION')
 * Ensure CHANGELOG is up-to-date
diff --git a/docs/tutorials/10-minute-walkthrough/index.md b/docs/tutorials/10-minute-walkthrough/index.md
index 1583441dff3..cd4dea64a28 100644
--- a/docs/tutorials/10-minute-walkthrough/index.md
+++ b/docs/tutorials/10-minute-walkthrough/index.md
@@ -8,7 +8,7 @@ layout: content_right
 
 ### Download logstash:
 
-* [logstash-%VERSION%-flatjar.jar](https://download.elasticsearch.org/logstash/logstash/logstash-%VERSION%-flatjar.jar)
+* [logstash-%VERSION%.tar.gz](https://download.elasticsearch.org/logstash/logstash/logstash-%VERSION%.tar.gz)
 
 ### Requirements:
 
diff --git a/docs/tutorials/getting-started-with-logstash.asciidoc b/docs/tutorials/getting-started-with-logstash.asciidoc
index 9aa5fccafd2..05563fd379e 100644
--- a/docs/tutorials/getting-started-with-logstash.asciidoc
+++ b/docs/tutorials/getting-started-with-logstash.asciidoc
@@ -28,9 +28,9 @@ Once you have verified the existence of Java on your system, we can move on!
 === Logstash in two commands
 First, we're going to download the pre-built logstash binary and run it with a very simple configuration.
 ----
-curl -O https://download.elasticsearch.org/logstash/logstash/logstash-%VERSION%-flatjar.jar
+curl -O https://download.elasticsearch.org/logstash/logstash/logstash-%VERSION%.tar.gz
 ----
-Now you should have the file named 'logstash-%VERSION%-flatjar.jar' on your local filesystem. Let's run it:
+Now you should have the file named 'logstash-%VERSION%.tar.gz' on your local filesystem. Let's run it:
 ----
 bin/logstash -e 'input { stdin { } } output { stdout {} }'
 ----
diff --git a/tools/release.sh b/tools/release.sh
index 392a9dc3a92..7738cbc8dff 100644
--- a/tools/release.sh
+++ b/tools/release.sh
@@ -25,6 +25,8 @@ prepare() {
   rm -f $logstash/.VERSION.mk
   make -C $logstash .VERSION.mk
   cp $logstash/.VERSION.mk $workdir
+  rm -f $workdir/build/pkg
+  rm -f $workdir/build/*.{zip,rpm,gz,deb} || true
 }
 
 docs() {
@@ -34,8 +36,8 @@ docs() {
 }
 
 tests() {
-  make -C $workdir test
-  make -C $workdir tarball test
+  USE_JRUBY=1 make -C $logstash test QUIET=
+  USE_JRUBY=1 make -C $logstash tarball test QUIET=
 }
 
 packages() {
@@ -43,8 +45,18 @@ packages() {
     rm -f $path/build/*.tar.gz
     rm -f $path/build/*.zip
     echo "Building packages: $path"
-    make -C $path tarball package
-    (cd $path/build; cp *.gz *.rpm *.deb *.zip $workdir/build)
+    make -C $path tarball
+    [ "$path" = "$logstash" ] && make -C $path flatjar
+    for dir in build pkg ; do
+      [ ! -d "$path/$dir" ] && continue
+      (cd $path/$dir;
+        for i in *.gz *.rpm *.deb *.zip *.jar ; do
+          [ ! -f "$i" ] && continue
+          echo "Copying $path/$dir/$i"
+          cp $path/$dir/$i $workdir/build
+        done
+      )
+    done
   done
 }
 
