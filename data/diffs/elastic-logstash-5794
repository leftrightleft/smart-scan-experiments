diff --git a/logstash-core-plugin-api/lib/logstash-core-plugin-api/version.rb b/logstash-core-plugin-api/lib/logstash-core-plugin-api/version.rb
index 9e4e415bd49..7c3d3e44fb7 100644
--- a/logstash-core-plugin-api/lib/logstash-core-plugin-api/version.rb
+++ b/logstash-core-plugin-api/lib/logstash-core-plugin-api/version.rb
@@ -1,2 +1,2 @@
 # encoding: utf-8
-LOGSTASH_CORE_PLUGIN_API = "2.1.7"
+LOGSTASH_CORE_PLUGIN_API = "2.1.12"
diff --git a/logstash-core/lib/logstash/output_delegator.rb b/logstash-core/lib/logstash/output_delegator.rb
index 420c6945751..3a0575ac91d 100644
--- a/logstash-core/lib/logstash/output_delegator.rb
+++ b/logstash-core/lib/logstash/output_delegator.rb
@@ -12,7 +12,8 @@ def initialize(logger, output_class, metric, strategy_registry, plugin_args)
     @output_class = output_class
     @metric = metric
     @plugin_args = plugin_args
-    @strategy_registry ||= ::LogStash::OutputDelegatorStrategyRegistry.instance
+    @strategy_registry = strategy_registry
+    raise ArgumentError, "No strategy registry specified" unless strategy_registry
     raise ArgumentError, "No ID specified! Got args #{plugin_args}" unless id
     
     build_strategy!
diff --git a/logstash-core/lib/logstash/output_delegator_strategies/legacy.rb b/logstash-core/lib/logstash/output_delegator_strategies/legacy.rb
index fde11d74fd5..52539c42b45 100644
--- a/logstash-core/lib/logstash/output_delegator_strategies/legacy.rb
+++ b/logstash-core/lib/logstash/output_delegator_strategies/legacy.rb
@@ -2,7 +2,7 @@
 module LogStash module OutputDelegatorStrategies class Legacy
   attr_reader :worker_count, :workers
   
-  def initialize(logger, klass, metric, plugin_args={})
+  def initialize(logger, klass, metric, plugin_args)
     @worker_count = (plugin_args["workers"] || 1).to_i
     @workers = @worker_count.times.map {|t| klass.new(plugin_args)}
     @worker_queue = SizedQueue.new(@worker_count)
diff --git a/logstash-core/lib/logstash/output_delegator_strategies/shared.rb b/logstash-core/lib/logstash/output_delegator_strategies/shared.rb
index 02a75f6ed2f..40a0ff8c86f 100644
--- a/logstash-core/lib/logstash/output_delegator_strategies/shared.rb
+++ b/logstash-core/lib/logstash/output_delegator_strategies/shared.rb
@@ -1,5 +1,5 @@
 module LogStash module OutputDelegatorStrategies class Shared
-  def initialize(logger, klass, metric, xopts={}, plugin_args={})
+  def initialize(logger, klass, metric, plugin_args)
     @output = klass.new(plugin_args)
   end
   
diff --git a/logstash-core/lib/logstash/output_delegator_strategies/single.rb b/logstash-core/lib/logstash/output_delegator_strategies/single.rb
index 53903c36305..e476013ff8c 100644
--- a/logstash-core/lib/logstash/output_delegator_strategies/single.rb
+++ b/logstash-core/lib/logstash/output_delegator_strategies/single.rb
@@ -1,5 +1,5 @@
 module LogStash module OutputDelegatorStrategies class Single
-  def initialize(logger, klass, metric, xopts={}, plugin_args={})
+  def initialize(logger, klass, metric, plugin_args)
     @output = klass.new(plugin_args)
     @mutex = Mutex.new
   end
diff --git a/logstash-core/lib/logstash/pipeline.rb b/logstash-core/lib/logstash/pipeline.rb
index 7fdb679f789..176a789a72c 100644
--- a/logstash-core/lib/logstash/pipeline.rb
+++ b/logstash-core/lib/logstash/pipeline.rb
@@ -416,7 +416,7 @@ def plugin(plugin_type, name, *args)
     type_scoped_metric = pipeline_scoped_metric.namespace("#{plugin_type}s".to_sym)
     plugin = if plugin_type == "output"
                OutputDelegator.new(@logger, klass, type_scoped_metric,
-                                   {:strategy_registry => ::LogStash::OutputDelegatorStrategyRegistry.instance},
+                                   ::LogStash::OutputDelegatorStrategyRegistry.instance,
                                    args)
              elsif plugin_type == "filter"
                LogStash::FilterDelegator.new(@logger, klass, type_scoped_metric, args)
diff --git a/logstash-core/spec/logstash/output_delegator_spec.rb b/logstash-core/spec/logstash/output_delegator_spec.rb
index 5f6d2cc9841..b8c85554197 100644
--- a/logstash-core/spec/logstash/output_delegator_spec.rb
+++ b/logstash-core/spec/logstash/output_delegator_spec.rb
@@ -5,8 +5,9 @@
 describe LogStash::OutputDelegator do
   let(:logger) { double("logger") }
   let(:events) { 7.times.map { LogStash::Event.new }}
+  let(:plugin_args) { {"id" => "foo", "arg1" => "val1"} }
 
-  subject { described_class.new(logger, out_klass, LogStash::Instrument::NullMetric.new, {}, "id" => "foo") }
+  subject { described_class.new(logger, out_klass, LogStash::Instrument::NullMetric.new, ::LogStash::OutputDelegatorStrategyRegistry.instance, plugin_args) }
 
   context "with a plain output plugin" do
     let(:out_klass) { double("output klass") }
@@ -83,6 +84,10 @@
             expect(subject.strategy).to be_a(klass)
           end
 
+          it "should set the correct parameters on the instance" do
+            expect(out_klass).to have_received(:new).with(plugin_args)
+          end
+
           [[:register], [:do_close], [:multi_receive, [[]] ] ].each do |method, args|
             context "strategy objects" do
               before do
diff --git a/versions.yml b/versions.yml
index d0258a5602a..af8d112ab3f 100644
--- a/versions.yml
+++ b/versions.yml
@@ -3,4 +3,4 @@ logstash: 5.0.0-alpha6
 logstash-core: 5.0.0-alpha6
 logstash-core-event: 5.0.0-alpha6
 logstash-core-event-java: 5.0.0-alpha6
-logstash-core-plugin-api: 2.1.7
+logstash-core-plugin-api: 2.1.12
