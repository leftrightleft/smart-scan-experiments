diff --git a/lib/logstash/filters/grok.rb b/lib/logstash/filters/grok.rb
index 08a67688b64..9ee1506b05f 100644
--- a/lib/logstash/filters/grok.rb
+++ b/lib/logstash/filters/grok.rb
@@ -263,7 +263,7 @@ def register
         grok = Grok.new
         grok.logger = @logger unless @logger.nil?
         add_patterns_from_files(@patternfiles, grok)
-        grok.compile(pattern)
+        grok.compile(pattern, @named_captures_only)
         @patterns[field] << grok
       end
     end # @match.each
@@ -320,76 +320,33 @@ def match_against_groks(groks, input, event)
     matched = false
     groks.each do |grok|
       # Convert anything else to string (number, hash, etc)
-      match = grok.match(input.to_s)
-      if match
-        match.each_capture do |capture, value|
-          handle(capture, value, event)
-        end
+      matched = grok.match_and_capture(input.to_s) do |field, value|
         matched = true
-        break if @break_on_match
+        handle(field, value, event)
       end
+      break if matched and @break_on_match
     end
     return matched
   end
 
   private
-  def handle(capture, value, event)
-    handler = @handlers[capture] ||= compile_capture_handler(capture)
-    return handler.call(value, event)
-  end
-
-  private
-  def compile_capture_handler(capture)
-    # SYNTAX:SEMANTIC:TYPE
-    syntax, semantic, coerce = capture.split(":")
-
-    # each_capture do |fullname, value|
-    #   capture_handlers[fullname].call(value, event)
-    # end
-
-    code = []
-    code << "# for capture #{capture}"
-    code << "lambda do |value, event|"
-    #code << "  p :value => value, :event => event"
-    if semantic.nil?
-      if @named_captures_only
-        # Abort early if we are only keeping named (semantic) captures
-        # and this capture has no semantic name.
-        code << "  return"
-      else
-        field = syntax
-      end
-    else
-      field = semantic
-    end
-    code << "  return if value.nil? || value.empty?" unless @keep_empty_captures
-    if coerce
-      case coerce
-        when "int"; code << "  value = value.to_i"
-        when "float"; code << "  value = value.to_f"
-      end
-    end
+  def handle(field, value, event)
+    return if (value.nil? || (value.is_a?(String) && value.empty?)) unless @keep_empty_captures
 
-    code << "  # field: #{field}"
     if @overwrite.include?(field)
-      code << "  event[field] = value"
+      event[field] = value
     else
-      code << "  v = event[field]"
-      code << "  if v.nil?"
-      code << "    event[field] = value"
-      code << "  elsif v.is_a?(Array)"
-      code << "    event[field] << value"
-      code << "  elsif v.is_a?(String)"
-      # Promote to array since we aren't overwriting.
-      code << "    event[field] = [v, value]"
-      code << "  end"
+      v = event[field]
+      if v.nil?
+        event[field] = value
+      elsif v.is_a?(Array)
+        event[field] << value
+      elsif v.is_a?(String)
+        # Promote to array since we aren't overwriting.
+        event[field] = [v, value]
+      end
     end
-    code << "  return"
-    code << "end"
-
-    #puts code
-    return eval(code.join("\n"), binding, "<grok capture #{capture}>")
-  end # def compile_capture_handler
+  end
 
   private
   def add_patterns_from_files(paths, grok)
diff --git a/logstash.gemspec b/logstash.gemspec
index d9e658ea761..e47f41f7e73 100644
--- a/logstash.gemspec
+++ b/logstash.gemspec
@@ -41,7 +41,7 @@ Gem::Specification.new do |gem|
   gem.add_runtime_dependency "gelfd", ["0.2.0"]                 #(Apache 2.0 license)
   gem.add_runtime_dependency "gelf", ["1.3.2"]                  #(MIT license)
   gem.add_runtime_dependency "gmetric", ["0.1.3"]               #(MIT license)
-  gem.add_runtime_dependency "jls-grok", ["0.10.12"]            #(BSD license)
+  gem.add_runtime_dependency "jls-grok", ["0.11.0"]            #(BSD license)
   gem.add_runtime_dependency "mail"                             #(MIT license)
   gem.add_runtime_dependency "metriks"                          #(MIT license)
   gem.add_runtime_dependency "redis"                            #(MIT license)
diff --git a/tools/Gemfile.jruby-1.9.lock b/tools/Gemfile.jruby-1.9.lock
index f05fb0e2800..3b82d07a247 100644
--- a/tools/Gemfile.jruby-1.9.lock
+++ b/tools/Gemfile.jruby-1.9.lock
@@ -68,7 +68,7 @@ GEM
     http_parser.rb (0.5.3-java)
     i18n (0.6.9)
     insist (1.0.0)
-    jls-grok (0.10.12)
+    jls-grok (0.11.0)
       cabin (>= 0.6.0)
     jls-lumberjack (0.0.20)
     jrjackson (0.2.7)
@@ -199,7 +199,7 @@ DEPENDENCIES
   gmetric (= 0.1.3)
   i18n (>= 0.6.6)
   insist (= 1.0.0)
-  jls-grok (= 0.10.12)
+  jls-grok (= 0.11.0)
   jls-lumberjack (>= 0.0.20)
   jrjackson
   jruby-httpclient
