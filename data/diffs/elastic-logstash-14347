diff --git a/docs/static/advanced-pipeline.asciidoc b/docs/static/advanced-pipeline.asciidoc
index 1e3e274ee98..648e4d58713 100644
--- a/docs/static/advanced-pipeline.asciidoc
+++ b/docs/static/advanced-pipeline.asciidoc
@@ -16,7 +16,7 @@ download the sample data set used in this example. Unpack the file.
 ==== Configuring Filebeat to Send Log Lines to Logstash
 
 Before you create the Logstash pipeline, you'll configure Filebeat to send log lines to Logstash.
-The https://github.com/elastic/beats/tree/master/filebeat[Filebeat] client is a lightweight, resource-friendly tool
+The https://github.com/elastic/beats/tree/main/filebeat[Filebeat] client is a lightweight, resource-friendly tool
 that collects logs from files on the server and forwards these logs to your Logstash instance for processing.
 Filebeat is designed for reliability and low latency. Filebeat has a light resource footprint on the host machine,
 and the {logstash-ref}/plugins-inputs-beats.html[`Beats input`] plugin minimizes the resource demands on the Logstash
@@ -709,7 +709,7 @@ placeholder values shown here:
 [[configuring-lsf]]
 ==== Configuring Filebeat to Send Log Lines to Logstash
 
-As you learned earlier in <<configuring-filebeat>>, the https://github.com/elastic/beats/tree/master/filebeat[Filebeat]
+As you learned earlier in <<configuring-filebeat>>, the https://github.com/elastic/beats/tree/main/filebeat[Filebeat]
 client is a lightweight, resource-friendly tool that collects logs from files on the server and forwards these logs to your
 Logstash instance for processing.
 
diff --git a/docs/static/java-codec.asciidoc b/docs/static/java-codec.asciidoc
index 6dfe0950fc8..fd03eef94f3 100644
--- a/docs/static/java-codec.asciidoc
+++ b/docs/static/java-codec.asciidoc
@@ -306,7 +306,7 @@ an UUID.
 
 Lastly, but certainly not least importantly, unit tests are strongly encouraged.
 The example codec plugin includes an
-https://github.com/logstash-plugins/logstash-codec-java_codec_example/blob/master/src/test/java/org/logstashplugins/JavaCodecExampleTest.java[example unit
+https://github.com/logstash-plugins/logstash-codec-java_codec_example/blob/main/src/test/java/org/logstashplugins/JavaCodecExampleTest.java[example unit
 test] that you can use as a template for your own.
 
 // Pulls in shared section about Packaging and Deploying
diff --git a/docs/static/java-input.asciidoc b/docs/static/java-input.asciidoc
index 9f8dad5cdba..cf287fc5bc8 100644
--- a/docs/static/java-input.asciidoc
+++ b/docs/static/java-input.asciidoc
@@ -249,7 +249,7 @@ constructor at instantiation time.
 ==== Unit tests
 Lastly, but certainly not least importantly, unit tests are strongly encouraged.
 The example input plugin includes an
-https://github.com/logstash-plugins/logstash-input-java_input_example/blob/master/src/test/java/org/logstashplugins/JavaInputExampleTest.java[example unit
+https://github.com/logstash-plugins/logstash-input-java_input_example/blob/main/src/test/java/org/logstashplugins/JavaInputExampleTest.java[example unit
 test] that you can use as a template for your own.
 
 // Pulls in shared section about Packaging and Deploying
diff --git a/docs/static/java-output.asciidoc b/docs/static/java-output.asciidoc
index 339c3f70117..a7a0d6e0c31 100644
--- a/docs/static/java-output.asciidoc
+++ b/docs/static/java-output.asciidoc
@@ -230,7 +230,7 @@ constructor at instantiation time.
 
 Lastly, but certainly not least importantly, unit tests are strongly encouraged.
 The example output plugin includes an
-https://github.com/logstash-plugins/logstash-output-java_output_example/blob/master/src/test/java/org/logstashplugins/JavaOutputExampleTest.java[example unit
+https://github.com/logstash-plugins/logstash-output-java_output_example/blob/main/src/test/java/org/logstashplugins/JavaOutputExampleTest.java[example unit
 test] that you can use as a template for your own.
 
 
