diff --git a/lib/logstash/inputs/file.rb b/lib/logstash/inputs/file.rb
index 2a3118e0eec..86c1a50569e 100644
--- a/lib/logstash/inputs/file.rb
+++ b/lib/logstash/inputs/file.rb
@@ -80,21 +80,24 @@ def register
     end
 
     if @sincedb_path.nil?
-      if ENV["HOME"].nil?
-        @logger.error("No HOME environment variable set, I don't know where " \
+      if ENV["SINCEDB_DIR"].nil? && ENV["HOME"].nil?
+        @logger.error("No SINCE_DB or HOME environment variable set, I don't know where " \
                       "to keep track of the files I'm watching. Either set " \
-                      "HOME in your environment, or set sincedb_path in " \
+                      "HOME or SINCEDB_DIR in your environment, or set sincedb_path in " \
                       "in your logstash config for the file input with " \
                       "path '#{@path.inspect}'")
         raise # TODO(sissel): HOW DO I FAIL PROPERLY YO
       end
 
+      #pick SINCEDB_DIR if available, otherwise use HOME
+      sincedb_dir = EVN["SINCEDB_DIR"] || ENV["HOME"]
+
       # Join by ',' to make it easy for folks to know their own sincedb
       # generated path (vs, say, inspecting the @path array)
-      @sincedb_path = File.join(ENV["HOME"], ".sincedb_" + Digest::MD5.hexdigest(@path.join(",")))
+      @sincedb_path = File.join(sincedb_dir, ".sincedb_" + Digest::MD5.hexdigest(@path.join(",")))
 
       # Migrate any old .sincedb to the new file (this is for version <=1.1.1 compatibility)
-      old_sincedb = File.join(ENV["HOME"], ".sincedb")
+      old_sincedb = File.join(sincedb_dir, ".sincedb")
       if File.exists?(old_sincedb)
         @logger.info("Renaming old ~/.sincedb to new one", :old => old_sincedb,
                      :new => @sincedb_path)
diff --git a/test/logstash/inputs/test_file.rb b/test/logstash/inputs/test_file.rb
index 2ff2f7dbbe1..fd3e452b07b 100644
--- a/test/logstash/inputs/test_file.rb
+++ b/test/logstash/inputs/test_file.rb
@@ -125,5 +125,18 @@
       flunk "An absolute path containing a wildcard should be valid"
     end
   end
+  
+  test "file input should use SINCEDB_DIR environment variable as default sincedb location if it is set" do
+    logfile = Tempfile.new("logstash")
+    the_destination = "/tmp/sincedb"
+    ENV['SINCEDB_DIR'] = the_destination
+    begin
+      @input = LogStash::Inputs::File.new("type" => ["testing"], "path" => [logfile.path])
+      @input.register
+      assert_equal File.dirname(@input.instance_variable_get(:@sincedb_dir)) the_destination
+    ensure
+      logfile.close
+      logfile.unlink
+    end
 
 end # testing for LogStash::Inputs::File
