diff --git a/lib/logstash/config/mixin.rb b/lib/logstash/config/mixin.rb
index 790734be9bc..55fb366fcbf 100644
--- a/lib/logstash/config/mixin.rb
+++ b/lib/logstash/config/mixin.rb
@@ -324,18 +324,17 @@ def validate_value(value, validator)
               return false, "This field must contain an even number of items, got #{value.size}"
             end
 
-              # Convert the array the config parser produces into a hash.
-              result = {}
-              value.each_slice(2) do |key, value|
-                entry = result[key]
-                if entry.nil?
-                  result[key] = value
+            # Convert the array the config parser produces into a hash.
+            result = {}
+            value.each_slice(2) do |key, value|
+              entry = result[key]
+              if entry.nil?
+                result[key] = value
+              else
+                if entry.is_a?(Array)
+                  entry << value
                 else
-                  if entry.is_a?(Array)
-                    entry << value
-                  else
-                    result[key] = [entry, value]
-                  end
+                  result[key] = [entry, value]
                 end
               end
             end
diff --git a/lib/logstash/outputs/elasticsearch_http.rb b/lib/logstash/outputs/elasticsearch_http.rb
index 72b1f0c6a54..f6ac1b84f81 100644
--- a/lib/logstash/outputs/elasticsearch_http.rb
+++ b/lib/logstash/outputs/elasticsearch_http.rb
@@ -63,7 +63,7 @@ def receive(event)
       receive_single(event, index, type)
     else
       receive_bulk(event, index, type)
-    end # 
+    end #
   end # def receive
 
   def receive_single(event, index, type)
@@ -73,8 +73,8 @@ def receive_single(event, index, type)
         response = @agent.post!("http://#{@host}:#{@port}/#{index}/#{type}",
                                 :body => event.to_json)
       rescue EOFError
-        @logger.warn("EOF while writing request or reading response header "
-                     "from elasticsearch", :host => @host, :port => @port
+        @logger.warn("EOF while writing request or reading response header from elasticsearch",
+                     :host => @host, :port => @port)
         next # try again
       end
 
@@ -85,7 +85,7 @@ def receive_single(event, index, type)
         response.read_body { |chunk| body += chunk }
       rescue EOFError
         @logger.warn("EOF while reading response body from elasticsearch",
-                     :host => @host, :port => @port
+                     :host => @host, :port => @port)
         next # try again
       end
 
@@ -118,15 +118,15 @@ def flush
     # If we don't tack a trailing newline at the end, elasticsearch
     # doesn't seem to process the last event in this bulk index call.
     #
-    # as documented here: 
+    # as documented here:
     # http://www.elasticsearch.org/guide/reference/api/bulk.html
     #  "NOTE: the final line of data must end with a newline character \n."
     begin
       response = @agent.post!("http://#{@host}:#{@port}/_bulk",
                               :body => @queue.join("\n") + "\n")
     rescue EOFError
-      @logger.warn("EOF while writing request or reading response header "
-                   "from elasticsearch", :host => @host, :port => @port
+      @logger.warn("EOF while writing request or reading response header from elasticsearch",
+                   :host => @host, :port => @port)
       return # abort this flush
     end
 
@@ -137,7 +137,7 @@ def flush
       response.read_body { |chunk| body += chunk }
     rescue EOFError
       @logger.warn("EOF while reading response body from elasticsearch",
-                   :host => @host, :port => @port
+                   :host => @host, :port => @port)
       return # abort this flush
     end
 
@@ -169,7 +169,7 @@ def setup_index_template
       },
       "mappings" => {
         "_default_" => {
-          "_all" => { "enabled" => false } 
+          "_all" => { "enabled" => false }
         }
       }
     } # template_config
