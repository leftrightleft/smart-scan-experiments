diff --git a/logstash-core/lib/logstash/dependency_report.rb b/logstash-core/lib/logstash/dependency_report.rb
index 8d45b764117..5077d2b167a 100644
--- a/logstash-core/lib/logstash/dependency_report.rb
+++ b/logstash-core/lib/logstash/dependency_report.rb
@@ -31,7 +31,7 @@ class LogStash::DependencyReport < Clamp::Command
 
   OTHER_DEPENDENCIES = [
     ["jruby", "", "http://jruby.org", "EPL-2.0"],
-    ["Red Hat Universal Base Image minimal","8","https://catalog.redhat.com/software/containers/ubi8/ubi-minimal/5c359a62bed8bd75a2c3fba8","Custom;https://www.redhat.com/licenses/EULA_Red_Hat_Universal_Base_Image_English_20190422.pdf"]
+    ["Red Hat Universal Base Image minimal","8","https://catalog.redhat.com/software/containers/ubi8/ubi-minimal/5c359a62bed8bd75a2c3fba8","Custom;https://www.redhat.com/licenses/EULA_Red_Hat_Universal_Base_Image_English_20190422.pdf","","https://oss-dependencies.elastic.co/redhat/ubi/ubi-minimal-8-source.tar.gz"]
   ]
 
   def execute
@@ -40,7 +40,7 @@ def execute
     tmp_dir = java.lang.System.getProperty("java.io.tmpdir")
     ruby_output_path = File.join(tmp_dir, SecureRandom.uuid)
     # Write a CSV with just the ruby stuff
-    CSV.open(ruby_output_path, "wb", :headers => [ "name", "version", "url", "license" ], :write_headers => true) do |csv|
+    CSV.open(ruby_output_path, "wb", :headers => [ "name", "version", "url", "license","copyright","sourceURL" ], :write_headers => true) do |csv|
       puts "Finding gem dependencies"
       gems.each { |d| csv << d }
       puts "Finding gem embedded java/jar dependencies"
diff --git a/tools/dependencies-report/src/main/java/org/logstash/dependencies/Dependency.java b/tools/dependencies-report/src/main/java/org/logstash/dependencies/Dependency.java
index 5ba05a40cac..d8c1c4ae2f0 100644
--- a/tools/dependencies-report/src/main/java/org/logstash/dependencies/Dependency.java
+++ b/tools/dependencies-report/src/main/java/org/logstash/dependencies/Dependency.java
@@ -23,15 +23,11 @@
 import org.apache.commons.csv.CSVFormat;
 import org.apache.commons.csv.CSVRecord;
 
-import java.io.BufferedReader;
-import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.io.Reader;
 import java.net.URL;
-import java.nio.file.Path;
-import java.nio.file.Paths;
 import java.util.Objects;
 import java.util.Scanner;
 import java.util.SortedSet;
@@ -42,13 +38,15 @@ class Dependency implements Comparable<Dependency> {
     String version;
     String url;
     String spdxLicense;
+    String sourceURL;
+    String copyright;
 
     /**
      * Returns an object array representing this dependency as a CSV record according
      * to the format requested here: https://github.com/elastic/logstash/issues/8725
      */
     Object[] toCsvReportRecord() {
-        return new String[] {name, version, "", url, spdxLicense, ""};
+        return new String[] {name, version, "", url, spdxLicense, copyright, sourceURL};
     }
 
     /**
@@ -78,10 +76,15 @@ static void addDependenciesFromJavaReport(InputStream stream, SortedSet<Dependen
     private static Dependency fromRubyCsvRecord(CSVRecord record) {
         Dependency d = new Dependency();
 
-        // name, version, url, license
+        // name, version, url, license, copyright, sourceURL
         d.name = record.get(0);
         d.version = record.get(1);
-
+        if (record.size() > 4) {
+            d.copyright = record.get(4);
+        }
+        if (record.size() > 5) {
+            d.sourceURL = record.get(5);
+        }
         return d;
     }
 
@@ -179,6 +182,10 @@ public String getVersion() {
         return version;
     }
 
+    public String getSourceURL() {
+        return sourceURL;
+    }
+
     @Override
     public String toString() {
         return "<Dependency " + name + " v" + version + ">";
diff --git a/tools/dependencies-report/src/main/java/org/logstash/dependencies/ReportGenerator.java b/tools/dependencies-report/src/main/java/org/logstash/dependencies/ReportGenerator.java
index 6343706fbbd..78f1f651d8a 100644
--- a/tools/dependencies-report/src/main/java/org/logstash/dependencies/ReportGenerator.java
+++ b/tools/dependencies-report/src/main/java/org/logstash/dependencies/ReportGenerator.java
@@ -49,7 +49,7 @@ public class ReportGenerator {
 
     final String UNKNOWN_LICENSE = "UNKNOWN";
     final Collection<Dependency> UNKNOWN_LICENSES = new ArrayList<>();
-    final String[] CSV_HEADERS = {"name", "version", "revision", "url", "license", "copyright"};
+    final String[] CSV_HEADERS = {"name", "version", "revision", "url", "license", "copyright","sourceURL"};
     final Collection<Dependency> MISSING_NOTICE = new ArrayList<>();
 
     boolean generateReport(
@@ -65,7 +65,7 @@ boolean generateReport(
         Dependency.addDependenciesFromRubyReport(rubyDependenciesStream, dependencies);
         addJavaDependencies(javaDependenciesStreams, dependencies);
 
-        Map<String, LicenseUrlPair> licenseMapping = new HashMap<>();
+        Map<String, LicenseInfo> licenseMapping = new HashMap<>();
         checkDependencyLicenses(licenseMappingStream, acceptableLicensesStream, licenseMapping, dependencies);
         checkDependencyNotices(noticeOutput, dependencies);
 
@@ -91,7 +91,7 @@ private void checkDependencyNotices(Writer noticeOutput, SortedSet<Dependency> d
     }
 
     private void checkDependencyLicenses(InputStream licenseMappingStream, InputStream acceptableLicensesStream,
-                                         Map<String, LicenseUrlPair> licenseMapping, SortedSet<Dependency> dependencies) throws IOException {
+                                         Map<String, LicenseInfo> licenseMapping, SortedSet<Dependency> dependencies) throws IOException {
         readLicenseMapping(licenseMappingStream, licenseMapping);
         List<String> acceptableLicenses = new ArrayList<>();
         readAcceptableLicenses(acceptableLicensesStream, acceptableLicenses);
@@ -134,10 +134,10 @@ private void reportUnknownLicenses() {
         }
     }
 
-    private void reportUnusedLicenseMappings(Writer unusedLicenseWriter, Map<String, LicenseUrlPair> licenseMapping) throws IOException {
+    private void reportUnusedLicenseMappings(Writer unusedLicenseWriter, Map<String, LicenseInfo> licenseMapping) throws IOException {
         SortedSet<String> unusedDependencies = new TreeSet<>();
 
-        for (Map.Entry<String, LicenseUrlPair> entry : licenseMapping.entrySet()) {
+        for (Map.Entry<String, LicenseInfo> entry : licenseMapping.entrySet()) {
             if (entry.getValue().isUnused) {
                 unusedDependencies.add(entry.getKey());
             }
@@ -177,13 +177,13 @@ private void checkDependencyNotice(Writer noticeOutput, Dependency dependency) t
         }
     }
 
-    private void checkDependencyLicense(Map<String, LicenseUrlPair> licenseMapping, List<String> acceptableLicenses, Dependency dependency) {
+    private void checkDependencyLicense(Map<String, LicenseInfo> licenseMapping, List<String> acceptableLicenses, Dependency dependency) {
         if (licenseMapping.containsKey(dependency.name)) {
-            LicenseUrlPair pair = licenseMapping.get(dependency.name);
+            LicenseInfo licenseInfo = licenseMapping.get(dependency.name);
 
-            String[] dependencyLicenses = pair.license.split("\\|");
+            String[] dependencyLicenses = licenseInfo.license.split("\\|");
             boolean hasAcceptableLicense = false;
-            if (pair.url != null && !pair.url.equals("")) {
+            if (licenseInfo.url != null && !licenseInfo.url.equals("")) {
                 for (int k = 0; k < dependencyLicenses.length && !hasAcceptableLicense; k++) {
                     if (acceptableLicenses.stream().anyMatch(dependencyLicenses[k]::equalsIgnoreCase)) {
                         hasAcceptableLicense = true;
@@ -192,9 +192,11 @@ private void checkDependencyLicense(Map<String, LicenseUrlPair> licenseMapping,
             }
 
             if (hasAcceptableLicense) {
-                dependency.spdxLicense = pair.license;
-                dependency.url = pair.url;
-                pair.isUnused = false;
+                dependency.spdxLicense = licenseInfo.license;
+                dependency.url = licenseInfo.url;
+                dependency.sourceURL = licenseInfo.sourceURL;
+                dependency.copyright = licenseInfo.copyright;
+                licenseInfo.isUnused = false;
             } else {
                 // unacceptable license or missing URL
                 UNKNOWN_LICENSES.add(dependency);
@@ -216,7 +218,7 @@ private void readAcceptableLicenses(InputStream stream, List<String> acceptableL
         }
     }
 
-    private void readLicenseMapping(InputStream stream, Map<String, LicenseUrlPair> licenseMapping)
+    private void readLicenseMapping(InputStream stream, Map<String, LicenseInfo> licenseMapping)
             throws IOException {
         Reader in = new InputStreamReader(stream);
         for (CSVRecord record : CSVFormat.DEFAULT.withFirstRecordAsHeader().parse(in)) {
@@ -226,14 +228,15 @@ private void readLicenseMapping(InputStream stream, Map<String, LicenseUrlPair>
                 String depName = lastIndex < 0
                         ? dependencyNameAndVersion
                         : dependencyNameAndVersion.substring(0,  lastIndex);
-                validateAndAdd(licenseMapping, depName, new LicenseUrlPair(record.get(2), record.get(1)));
+
+                validateAndAdd(licenseMapping, depName, LicenseInfo.fromCSVRecord(record));
             }
         }
     }
 
-    private static void validateAndAdd(Map<String, LicenseUrlPair> licenses, String depName, LicenseUrlPair lup) {
+    private static void validateAndAdd(Map<String, LicenseInfo> licenses, String depName, LicenseInfo lup) {
         if (licenses.containsKey(depName)) {
-            LicenseUrlPair existingLicense = licenses.get(depName);
+            LicenseInfo existingLicense = licenses.get(depName);
 
             // Because dependency versions are not treated independently, if dependencies with different versions
             // have different licenses, we cannot distinguish between them
@@ -249,13 +252,26 @@ private static void validateAndAdd(Map<String, LicenseUrlPair> licenses, String
 
 }
 
-class LicenseUrlPair {
+class LicenseInfo {
     String license;
     String url;
+    String sourceURL;
+    String copyright;
     boolean isUnused = true;
 
-    LicenseUrlPair(String license, String url) {
+    LicenseInfo(String license, String url) {
         this.license = license;
         this.url = url;
     }
+
+    static LicenseInfo fromCSVRecord(CSVRecord record){
+        LicenseInfo info = new LicenseInfo(record.get(2), record.get(1));
+        if (record.size() > 3){
+            info.copyright = record.get(3);
+        }
+        if (record.size() > 4){
+            info.sourceURL = record.get(4);
+        }
+        return info;
+    }
 }
diff --git a/tools/dependencies-report/src/main/resources/licenseMapping.csv b/tools/dependencies-report/src/main/resources/licenseMapping.csv
index 763d4f1d97b..0f9bc9f984b 100644
--- a/tools/dependencies-report/src/main/resources/licenseMapping.csv
+++ b/tools/dependencies-report/src/main/resources/licenseMapping.csv
@@ -1,4 +1,4 @@
-dependency,dependencyUrl,licenseOverride
+dependency,dependencyUrl,licenseOverride,copyright,sourceURL
 "addressable:",https://github.com/sporkmonger/addressable,Apache-2.0
 "atomic:",http://github.com/ruby-concurrency/atomic,Apache-2.0
 "avl_tree:",https://github.com/nahi/avl_tree,BSD-2-Clause-FreeBSD
@@ -119,7 +119,7 @@ dependency,dependencyUrl,licenseOverride
 "rack-protection:",http://github.com/rkh/rack-protection,MIT
 "rack:",http://rack.github.io/,MIT
 "rake:",https://github.com/ruby/rake,MIT
-"Red Hat Universal Base Image minimal:",https://catalog.redhat.com/software/containers/ubi8/ubi-minimal/5c359a62bed8bd75a2c3fba8,Custom;https://www.redhat.com/licenses/EULA_Red_Hat_Universal_Base_Image_English_20190422.pdf
+"Red Hat Universal Base Image minimal:",https://catalog.redhat.com/software/containers/ubi8/ubi-minimal/5c359a62bed8bd75a2c3fba8,Custom;https://www.redhat.com/licenses/EULA_Red_Hat_Universal_Base_Image_English_20190422.pdf,,https://oss-dependencies.elastic.co/redhat/ubi/ubi-minimal-8-source.tar.gz
 "redis:",https://github.com/redis/redis-rb,MIT
 "ruby-progressbar:",https://github.com/jfelchner/ruby-progressbar,MIT
 "rubyzip:",https://github.com/rubyzip/rubyzip,BSD-2-Clause-FreeBSD
diff --git a/tools/dependencies-report/src/test/java/org/logstash/dependencies/ReportGeneratorTest.java b/tools/dependencies-report/src/test/java/org/logstash/dependencies/ReportGeneratorTest.java
index a7e53d57c6d..4e71d68ec53 100644
--- a/tools/dependencies-report/src/test/java/org/logstash/dependencies/ReportGeneratorTest.java
+++ b/tools/dependencies-report/src/test/java/org/logstash/dependencies/ReportGeneratorTest.java
@@ -77,8 +77,8 @@ public void testReportWithMissingLicenses() throws IOException {
 
         // verify that the two components in the test input with missing licenses are
         // listed in the output with no license, i.e., an empty license field followed by CR/LF
-        assertTrue(csvOutput.toString().contains("commons-io:commons-io,2.5,,,,\r\n"));
-        assertTrue(csvOutput.toString().contains("filesize,0.0.4,,,,\r\n"));
+        assertTrue(csvOutput.toString().contains("commons-io:commons-io,2.5,,,,,\r\n"));
+        assertTrue(csvOutput.toString().contains("filesize,0.0.4,,,,,\r\n"));
         String unusedLicenses = unusedLicenseWriter.toString();
         assertThat(unusedLicenses, containsString("43 license mappings were specified but unused"));
     }
@@ -103,7 +103,7 @@ public void testReportWithUnacceptableLicenses() throws IOException {
         // verify that the two components in the test input with unacceptable licenses are
         // listed in the output with no license, i.e., an empty license field followed by CR/LF
         String csvString = csvOutput.toString();
-        assertThat(csvString, containsString("com.fasterxml.jackson.core:jackson-core,2.7.3,,,,\r\n"));
+        assertThat(csvString, containsString("com.fasterxml.jackson.core:jackson-core,2.7.3,,,,,\r\n"));
 
         Pattern bundlerPattern = Pattern.compile(".*bundler,1\\.16\\.[0-1],,,,.*");
         assertThat(bundlerPattern.matcher(csvString).find(), is(true));
@@ -119,8 +119,8 @@ public void testReportWithMissingUrls() throws IOException {
 
         // verify that the two components in the test input with missing URLs are
         // listed in the output with no license, i.e., an empty license field followed by CR/LF
-        assertTrue(csvOutput.toString().contains("org.codehaus.janino:commons-compiler,3.0.8,,,,\r\n"));
-        assertTrue(csvOutput.toString().contains("json-parser,,,,,\r\n"));
+        assertTrue(csvOutput.toString().contains("org.codehaus.janino:commons-compiler,3.0.8,,,,,\r\n"));
+        assertTrue(csvOutput.toString().contains("json-parser,,,,,,\r\n"));
         String unusedLicenses = unusedLicenseWriter.toString();
         assertThat(unusedLicenses, containsString("43 license mappings were specified but unused"));
     }
diff --git a/tools/dependencies-report/src/test/resources/expectedNoticeOutput.txt b/tools/dependencies-report/src/test/resources/expectedNoticeOutput.txt
index 64ed0605e45..112223333e7 100644
--- a/tools/dependencies-report/src/test/resources/expectedNoticeOutput.txt
+++ b/tools/dependencies-report/src/test/resources/expectedNoticeOutput.txt
@@ -1,4 +1,9 @@
 
+==========
+Notice for: Red Hat Universal Base Image minimal-8
+----------
+
+TEST
 ==========
 Notice for: bundler-1.16.1
 ----------
@@ -81,3 +86,9 @@ Notice for: org.codehaus.janino:commons-compiler-3.0.8
 ----------
 
 TEST
+
+==========
+Notice for: tzinfo-
+----------
+
+TEST
\ No newline at end of file
diff --git a/tools/dependencies-report/src/test/resources/expectedOutput.txt b/tools/dependencies-report/src/test/resources/expectedOutput.txt
index 2557edfe605..24bf61b018c 100644
--- a/tools/dependencies-report/src/test/resources/expectedOutput.txt
+++ b/tools/dependencies-report/src/test/resources/expectedOutput.txt
@@ -1,15 +1,17 @@
-name,version,revision,url,license,copyright
-bundler,1.16.1,,https://rubygems.org/gems/bundler/versions/1.16.0,UnacceptableLicense|MIT,
-com.fasterxml.jackson.core:jackson-core,2.7.3,,https://github.com/FasterXML/jackson-core/tree/jackson-core-2.7.3,Apache-2.0,
-com.google.errorprone:javac-shaded,9-dev-r4023-3,,http://repo1.maven.org/maven2/com/google/errorprone/javac-shaded/9-dev-r4023-3/,EPL-1.0,
-commons-io:commons-io,2.5,,https://commons.apache.org/proper/commons-io/index.html,Apache-2.0,
-control.js,,,https://github.com/zombieleet/control,MIT,
-filesize,0.0.4,,https://rubygems.org/gems/filesize/versions/0.0.4,MIT,
-gradle.plugin.com.github.jk1:gradle-license-report,0.7.1,,https://github.com/jk1/Gradle-License-Report,Apache-2.0,
-jar-dependencies,0.3.12,,https://rubygems.org/gems/jar-dependencies/versions/0.3.11,MIT,
-jruby-openssl,0.9.21,,https://rubygems.org/gems/jruby-openssl/versions/0.9.20-java,Apache-2.0,
-jruby-readline,1.1.1,,https://rubygems.org/gems/jruby-readline/versions/1.1.1-java,Apache-2.0,
-json-generator,,,https://github.com/flori/json,Ruby,
-json-parser,,,https://rubygems.org/gems/json-parser/versions/0.0.1,Apache-2.0,
-junit:junit,4.12,,https://github.com/junit-team/junit4,Apache-2.0,
-org.codehaus.janino:commons-compiler,3.0.8,,https://github.com/janino-compiler/janino,BSD-3-Clause-Attribution,
+name,version,revision,url,license,copyright,sourceURL
+Red Hat Universal Base Image minimal,8,,https://catalog.redhat.com/software/containers/ubi8/ubi-minimal/5c359a62bed8bd75a2c3fba8,Custom;https://www.redhat.com/licenses/EULA_Red_Hat_Universal_Base_Image_English_20190422.pdf,,https://oss-dependencies.elastic.co/redhat/ubi/ubi-minimal-8-source.tar.gz
+bundler,1.16.1,,https://rubygems.org/gems/bundler/versions/1.16.0,UnacceptableLicense|MIT,,
+com.fasterxml.jackson.core:jackson-core,2.7.3,,https://github.com/FasterXML/jackson-core/tree/jackson-core-2.7.3,Apache-2.0,,
+com.google.errorprone:javac-shaded,9-dev-r4023-3,,http://repo1.maven.org/maven2/com/google/errorprone/javac-shaded/9-dev-r4023-3/,EPL-1.0,,
+commons-io:commons-io,2.5,,https://commons.apache.org/proper/commons-io/index.html,Apache-2.0,,
+control.js,,,https://github.com/zombieleet/control,MIT,,
+filesize,0.0.4,,https://rubygems.org/gems/filesize/versions/0.0.4,MIT,,
+gradle.plugin.com.github.jk1:gradle-license-report,0.7.1,,https://github.com/jk1/Gradle-License-Report,Apache-2.0,,
+jar-dependencies,0.3.12,,https://rubygems.org/gems/jar-dependencies/versions/0.3.11,MIT,,
+jruby-openssl,0.9.21,,https://rubygems.org/gems/jruby-openssl/versions/0.9.20-java,Apache-2.0,,
+jruby-readline,1.1.1,,https://rubygems.org/gems/jruby-readline/versions/1.1.1-java,Apache-2.0,,
+json-generator,,,https://github.com/flori/json,Ruby,,
+json-parser,,,https://rubygems.org/gems/json-parser/versions/0.0.1,Apache-2.0,,
+junit:junit,4.12,,https://github.com/junit-team/junit4,Apache-2.0,,
+org.codehaus.janino:commons-compiler,3.0.8,,https://github.com/janino-compiler/janino,BSD-3-Clause-Attribution,,
+tzinfo,,,https://github.com/tzinfo/tzinfo,MIT,Philip Ross,
diff --git a/tools/dependencies-report/src/test/resources/licenseMapping-conflicting.csv b/tools/dependencies-report/src/test/resources/licenseMapping-conflicting.csv
index d94844c3130..c1d9ef94993 100644
--- a/tools/dependencies-report/src/test/resources/licenseMapping-conflicting.csv
+++ b/tools/dependencies-report/src/test/resources/licenseMapping-conflicting.csv
@@ -60,3 +60,5 @@ dependency,dependencyUrl,licenseOverride
 "json-parser:",https://rubygems.org/gems/json-parser/versions/0.0.1,Apache-2.0
 "junit:junit:4.12",https://github.com/junit-team/junit4,Apache-2.0
 "json-generator",https://github.com/flori/json,Ruby
+"tzinfo:",https://github.com/tzinfo/tzinfo,MIT,Philip Ross
+"Red Hat Universal Base Image minimal:8",https://catalog.redhat.com/software/containers/ubi8/ubi-minimal/5c359a62bed8bd75a2c3fba8,Custom;https://www.redhat.com/licenses/EULA_Red_Hat_Universal_Base_Image_English_20190422.pdf,,https://oss-dependencies.elastic.co/redhat/ubi/ubi-minimal-8-source.tar.gz
diff --git a/tools/dependencies-report/src/test/resources/licenseMapping-good.csv b/tools/dependencies-report/src/test/resources/licenseMapping-good.csv
index b3cf57c4dae..bffbd8b09ed 100644
--- a/tools/dependencies-report/src/test/resources/licenseMapping-good.csv
+++ b/tools/dependencies-report/src/test/resources/licenseMapping-good.csv
@@ -1,4 +1,4 @@
-dependency,dependencyUrl,licenseOverride
+dependency,dependencyUrl,licenseOverride,copyright,sourceURL
 "webrick:1.3.1",,BSD-2-Clause-FreeBSD
 "bundler:1.16.0",https://rubygems.org/gems/bundler/versions/1.16.0,UnacceptableLicense|MIT
 "webhdfs:0.8.0",,Apache-2.0
@@ -58,3 +58,5 @@ dependency,dependencyUrl,licenseOverride
 "json-parser:",https://rubygems.org/gems/json-parser/versions/0.0.1,Apache-2.0
 "junit:junit:4.12",https://github.com/junit-team/junit4,Apache-2.0
 "json-generator",https://github.com/flori/json,Ruby
+"tzinfo:",https://github.com/tzinfo/tzinfo,MIT,Philip Ross
+"Red Hat Universal Base Image minimal:8",https://catalog.redhat.com/software/containers/ubi8/ubi-minimal/5c359a62bed8bd75a2c3fba8,Custom;https://www.redhat.com/licenses/EULA_Red_Hat_Universal_Base_Image_English_20190422.pdf,,https://oss-dependencies.elastic.co/redhat/ubi/ubi-minimal-8-source.tar.gz
diff --git a/tools/dependencies-report/src/test/resources/licenseMapping-missing.csv b/tools/dependencies-report/src/test/resources/licenseMapping-missing.csv
index a31a468638d..6a4e5cdbc9a 100644
--- a/tools/dependencies-report/src/test/resources/licenseMapping-missing.csv
+++ b/tools/dependencies-report/src/test/resources/licenseMapping-missing.csv
@@ -1,4 +1,4 @@
-dependency,dependencyUrl,licenseOverride
+dependency,dependencyUrl,licenseOverride,copyright,sourceURL
 "webrick:1.3.1",,BSD-2-Clause-FreeBSD
 "bundler:1.16.0",https://rubygems.org/gems/bundler/versions/1.16.0,MIT
 "webhdfs:0.8.0",,Apache-2.0
@@ -59,3 +59,5 @@ dependency,dependencyUrl,licenseOverride
 "json-parser:",https://rubygems.org/gems/json-parser/versions/0.0.1,Apache-2.0
 "junit:junit:4.12",https://github.com/junit-team/junit4,Apache-2.0
 "json-generator",https://github.com/flori/json,Ruby
+"tzinfo:",https://github.com/tzinfo/tzinfo,MIT,Philip Ross
+"Red Hat Universal Base Image minimal:8",https://catalog.redhat.com/software/containers/ubi8/ubi-minimal/5c359a62bed8bd75a2c3fba8,Custom;https://www.redhat.com/licenses/EULA_Red_Hat_Universal_Base_Image_English_20190422.pdf,,https://oss-dependencies.elastic.co/redhat/ubi/ubi-minimal-8-source.tar.gz
diff --git a/tools/dependencies-report/src/test/resources/licenseMapping-missingNotices.csv b/tools/dependencies-report/src/test/resources/licenseMapping-missingNotices.csv
index c4c53d4119d..138517a882b 100644
--- a/tools/dependencies-report/src/test/resources/licenseMapping-missingNotices.csv
+++ b/tools/dependencies-report/src/test/resources/licenseMapping-missingNotices.csv
@@ -1,4 +1,4 @@
-dependency,dependencyUrl,licenseOverride
+dependency,dependencyUrl,licenseOverride,copyright,sourceURL
 "co.elastic:noNoticeDep:0.0.1",,MIT
 "webrick:1.3.1",,BSD-2-Clause-FreeBSD
 "bundler:1.16.0",https://rubygems.org/gems/bundler/versions/1.16.0,MIT
@@ -61,3 +61,6 @@ dependency,dependencyUrl,licenseOverride
 "junit:junit:4.12",https://github.com/junit-team/junit4,Apache-2.0
 "junit:junit:4.12",https://github.com/junit-team/junit4,Apache-2.0
 "json-generator",https://github.com/flori/json,Ruby
+"tzinfo:",https://github.com/tzinfo/tzinfo,MIT,Philip Ross
+"Red Hat Universal Base Image minimal:8",https://catalog.redhat.com/software/containers/ubi8/ubi-minimal/5c359a62bed8bd75a2c3fba8,Custom;https://www.redhat.com/licenses/EULA_Red_Hat_Universal_Base_Image_English_20190422.pdf,,https://oss-dependencies.elastic.co/redhat/ubi/ubi-minimal-8-source.tar.gz
+
diff --git a/tools/dependencies-report/src/test/resources/licenseMapping-missingUrls.csv b/tools/dependencies-report/src/test/resources/licenseMapping-missingUrls.csv
index 5e6fe4a3cb2..a08d135dfcd 100644
--- a/tools/dependencies-report/src/test/resources/licenseMapping-missingUrls.csv
+++ b/tools/dependencies-report/src/test/resources/licenseMapping-missingUrls.csv
@@ -59,3 +59,5 @@ dependency,dependencyUrl,licenseOverride
 "json-parser:",,Apache-2.0
 "junit:junit:4.12",https://github.com/junit-team/junit4,Apache-2.0
 "json-generator",https://github.com/flori/json,Ruby
+"tzinfo:",https://github.com/tzinfo/tzinfo,MIT,Philip Ross
+"Red Hat Universal Base Image minimal:8",https://catalog.redhat.com/software/containers/ubi8/ubi-minimal/5c359a62bed8bd75a2c3fba8,Custom;https://www.redhat.com/licenses/EULA_Red_Hat_Universal_Base_Image_English_20190422.pdf,,https://oss-dependencies.elastic.co/redhat/ubi/ubi-minimal-8-source.tar.gz
diff --git a/tools/dependencies-report/src/test/resources/licenseMapping-unacceptable.csv b/tools/dependencies-report/src/test/resources/licenseMapping-unacceptable.csv
index e9a06cbbf70..495d3b83023 100644
--- a/tools/dependencies-report/src/test/resources/licenseMapping-unacceptable.csv
+++ b/tools/dependencies-report/src/test/resources/licenseMapping-unacceptable.csv
@@ -56,3 +56,5 @@ dependency,dependencyUrl,licenseOverride
 "json-parser:",https://rubygems.org/gems/json-parser/versions/0.0.1,Apache-2.0
 "junit:junit:4.12",https://github.com/junit-team/junit4,Apache-2.0
 "json-generator",https://github.com/flori/json,Ruby
+"tzinfo:",https://github.com/tzinfo/tzinfo,MIT,Philip Ross
+"Red Hat Universal Base Image minimal:8",https://catalog.redhat.com/software/containers/ubi8/ubi-minimal/5c359a62bed8bd75a2c3fba8,Custom;https://www.redhat.com/licenses/EULA_Red_Hat_Universal_Base_Image_English_20190422.pdf,,https://oss-dependencies.elastic.co/redhat/ubi/ubi-minimal-8-source.tar.gz
diff --git a/tools/dependencies-report/src/test/resources/notices/Red Hat Universal Base Image minimal-NOTICE.txt b/tools/dependencies-report/src/test/resources/notices/Red Hat Universal Base Image minimal-NOTICE.txt
new file mode 100644
index 00000000000..3b12464976a
--- /dev/null
+++ b/tools/dependencies-report/src/test/resources/notices/Red Hat Universal Base Image minimal-NOTICE.txt	
@@ -0,0 +1 @@
+TEST
\ No newline at end of file
diff --git a/tools/dependencies-report/src/test/resources/notices/tzinfo-NOTICE.txt b/tools/dependencies-report/src/test/resources/notices/tzinfo-NOTICE.txt
new file mode 100644
index 00000000000..3b12464976a
--- /dev/null
+++ b/tools/dependencies-report/src/test/resources/notices/tzinfo-NOTICE.txt
@@ -0,0 +1 @@
+TEST
\ No newline at end of file
diff --git a/tools/dependencies-report/src/test/resources/rubyDependencies.csv b/tools/dependencies-report/src/test/resources/rubyDependencies.csv
index 1ac0913d92f..4ac926f7be9 100644
--- a/tools/dependencies-report/src/test/resources/rubyDependencies.csv
+++ b/tools/dependencies-report/src/test/resources/rubyDependencies.csv
@@ -1,15 +1,17 @@
-name,version,url,license
-bundler,1.16.1,http://bundler.io,MIT
-bundler,1.16.0,http://bundler.io,MIT
-filesize,0.0.4,http://filesize.rubyforge.org/,UNKNOWN
-jar-dependencies,0.3.12,https://github.com/mkristian/jar-dependencies,MIT
-jar-dependencies,0.3.11,https://github.com/mkristian/jar-dependencies,MIT
-jar-dependencies,0.3.10,https://github.com/mkristian/jar-dependencies,MIT
-jruby-openssl,0.9.21,https://github.com/jruby/jruby-openssl,EPL-1.0|GPL-2.0|LGPL-2.1
-jruby-openssl,0.9.20,https://github.com/jruby/jruby-openssl,EPL-1.0|GPL-2.0|LGPL-2.1
-jruby-readline,1.1.1,https://github.com/jruby/jruby,EPL-1.0|GPL-2.0|LGPL-2.1
-com.fasterxml.jackson.core:jackson-core,2.7.3,https://github.com/FasterXML/jackson-core,Apache-2.0
-com.fasterxml.jackson.core:jackson-core,2.9.1,https://github.com/FasterXML/jackson-core,Apache-2.0
-control.js,,,MIT
-json-generator,,https://github.com/flori/json,Ruby
-json-parser,,https://github.com/flori/json,Ruby
+name,version,url,license,copyright,sourceURL
+bundler,1.16.1,http://bundler.io,MIT,,
+bundler,1.16.0,http://bundler.io,MIT,,
+filesize,0.0.4,http://filesize.rubyforge.org/,UNKNOWN,,
+jar-dependencies,0.3.12,https://github.com/mkristian/jar-dependencies,MIT,,
+jar-dependencies,0.3.11,https://github.com/mkristian/jar-dependencies,MIT,,
+jar-dependencies,0.3.10,https://github.com/mkristian/jar-dependencies,MIT,,
+jruby-openssl,0.9.21,https://github.com/jruby/jruby-openssl,EPL-1.0|GPL-2.0|LGPL-2.1,,
+jruby-openssl,0.9.20,https://github.com/jruby/jruby-openssl,EPL-1.0|GPL-2.0|LGPL-2.1,,
+jruby-readline,1.1.1,https://github.com/jruby/jruby,EPL-1.0|GPL-2.0|LGPL-2.1,,
+com.fasterxml.jackson.core:jackson-core,2.7.3,https://github.com/FasterXML/jackson-core,Apache-2.0,,
+com.fasterxml.jackson.core:jackson-core,2.9.1,https://github.com/FasterXML/jackson-core,Apache-2.0,,
+control.js,,,MIT,,
+json-generator,,https://github.com/flori/json,Ruby,,
+json-parser,,https://github.com/flori/json,Ruby,,
+tzinfo,,https://github.com/tzinfo/tzinfo,MIT,Philip Ross,
+Red Hat Universal Base Image minimal,8,https://catalog.redhat.com/software/containers/ubi8/ubi-minimal/5c359a62bed8bd75a2c3fba8,Custom;https://www.redhat.com/licenses/EULA_Red_Hat_Universal_Base_Image_English_20190422.pdf,,https://oss-dependencies.elastic.co/redhat/ubi/ubi-minimal-8-source.tar.gz
\ No newline at end of file
