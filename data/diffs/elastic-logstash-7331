diff --git a/tools/ingest-converter/src/main/java/org/logstash/ingest/Append.java b/tools/ingest-converter/src/main/java/org/logstash/ingest/Append.java
index d783fd45bd3..47126fb04b4 100644
--- a/tools/ingest-converter/src/main/java/org/logstash/ingest/Append.java
+++ b/tools/ingest-converter/src/main/java/org/logstash/ingest/Append.java
@@ -1,11 +1,5 @@
 package org.logstash.ingest;
 
-import java.io.IOException;
-import java.nio.charset.StandardCharsets;
-import java.nio.file.Files;
-import java.nio.file.Paths;
-import javax.script.Invocable;
-import javax.script.ScriptEngine;
 import javax.script.ScriptException;
 
 /**
@@ -18,16 +12,6 @@ private Append() {
     }
 
     public static void main(final String... args) throws ScriptException, NoSuchMethodException {
-        try {
-            final ScriptEngine engine = JsUtil.engine();
-            Files.write(Paths.get(args[1]), ((String) ((Invocable) engine).invokeFunction(
-                "ingest_append_to_logstash",
-                new String(
-                    Files.readAllBytes(Paths.get(args[0])), StandardCharsets.UTF_8
-                )
-            )).getBytes(StandardCharsets.UTF_8));
-        } catch (final IOException ex) {
-            throw new IllegalStateException(ex);
-        }
+        JsUtil.convert(args, "ingest_append_to_logstash");
     }
 }
diff --git a/tools/ingest-converter/src/main/java/org/logstash/ingest/Convert.java b/tools/ingest-converter/src/main/java/org/logstash/ingest/Convert.java
index 6e931a86ec2..f4a0fe2e77a 100644
--- a/tools/ingest-converter/src/main/java/org/logstash/ingest/Convert.java
+++ b/tools/ingest-converter/src/main/java/org/logstash/ingest/Convert.java
@@ -1,11 +1,5 @@
 package org.logstash.ingest;
 
-import java.io.IOException;
-import java.nio.charset.StandardCharsets;
-import java.nio.file.Files;
-import java.nio.file.Paths;
-import javax.script.Invocable;
-import javax.script.ScriptEngine;
 import javax.script.ScriptException;
 
 /**
@@ -18,16 +12,6 @@ private Convert() {
     }
 
     public static void main(final String... args) throws ScriptException, NoSuchMethodException {
-        try {
-            final ScriptEngine engine = JsUtil.engine();
-            Files.write(Paths.get(args[1]), ((String) ((Invocable) engine).invokeFunction(
-                "ingest_convert_to_logstash",
-                new String(
-                    Files.readAllBytes(Paths.get(args[0])), StandardCharsets.UTF_8
-                )
-            )).getBytes(StandardCharsets.UTF_8));
-        } catch (final IOException ex) {
-            throw new IllegalStateException(ex);
-        }
+        JsUtil.convert(args, "ingest_convert_to_logstash");
     }
 }
diff --git a/tools/ingest-converter/src/main/java/org/logstash/ingest/Date.java b/tools/ingest-converter/src/main/java/org/logstash/ingest/Date.java
index 2403db23581..8ad435a325a 100644
--- a/tools/ingest-converter/src/main/java/org/logstash/ingest/Date.java
+++ b/tools/ingest-converter/src/main/java/org/logstash/ingest/Date.java
@@ -1,11 +1,5 @@
 package org.logstash.ingest;
 
-import java.io.IOException;
-import java.nio.charset.StandardCharsets;
-import java.nio.file.Files;
-import java.nio.file.Paths;
-import javax.script.Invocable;
-import javax.script.ScriptEngine;
 import javax.script.ScriptException;
 
 /**
@@ -18,16 +12,6 @@ private Date() {
     }
 
     public static void main(final String... args) throws ScriptException, NoSuchMethodException {
-        try {
-            final ScriptEngine engine = JsUtil.engine();
-            Files.write(Paths.get(args[1]), ((String) ((Invocable) engine).invokeFunction(
-                "ingest_to_logstash_date",
-                new String(
-                    Files.readAllBytes(Paths.get(args[0])), StandardCharsets.UTF_8
-                )
-            )).getBytes(StandardCharsets.UTF_8));
-        } catch (final IOException ex) {
-            throw new IllegalStateException(ex);
-        }
+        JsUtil.convert(args, "ingest_to_logstash_date");
     }
 }
diff --git a/tools/ingest-converter/src/main/java/org/logstash/ingest/GeoIp.java b/tools/ingest-converter/src/main/java/org/logstash/ingest/GeoIp.java
index 7928ecba8d2..129fe1ed4a3 100644
--- a/tools/ingest-converter/src/main/java/org/logstash/ingest/GeoIp.java
+++ b/tools/ingest-converter/src/main/java/org/logstash/ingest/GeoIp.java
@@ -1,11 +1,5 @@
 package org.logstash.ingest;
 
-import java.io.IOException;
-import java.nio.charset.StandardCharsets;
-import java.nio.file.Files;
-import java.nio.file.Paths;
-import javax.script.Invocable;
-import javax.script.ScriptEngine;
 import javax.script.ScriptException;
 
 public final class GeoIp {
@@ -15,16 +9,6 @@ private GeoIp() {
     }
     
     public static void main(final String... args) throws ScriptException, NoSuchMethodException {
-        try {
-            final ScriptEngine engine = JsUtil.engine();
-            Files.write(Paths.get(args[1]), ((String) ((Invocable) engine).invokeFunction(
-                "ingest_to_logstash_geoip",
-                new String(
-                    Files.readAllBytes(Paths.get(args[0])), StandardCharsets.UTF_8
-                )
-            )).getBytes(StandardCharsets.UTF_8));
-        } catch (final IOException ex) {
-            throw new IllegalStateException(ex);
-        }
+        JsUtil.convert(args, "ingest_to_logstash_geoip");
     }
 }
diff --git a/tools/ingest-converter/src/main/java/org/logstash/ingest/Grok.java b/tools/ingest-converter/src/main/java/org/logstash/ingest/Grok.java
index c8884e18027..0d13ed9a5b0 100644
--- a/tools/ingest-converter/src/main/java/org/logstash/ingest/Grok.java
+++ b/tools/ingest-converter/src/main/java/org/logstash/ingest/Grok.java
@@ -1,11 +1,5 @@
 package org.logstash.ingest;
 
-import java.io.IOException;
-import java.nio.charset.StandardCharsets;
-import java.nio.file.Files;
-import java.nio.file.Paths;
-import javax.script.Invocable;
-import javax.script.ScriptEngine;
 import javax.script.ScriptException;
 
 /**
@@ -18,16 +12,6 @@ private Grok() {
     }
 
     public static void main(final String... args) throws ScriptException, NoSuchMethodException {
-        try {
-            final ScriptEngine engine = JsUtil.engine();
-            Files.write(Paths.get(args[1]), ((String) ((Invocable) engine).invokeFunction(
-                "ingest_to_logstash_grok",
-                new String(
-                    Files.readAllBytes(Paths.get(args[0])), StandardCharsets.UTF_8
-                )
-            )).getBytes(StandardCharsets.UTF_8));
-        } catch (final IOException ex) {
-            throw new IllegalStateException(ex);
-        }
+        JsUtil.convert(args, "ingest_to_logstash_grok");
     }
 }
diff --git a/tools/ingest-converter/src/main/java/org/logstash/ingest/Gsub.java b/tools/ingest-converter/src/main/java/org/logstash/ingest/Gsub.java
index 63b9dfded06..ef57ae44442 100644
--- a/tools/ingest-converter/src/main/java/org/logstash/ingest/Gsub.java
+++ b/tools/ingest-converter/src/main/java/org/logstash/ingest/Gsub.java
@@ -1,11 +1,5 @@
 package org.logstash.ingest;
 
-import java.io.IOException;
-import java.nio.charset.StandardCharsets;
-import java.nio.file.Files;
-import java.nio.file.Paths;
-import javax.script.Invocable;
-import javax.script.ScriptEngine;
 import javax.script.ScriptException;
 
 public final class Gsub {
@@ -15,16 +9,6 @@ private Gsub() {
     }
     
     public static void main(final String... args) throws ScriptException, NoSuchMethodException {
-        try {
-            final ScriptEngine engine = JsUtil.engine();
-            Files.write(Paths.get(args[1]), ((String) ((Invocable) engine).invokeFunction(
-                "ingest_to_logstash_gsub",
-                new String(
-                    Files.readAllBytes(Paths.get(args[0])), StandardCharsets.UTF_8
-                )
-            )).getBytes(StandardCharsets.UTF_8));
-        } catch (final IOException ex) {
-            throw new IllegalStateException(ex);
-        }
+        JsUtil.convert(args, "ingest_to_logstash_gsub");
     }
 }
diff --git a/tools/ingest-converter/src/main/java/org/logstash/ingest/JsUtil.java b/tools/ingest-converter/src/main/java/org/logstash/ingest/JsUtil.java
index 1d03fbba94d..2af0d966a43 100644
--- a/tools/ingest-converter/src/main/java/org/logstash/ingest/JsUtil.java
+++ b/tools/ingest-converter/src/main/java/org/logstash/ingest/JsUtil.java
@@ -3,6 +3,10 @@
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.io.Reader;
+import java.nio.charset.StandardCharsets;
+import java.nio.file.Files;
+import java.nio.file.Paths;
+import javax.script.Invocable;
 import javax.script.ScriptEngine;
 import javax.script.ScriptEngineManager;
 import javax.script.ScriptException;
@@ -37,6 +41,26 @@ public static ScriptEngine engine() {
         return engine;
     }
 
+    /**
+     * Converts the given files from ingest to LS conf using the javascript function
+     * @param args
+     * @param jsFunc
+     * @throws ScriptException
+     * @throws NoSuchMethodException
+     */
+    public static void convert(final String[] args, final String jsFunc) throws ScriptException, NoSuchMethodException {
+        try {
+            final ScriptEngine engine = JsUtil.engine();
+            Files.write(Paths.get(args[1]), ((String) ((Invocable) engine).invokeFunction(
+                jsFunc, new String(
+                    Files.readAllBytes(Paths.get(args[0])), StandardCharsets.UTF_8
+                )
+            )).getBytes(StandardCharsets.UTF_8));
+        } catch (final IOException ex) {
+            throw new IllegalStateException(ex);
+        }
+    }
+
     private static void add(final ScriptEngine engine, final String file)
         throws IOException, ScriptException {
         try (final Reader reader =
diff --git a/tools/ingest-converter/src/main/java/org/logstash/ingest/Json.java b/tools/ingest-converter/src/main/java/org/logstash/ingest/Json.java
index cec73158958..4b5e0a53055 100644
--- a/tools/ingest-converter/src/main/java/org/logstash/ingest/Json.java
+++ b/tools/ingest-converter/src/main/java/org/logstash/ingest/Json.java
@@ -1,12 +1,6 @@
 package org.logstash.ingest;
 
-import javax.script.Invocable;
-import javax.script.ScriptEngine;
 import javax.script.ScriptException;
-import java.io.IOException;
-import java.nio.charset.StandardCharsets;
-import java.nio.file.Files;
-import java.nio.file.Paths;
 
 /**
  * Ingest JSON processor DSL to Logstash json Transpiler.
@@ -17,16 +11,6 @@ private Json() {
     }
 
     public static void main(final String... args) throws ScriptException, NoSuchMethodException {
-        try {
-            final ScriptEngine engine = JsUtil.engine();
-            Files.write(Paths.get(args[1]), ((String) ((Invocable) engine).invokeFunction(
-                "ingest_json_to_logstash",
-                new String(
-                    Files.readAllBytes(Paths.get(args[0])), StandardCharsets.UTF_8
-                )
-            )).getBytes(StandardCharsets.UTF_8));
-        } catch (final IOException ex) {
-            throw new IllegalStateException(ex);
-        }
+        JsUtil.convert(args, "ingest_json_to_logstash");
     }
 }
diff --git a/tools/ingest-converter/src/main/java/org/logstash/ingest/Pipeline.java b/tools/ingest-converter/src/main/java/org/logstash/ingest/Pipeline.java
index 5af07c47eb3..102db9af6f7 100644
--- a/tools/ingest-converter/src/main/java/org/logstash/ingest/Pipeline.java
+++ b/tools/ingest-converter/src/main/java/org/logstash/ingest/Pipeline.java
@@ -1,11 +1,5 @@
 package org.logstash.ingest;
 
-import java.io.IOException;
-import java.nio.charset.StandardCharsets;
-import java.nio.file.Files;
-import java.nio.file.Paths;
-import javax.script.Invocable;
-import javax.script.ScriptEngine;
 import javax.script.ScriptException;
 
 /**
@@ -18,16 +12,6 @@ private Pipeline() {
     }
 
     public static void main(final String... args) throws ScriptException, NoSuchMethodException {
-        try {
-            final ScriptEngine engine = JsUtil.engine();
-            Files.write(Paths.get(args[1]), ((String) ((Invocable) engine).invokeFunction(
-                "ingest_pipeline_to_logstash",
-                new String(
-                    Files.readAllBytes(Paths.get(args[0])), StandardCharsets.UTF_8
-                )
-            )).getBytes(StandardCharsets.UTF_8));
-        } catch (final IOException ex) {
-            throw new IllegalStateException(ex);
-        }
+        JsUtil.convert(args, "ingest_pipeline_to_logstash");
     }
 }
diff --git a/tools/ingest-converter/src/test/java/org/logstash/ingest/AppendTest.java b/tools/ingest-converter/src/test/java/org/logstash/ingest/AppendTest.java
index 57115c50529..994cb12871d 100644
--- a/tools/ingest-converter/src/test/java/org/logstash/ingest/AppendTest.java
+++ b/tools/ingest-converter/src/test/java/org/logstash/ingest/AppendTest.java
@@ -15,7 +15,7 @@ public static Iterable<String> data() {
     }
 
     @Test
-    public void convertsConvertProcessorCorrectly() throws Exception {
+    public void convertsAppendProcessorCorrectly() throws Exception {
         final String append = getResultPath(temp);
         Append.main(resourcePath(String.format("ingest%s.json", testCase)), append);
         assertThat(
