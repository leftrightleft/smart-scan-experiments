diff --git a/x-pack/lib/monitoring/monitoring.rb b/x-pack/lib/monitoring/monitoring.rb
index 9a5fb910083..4b13aa1cb07 100644
--- a/x-pack/lib/monitoring/monitoring.rb
+++ b/x-pack/lib/monitoring/monitoring.rb
@@ -40,7 +40,7 @@ def initialize(node_uuid,
         @keystore_path = es_settings['keystore']
         @keystore_password = es_settings['keystore_password']
         @sniffing = es_settings['sniffing']
-        @ssl_certificate_verification = (es_settings['verification_mode'] == 'certificate')
+        @ssl_certificate_verification = es_settings.fetch('ssl_certificate_verification', true)
       end
 
       attr_accessor :system_api_version, :es_hosts, :user, :password, :node_uuid, :cloud_id, :cloud_auth, :api_key
diff --git a/x-pack/spec/monitoring/pipeline_register_hook_spec.rb b/x-pack/spec/monitoring/pipeline_register_hook_spec.rb
index ac630bd4f2d..a42b955eb23 100644
--- a/x-pack/spec/monitoring/pipeline_register_hook_spec.rb
+++ b/x-pack/spec/monitoring/pipeline_register_hook_spec.rb
@@ -44,6 +44,30 @@
         subject.generate_pipeline_config(settings)
       }.to raise_error(ArgumentError)
     end
+
+    context 'ssl certificate verification setting' do
+      {
+        'certificate' => 'true',
+        'none'        => 'false',
+        nil           => 'true', # unset, uses default
+      }.each do |setting_value, expected_result|
+        context "with `xpack.monitoring.elasticsearch.ssl.verification_mode` #{setting_value ? "set to `#{setting_value}`" : 'unset'}" do
+          it "the generated pipeline includes `ssl_certificate_verification => #{expected_result}`" do
+            settings = @sys_settings.clone.tap(&:reset)
+            settings.set_value("xpack.monitoring.enabled", true)
+            settings.set_value("xpack.monitoring.elasticsearch.hosts", "https://localhost:9200")
+            settings.set_value("xpack.monitoring.elasticsearch.username", "elastic")
+            settings.set_value("xpack.monitoring.elasticsearch.password", "changeme")
+
+            settings.set_value("xpack.monitoring.elasticsearch.ssl.verification_mode", setting_value) unless setting_value.nil?
+
+            generated_pipeline_config = subject.generate_pipeline_config(settings)
+
+            expect(generated_pipeline_config).to include("ssl_certificate_verification => #{expected_result}")
+          end
+        end
+      end
+    end
   end
 
 end
