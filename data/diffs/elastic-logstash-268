diff --git a/lib/logstash/filters/csv.rb b/lib/logstash/filters/csv.rb
index bc878bc09f7..d3a5da9cd1f 100644
--- a/lib/logstash/filters/csv.rb
+++ b/lib/logstash/filters/csv.rb
@@ -23,12 +23,17 @@ class LogStash::Filters::CSV < LogStash::Filters::Base
   # Optional.
   config :fields, :validate => :array, :default => []
 
+  # Define the column separator value. If this is not specified the default
+  # is a comma ','
+  # Optional.
+  config :separator, :validate => :string, :default => ","
+
   public
   def register
     @csv = {}
 
     @config.each do |field, dest|
-      next if (RESERVED + ["fields"]).member?(field)
+      next if (RESERVED + ["fields", "separator"]).member?(field)
       @csv[field] = dest
     end
 
@@ -60,7 +65,7 @@ def filter(event)
 
         raw = event[key].first
         begin
-          values = CSV.parse_line(raw)
+          values = CSV.parse_line(raw, {:col_sep => @separator})
           data = {}
           values.each_index do |i|
             field_name = @fields[i] || "field#{i+1}"
@@ -82,3 +87,4 @@ def filter(event)
     @logger.debug("Event after csv filter", :event => event)
   end # def filter
 end # class LogStash::Filters::Csv
+
diff --git a/spec/filters/csv.rb b/spec/filters/csv.rb
index 238d7f533b1..3de9e6be208 100644
--- a/spec/filters/csv.rb
+++ b/spec/filters/csv.rb
@@ -38,6 +38,21 @@
     end
   end
 
+  describe "custom separator" do
+    config <<-CONFIG
+      filter {
+        csv {
+          separator => ";"
+        }
+      }
+    CONFIG
+
+    sample "big,bird;sesame street" do
+      insist { subject["field1"] } == "big,bird"
+      insist { subject["field2"] } == "sesame street"
+    end
+  end
+
   describe "parse csv with more data than defined field names" do
     config <<-CONFIG
       filter {
