diff --git a/config/jvm.options b/config/jvm.options
index 7c05c99d120..14805b5a757 100644
--- a/config/jvm.options
+++ b/config/jvm.options
@@ -79,3 +79,6 @@
 
 # Copy the logging context from parent threads to children
 -Dlog4j2.isThreadContextMapInheritable=true
+
+17-:--add-opens java.base/sun.nio.ch=ALL-UNNAMED
+17-:--add-opens java.base/java.io=ALL-UNNAMED
\ No newline at end of file
diff --git a/logstash-core/src/main/java/org/logstash/Logstash.java b/logstash-core/src/main/java/org/logstash/Logstash.java
index 901fbf8ef04..22857e3dd1d 100644
--- a/logstash-core/src/main/java/org/logstash/Logstash.java
+++ b/logstash-core/src/main/java/org/logstash/Logstash.java
@@ -26,8 +26,6 @@
 import java.io.PrintStream;
 import java.nio.file.Path;
 import java.nio.file.Paths;
-import java.security.AccessController;
-import java.security.PrivilegedAction;
 
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
@@ -128,24 +126,8 @@ private static void handleFatalError(String message, Throwable t) {
     }
 
     private static void halt(final int status) {
-        AccessController.doPrivileged(new PrivilegedHaltAction(status));
-    }
-
-    private static class PrivilegedHaltAction implements PrivilegedAction<Void> {
-
-        private final int status;
-
-        private PrivilegedHaltAction(final int status) {
-            this.status = status;
-        }
-
-        @Override
-        public Void run() {
-            // we halt to prevent shutdown hooks from running
-            Runtime.getRuntime().halt(status);
-            return null;
-        }
-
+        // we halt to prevent shutdown hooks from running
+        Runtime.getRuntime().halt(status);
     }
 
     /**
diff --git a/logstash-core/src/test/java/org/logstash/secret/store/backend/JavaKeyStoreTest.java b/logstash-core/src/test/java/org/logstash/secret/store/backend/JavaKeyStoreTest.java
index 021e7711794..39834ae7916 100644
--- a/logstash-core/src/test/java/org/logstash/secret/store/backend/JavaKeyStoreTest.java
+++ b/logstash-core/src/test/java/org/logstash/secret/store/backend/JavaKeyStoreTest.java
@@ -27,6 +27,7 @@
 import org.junit.Test;
 import org.junit.rules.ExpectedException;
 import org.junit.rules.TemporaryFolder;
+import org.logstash.LogstashJavaCompat;
 import org.logstash.secret.SecretIdentifier;
 import org.logstash.secret.store.SecretStore;
 import org.logstash.secret.store.SecretStoreException;
@@ -314,7 +315,7 @@ public void retrieveWithInvalidInput() {
      */
     @Test
     public void tamperedKeystore() throws Exception {
-        thrown.expect(SecretStoreException.AccessException.class);
+        thrown.expect(SecretStoreException.class);
         byte[] keyStoreAsBytes = Files.readAllBytes(Paths.get(new String(keyStorePath)));
         //bump the middle byte by 1
         int tamperLocation = keyStoreAsBytes.length / 2;
diff --git a/qa/integration/build.gradle b/qa/integration/build.gradle
index 91c29d757a7..004b74c9a8e 100644
--- a/qa/integration/build.gradle
+++ b/qa/integration/build.gradle
@@ -61,6 +61,9 @@ clean {
 }
 
 tasks.register("integrationTests", Test) {
+  if ((JavaVersion.current().getMajorVersion() as int) >= 17) {
+    jvmArgs = ['--add-opens', 'java.base/sun.nio.ch=ALL-UNNAMED', '--add-opens', 'java.base/java.io=ALL-UNNAMED']
+  }
   dependsOn copyProductionLog4jConfiguration
 
   inputs.files fileTree("${projectDir}/services")
diff --git a/x-pack/build.gradle b/x-pack/build.gradle
index 6ea1d5908ca..8abc0114651 100644
--- a/x-pack/build.gradle
+++ b/x-pack/build.gradle
@@ -52,6 +52,9 @@ tasks.register("rubyTests", Test) {
 }
 
 tasks.register("rubyIntegrationTests", Test) {
+  if ((JavaVersion.current().getMajorVersion() as int) >= 17) {
+    jvmArgs = ['--add-opens', 'java.base/sun.nio.ch=ALL-UNNAMED', '--add-opens', 'java.base/java.io=ALL-UNNAMED']
+  }
   dependsOn (":copyEs")
   inputs.files fileTree("${projectDir}/qa")
   inputs.files fileTree("${projectDir}/lib")
