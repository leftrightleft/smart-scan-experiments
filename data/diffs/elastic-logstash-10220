diff --git a/x-pack/qa/integration/monitoring/monitoring_is_disabled_spec.rb b/x-pack/qa/integration/monitoring/monitoring_is_disabled_spec.rb
index 0e53c8d3c2c..1723c72e875 100644
--- a/x-pack/qa/integration/monitoring/monitoring_is_disabled_spec.rb
+++ b/x-pack/qa/integration/monitoring/monitoring_is_disabled_spec.rb
@@ -33,6 +33,6 @@
   let(:monitoring_index) { ".monitoring-logstash-2-*" }
 
   it "doesn't record any metrics" do
-    expect(elasticsearch_client.search(:index => monitoring_index)["hits"]["total"]).to  eq(0)
+    expect(elasticsearch_client.search(:index => monitoring_index)["hits"]["total"]["value"]).to  eq(0)
   end
 end
diff --git a/x-pack/qa/integration/support/shared_examples.rb b/x-pack/qa/integration/support/shared_examples.rb
index 55349df9ee3..d1465051d99 100644
--- a/x-pack/qa/integration/support/shared_examples.rb
+++ b/x-pack/qa/integration/support/shared_examples.rb
@@ -19,7 +19,7 @@
       Stud.try(max_retry.times, retryable_errors) do
         elasticsearch_client.indices.refresh
         api_response = elasticsearch_client.search :index => MONITORING_INDEXES, :body => {:query => {:term => {"type" => "logstash_stats"}}}
-        expect(api_response["hits"]["total"]).to be > 0
+        expect(api_response["hits"]["total"]["value"]).to be > 0
         api_response["hits"]["hits"].each do |full_document|
           document = full_document["_source"]["logstash_stats"]
           expect(JSON::Validator.fully_validate(schema_file, document)).to be_empty
@@ -35,7 +35,7 @@
       Stud.try(max_retry.times, retryable_errors) do
         elasticsearch_client.indices.refresh
         api_response = elasticsearch_client.search :index => MONITORING_INDEXES, :body => {:query => {:term => {"type" => "logstash_state"}}}
-        expect(api_response["hits"]["total"]).to be > 0
+        expect(api_response["hits"]["total"]["value"]).to be > 0
         api_response["hits"]["hits"].each do |full_document|
           document = full_document["_source"]["logstash_state"]
           expect(JSON::Validator.fully_validate(schema_file, document)).to be_empty
