diff --git a/qa/Gemfile b/qa/Gemfile
index 662249894ae..1919a50f272 100644
--- a/qa/Gemfile
+++ b/qa/Gemfile
@@ -3,5 +3,3 @@ gem "runner-tool", :git => "https://github.com/purbon/runner-tool.git"
 gem "rspec", "~> 3.1.0"
 gem "rake"
 gem "pry", :group => :test
-gem "stud"
-gem "logstash-devutils"
diff --git a/qa/README.md b/qa/README.md
index 1cd42210a7e..0e6e47cec50 100644
--- a/qa/README.md
+++ b/qa/README.md
@@ -1,13 +1,13 @@
 ## Acceptance test Framework
 
 Welcome to the acceptance test framework for logstash, in this small
-readme we're going to describe it's features and the the necessary steps you will need to
+README we're going to describe it's features and the necessary steps you will need to
 follow to setup your environment.
 
 ### Environment setup and Running Tests
 
 It is possible to run the full suite of the acceptance test with the codebase by 
-running the command `ci/ci_acceptance.sh`, this command will generate the artefacts, bootstrap
+running the command `ci/ci_acceptance.sh`, this command will generate the artifacts, bootstrap
 the VM and run the tests.
 
 
diff --git a/qa/config/platforms.json b/qa/config/platforms.json
index f99c76cf72a..09a7d6ce481 100644
--- a/qa/config/platforms.json
+++ b/qa/config/platforms.json
@@ -3,14 +3,16 @@
   "platforms" : {
     "ubuntu-1204": { "box": "elastic/ubuntu-12.04-x86_64", "type": "debian" },
     "ubuntu-1404": { "box": "elastic/ubuntu-14.04-x86_64", "type": "debian", "specific": true },
-    "ubuntu-1504": { "box": "elastic/ubuntu-15.04-x86_64", "type": "debian" },
+    "ubuntu-1604": { "box": "elastic/ubuntu-16.04-x86_64", "type": "debian" },
     "centos-6": { "box": "elastic/centos-6-x86_64", "type": "redhat" },
     "centos-7": { "box": "elastic/centos-7-x86_64", "type": "redhat" },
     "oel-6": { "box": "elastic/oraclelinux-6-x86_64", "type": "redhat" },
     "oel-7": { "box": "elastic/oraclelinux-7-x86_64", "type": "redhat" },
     "fedora-22": { "box": "elastic/fedora-22-x86_64", "type": "redhat" },
+    "fedora-23": { "box": "elastic/fedora-23-x86_64", "type": "redhat" },
     "debian-8": { "box": "elastic/debian-8-x86_64", "type": "debian", "specific":  true },
     "opensuse-13": { "box": "elastic/opensuse-13-x86_64", "type": "suse" },
+    "sles-11": { "box": "elastic/sles-11-x86_64", "type": "suse", "specific": true },
     "sles-12": { "box": "elastic/sles-12-x86_64", "type": "suse", "specific": true }
   }
 }
diff --git a/qa/rspec/commands.rb b/qa/rspec/commands.rb
index 310dd86de3b..bd8d6f195bd 100644
--- a/qa/rspec/commands.rb
+++ b/qa/rspec/commands.rb
@@ -5,6 +5,8 @@
 require_relative "./commands/suse"
 require_relative "./commands/centos/centos-6"
 require_relative "./commands/oel/oel-6"
+require_relative "./commands/ubuntu/ubuntu-1604"
+require_relative "./commands/suse/sles-11"
 
 require "forwardable"
 
@@ -95,12 +97,20 @@ def self.fetch(type, host)
       case type
       when "debian"
         if host.start_with?("ubuntu")
-          return UbuntuCommands.new
+          if host == "ubuntu-1604"
+            return Ubuntu1604Commands.new
+          else
+            return UbuntuCommands.new
+          end
         else
           return DebianCommands.new
         end
       when "suse"
-        return SuseCommands.new
+        if host == "sles-11"
+          return Sles11Commands.new
+        else
+          return SuseCommands.new
+        end
       when "redhat"
         if host == "centos-6"
           return Centos6Commands.new
diff --git a/qa/rspec/commands/base.rb b/qa/rspec/commands/base.rb
index d735a10a48e..cd2acc2bfc9 100644
--- a/qa/rspec/commands/base.rb
+++ b/qa/rspec/commands/base.rb
@@ -1,5 +1,6 @@
 # encoding: utf-8
 require_relative "../../vagrant/helpers"
+require_relative "system_helpers"
 
 module ServiceTester
 
diff --git a/qa/rspec/commands/centos/centos-6.rb b/qa/rspec/commands/centos/centos-6.rb
index 565b8fa8287..371590490e6 100644
--- a/qa/rspec/commands/centos/centos-6.rb
+++ b/qa/rspec/commands/centos/centos-6.rb
@@ -4,20 +4,6 @@
 
 module ServiceTester
   class Centos6Commands < RedhatCommands
-    def running?(hosts, package)
-      stdout = ""
-      at(hosts, {in: :serial}) do |host|
-        cmd = sudo_exec!("initctl status #{package}")
-        stdout = cmd.stdout
-      end
-      stdout.match(/#{package} start\/running/)
-    end
-
-    def service_manager(service, action, host=nil)
-      hosts = (host.nil? ? servers : Array(host))
-      at(hosts, {in: :serial}) do |_|
-        sudo_exec!("initctl #{service} #{action}")
-      end
-    end
+      include ::ServiceTester::InitD
   end
 end
diff --git a/qa/rspec/commands/debian.rb b/qa/rspec/commands/debian.rb
index a63c7ffff0e..710ffc48d57 100644
--- a/qa/rspec/commands/debian.rb
+++ b/qa/rspec/commands/debian.rb
@@ -4,6 +4,8 @@
 module ServiceTester
   class DebianCommands < Base
 
+    include ::ServiceTester::SystemD
+
     def installed?(hosts, package)
       stdout = ""
       at(hosts, {in: :serial}) do |host|
@@ -44,24 +46,5 @@ def removed?(hosts, package)
         stdout.match(/^dpkg-query: package '#{package}' is not installed and no information is available$/)
       )
     end
-
-    def running?(hosts, package)
-      stdout = ""
-      at(hosts, {in: :serial}) do |host|
-        cmd = sudo_exec!("service #{package} status")
-        stdout = cmd.stdout
-      end
-      (
-        stdout.match(/Active: active \(running\)/) &&
-        stdout.match(/#{package}.service - #{package}/)
-      )
-    end
-
-    def service_manager(service, action, host=nil)
-      hosts = (host.nil? ? servers : Array(host))
-      at(hosts, {in: :serial}) do |_|
-        sudo_exec!("service #{service} #{action}")
-      end
-    end
   end
 end
diff --git a/qa/rspec/commands/oel/oel-6.rb b/qa/rspec/commands/oel/oel-6.rb
index 6070edc3ca7..ed92a8ce11d 100644
--- a/qa/rspec/commands/oel/oel-6.rb
+++ b/qa/rspec/commands/oel/oel-6.rb
@@ -4,20 +4,6 @@
 
 module ServiceTester
   class Oel6Commands < RedhatCommands
-    def running?(hosts, package)
-      stdout = ""
-      at(hosts, {in: :serial}) do |host|
-        cmd = sudo_exec!("initctl status #{package}")
-        stdout = cmd.stdout
-      end
-      stdout.match(/#{package} start\/running/)
-    end
-
-    def service_manager(service, action, host=nil)
-      hosts = (host.nil? ? servers : Array(host))
-      at(hosts, {in: :serial}) do |_|
-        sudo_exec!("initctl #{service} #{action}")
-      end
-    end
+    include ::ServiceTester::InitD
   end
 end
diff --git a/qa/rspec/commands/redhat.rb b/qa/rspec/commands/redhat.rb
index 83e9f04a90f..8f0cf753c23 100644
--- a/qa/rspec/commands/redhat.rb
+++ b/qa/rspec/commands/redhat.rb
@@ -4,6 +4,8 @@
 module ServiceTester
   class RedhatCommands < Base
 
+    include ::ServiceTester::SystemD
+
     def installed?(hosts, package)
       stdout = ""
       at(hosts, {in: :serial}) do |host|
@@ -43,25 +45,5 @@ def removed?(hosts, package)
       end
       stdout.match(/^Error: No matching Packages to list$/)
     end
-
-    def running?(hosts, package)
-      stdout = ""
-      at(hosts, {in: :serial}) do |host|
-        cmd = sudo_exec!("service #{package} status")
-        stdout = cmd.stdout
-      end
-      (
-        stdout.match(/Active: active \(running\)/) &&
-        stdout.match(/#{package}.service - #{package}/)
-      )
-    end
-
-    def service_manager(service, action, host=nil)
-      hosts = (host.nil? ? servers : Array(host))
-      at(hosts, {in: :serial}) do |_|
-        sudo_exec!("service #{service} #{action}")
-      end
-    end
-
   end
 end
diff --git a/qa/rspec/commands/suse.rb b/qa/rspec/commands/suse.rb
index 57840415cb1..2a214a53b7e 100644
--- a/qa/rspec/commands/suse.rb
+++ b/qa/rspec/commands/suse.rb
@@ -13,8 +13,8 @@ def installed?(hosts, package)
       stdout.match(/^i | logstash | An extensible logging pipeline | package$/)
     end
 
-    def package_for(version)
-      File.join(ServiceTester::Base::LOCATION, "logstash-#{version}.noarch.rpm")
+    def package_for(version, base=ServiceTester::Base::LOCATION)
+      File.join(base, "logstash-#{version}.rpm")
     end
 
     def install(package, host=nil)
diff --git a/qa/rspec/commands/suse/sles-11.rb b/qa/rspec/commands/suse/sles-11.rb
new file mode 100644
index 00000000000..80dd94dd719
--- /dev/null
+++ b/qa/rspec/commands/suse/sles-11.rb
@@ -0,0 +1,25 @@
+# encoding: utf-8
+require_relative "../base"
+require_relative "../suse"
+
+module ServiceTester
+  class Sles11Commands < SuseCommands
+
+    def running?(hosts, package)
+      stdout = ""
+      at(hosts, {in: :serial}) do |host|
+        cmd = sudo_exec!("/etc/init.d/#{package} status")
+        stdout = cmd.stdout
+      end
+      stdout.match(/#{package} is running$/)
+    end
+
+    def service_manager(service, action, host=nil)
+      hosts = (host.nil? ? servers : Array(host))
+      at(hosts, {in: :serial}) do |_|
+        sudo_exec!("/etc/init.d/#{service} #{action}")
+      end
+    end
+
+  end
+end
diff --git a/qa/rspec/commands/system_helpers.rb b/qa/rspec/commands/system_helpers.rb
new file mode 100644
index 00000000000..8cb8922946b
--- /dev/null
+++ b/qa/rspec/commands/system_helpers.rb
@@ -0,0 +1,42 @@
+require_relative "base"
+
+module ServiceTester
+  module SystemD
+    def running?(hosts, package)
+      stdout = ""
+      at(hosts, {in: :serial}) do |host|
+        cmd = sudo_exec!("service #{package} status")
+        stdout = cmd.stdout
+      end
+      (
+        stdout.match(/Active: active \(running\)/) &&
+        stdout.match(/#{package}.service - #{package}/)
+      )
+    end
+
+    def service_manager(service, action, host=nil)
+      hosts = (host.nil? ? servers : Array(host))
+      at(hosts, {in: :serial}) do |_|
+        sudo_exec!("service #{service} #{action}")
+      end
+    end
+  end
+
+  module InitD
+    def running?(hosts, package)
+      stdout = ""
+      at(hosts, {in: :serial}) do |host|
+        cmd = sudo_exec!("initctl status #{package}")
+        stdout = cmd.stdout
+      end
+      stdout.match(/#{package} start\/running/)
+    end
+
+    def service_manager(service, action, host=nil)
+      hosts = (host.nil? ? servers : Array(host))
+      at(hosts, {in: :serial}) do |_|
+        sudo_exec!("initctl #{action} #{service}")
+      end
+    end 
+  end
+end
diff --git a/qa/rspec/commands/ubuntu/ubuntu-1604.rb b/qa/rspec/commands/ubuntu/ubuntu-1604.rb
new file mode 100644
index 00000000000..ae26bc09f28
--- /dev/null
+++ b/qa/rspec/commands/ubuntu/ubuntu-1604.rb
@@ -0,0 +1,9 @@
+# encoding: utf-8
+require_relative "../base"
+require_relative "../ubuntu"
+
+module ServiceTester
+  class Ubuntu1604Commands < UbuntuCommands
+      include ::ServiceTester::SystemD
+  end
+end
diff --git a/qa/sys/suse/sles-11/bootstrap.sh b/qa/sys/suse/sles-11/bootstrap.sh
new file mode 100644
index 00000000000..654be5d7ec0
--- /dev/null
+++ b/qa/sys/suse/sles-11/bootstrap.sh
@@ -0,0 +1,8 @@
+#!/usr/bin/env bash
+
+zypper rr systemsmanagement_puppet
+zypper addrepo -t yast2 http://demeter.uni-regensburg.de/SLES12-x64/DVD1/ dvd1 || true
+zypper addrepo -t yast2 http://demeter.uni-regensburg.de/SLES12-x64/DVD2/ dvd2 || true
+ln -s /usr/sbin/update-alternatives /usr/sbin/alternatives
+curl -L 'https://edelivery.oracle.com/otn-pub/java/jdk/8u77-b03/jdk-8u77-linux-x64.rpm' -H 'Accept-Encoding: gzip, deflate, sdch' -H 'Accept-Language: en-US,en;q=0.8' -H 'Upgrade-Insecure-Requests: 1' -H 'User-Agent: Mozilla/5.0' -H 'Cookie: oraclelicense=accept-securebackup-cookie;' -H 'Connection: keep-alive' --compressed -o oracle_jdk_1.8.rpm
+zypper -q -n --non-interactive install oracle_jdk_1.8.rpm
