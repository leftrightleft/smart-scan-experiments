diff --git a/logstash-core/src/main/java/org/logstash/config/ir/compiler/AbstractOutputDelegatorExt.java b/logstash-core/src/main/java/org/logstash/config/ir/compiler/AbstractOutputDelegatorExt.java
index 2df5c678c13..f5c8b3b8554 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/compiler/AbstractOutputDelegatorExt.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/compiler/AbstractOutputDelegatorExt.java
@@ -1,6 +1,8 @@
 package org.logstash.config.ir.compiler;
 
 import java.util.Collection;
+import java.util.Collections;
+import java.util.Comparator;
 import java.util.concurrent.TimeUnit;
 import org.jruby.Ruby;
 import org.jruby.RubyArray;
@@ -21,6 +23,16 @@
 @JRubyClass(name = "AbstractOutputDelegator")
 public abstract class AbstractOutputDelegatorExt extends RubyObject {
 
+    class SortRubyEventByOrder implements Comparator<IRubyObject>
+    {
+        public int compare(IRubyObject a, IRubyObject b)
+        {
+            final long oa = (long)((JrubyEventExtLibrary.RubyEvent) a).getEvent().getField("order");
+            final long ob = (long)((JrubyEventExtLibrary.RubyEvent) b).getEvent().getField("order");
+            return (int)(oa - ob);
+        }
+    }
+
     private static final long serialVersionUID = 1L;
 
     public static final String OUTPUT_METHOD_NAME = "multi_receive";
@@ -95,6 +107,8 @@ public IRubyObject metricEvents() {
     public IRubyObject multiReceive(final IRubyObject events) {
         @SuppressWarnings("rawtypes")
         final RubyArray batch = (RubyArray) events;
+        Collections.sort(batch, new SortRubyEventByOrder());
+
         final int count = batch.size();
         eventMetricIn.increment((long) count);
         final long start = System.nanoTime();
diff --git a/logstash-core/src/main/java/org/logstash/execution/MemoryReadBatch.java b/logstash-core/src/main/java/org/logstash/execution/MemoryReadBatch.java
index c6854044004..81e7d509bbb 100644
--- a/logstash-core/src/main/java/org/logstash/execution/MemoryReadBatch.java
+++ b/logstash-core/src/main/java/org/logstash/execution/MemoryReadBatch.java
@@ -34,7 +34,9 @@ public static MemoryReadBatch create() {
     public RubyArray to_a() {
         ThreadContext context = RUBY.getCurrentContext();
         final RubyArray result = context.runtime.newArray(events.size());
+        int i = 0;
         for (final IRubyObject event : events) {
+            ((JrubyEventExtLibrary.RubyEvent) event).getEvent().setField("order", i++);
             if (!isCancelled(event)) {
                 result.add(event);
             }
