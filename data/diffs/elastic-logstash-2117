diff --git a/logstash.gemspec b/logstash.gemspec
index abed96bd9fc..dbc88ed4c7d 100644
--- a/logstash.gemspec
+++ b/logstash.gemspec
@@ -78,6 +78,7 @@ Gem::Specification.new do |gem|
 
   # Development Deps
   gem.add_development_dependency "coveralls"
+  gem.add_runtime_dependency "logstash-devutils"
 
   # Jenkins Deps
   gem.add_runtime_dependency "ci_reporter", "1.9.3"
diff --git a/spec/core/conditionals_spec.rb b/spec/core/conditionals_spec.rb
index 2bb46b2825f..576851ae484 100644
--- a/spec/core/conditionals_spec.rb
+++ b/spec/core/conditionals_spec.rb
@@ -1,4 +1,4 @@
-require "spec_helper"
+require "logstash/devutils/rspec/spec_helper"
 
 module ConditionalFanciness
   def description
diff --git a/spec/core/timestamp_spec.rb b/spec/core/timestamp_spec.rb
index b899e8064ea..01bc3fb8250 100644
--- a/spec/core/timestamp_spec.rb
+++ b/spec/core/timestamp_spec.rb
@@ -1,4 +1,4 @@
-require 'spec_helper'
+require "logstash/devutils/rspec/spec_helper"
 require "logstash/timestamp"
 
 describe LogStash::Timestamp do
diff --git a/spec/inputs/base_spec.rb b/spec/inputs/base_spec.rb
index 4aec45401bb..e53280f86a0 100644
--- a/spec/inputs/base_spec.rb
+++ b/spec/inputs/base_spec.rb
@@ -1,5 +1,5 @@
 # encoding: utf-8
-require "spec_helper"
+require "logstash/devutils/rspec/spec_helper"
 
 describe "LogStash::Inputs::Base#fix_streaming_codecs" do
   it "should carry the charset setting along when switching" do
diff --git a/spec/logstash_helpers.rb b/spec/logstash_helpers.rb
deleted file mode 100644
index 0439661e059..00000000000
--- a/spec/logstash_helpers.rb
+++ /dev/null
@@ -1,77 +0,0 @@
-require "logstash/agent"
-require "logstash/pipeline"
-require "logstash/event"
-
-module LogStashHelper
-
-  def config(configstr)
-    let(:config) { configstr }
-  end # def config
-
-  def type(default_type)
-    let(:default_type) { default_type }
-  end
-
-  def tags(*tags)
-    let(:default_tags) { tags }
-    puts "Setting default tags: #{tags}"
-  end
-
-  def sample(sample_event, &block)
-    name = sample_event.is_a?(String) ? sample_event : LogStash::Json.dump(sample_event)
-    name = name[0..50] + "..." if name.length > 50
-
-    describe "\"#{name}\"" do
-      let(:pipeline) { LogStash::Pipeline.new(config) }
-      let(:event) do
-        sample_event = [sample_event] unless sample_event.is_a?(Array)
-        next sample_event.collect do |e|
-          e = { "message" => e } if e.is_a?(String)
-          next LogStash::Event.new(e)
-        end
-      end
-
-      let(:results) do
-        results = []
-        pipeline.instance_eval { @filters.each(&:register) }
-
-        event.each do |e|
-          pipeline.filter(e) {|new_event| results << new_event }
-        end
-
-        pipeline.flush_filters(:final => true) do |e|
-          results << e unless e.cancelled?
-        end
-
-        results
-      end
-
-      subject { results.length > 1 ? results: results.first }
-
-      it("when processed", &block)
-    end
-  end # def sample
-
-  def input(&block)
-    it "inputs" do
-      pipeline = LogStash::Pipeline.new(config)
-      queue = Queue.new
-      pipeline.instance_eval do
-        @output_func = lambda { |event| queue << event }
-      end
-      block.call(pipeline, queue)
-      pipeline.shutdown
-    end
-  end # def input
-
-  def agent(&block)
-
-    it("agent(#{caller[0].gsub(/ .*/, "")}) runs") do
-      pipeline = LogStash::Pipeline.new(config)
-      pipeline.run
-      block.call
-    end
-  end # def agent
-
-end # module LogStash
-
diff --git a/spec/spec_helper.rb b/spec/spec_helper.rb
deleted file mode 100644
index 49da3cdc7f7..00000000000
--- a/spec/spec_helper.rb
+++ /dev/null
@@ -1,50 +0,0 @@
-require "logstash/logging"
-require 'logstash_helpers'
-require "insist"
-
-if ENV['COVERAGE']
-  require 'simplecov'
-  require 'coveralls'
-
-  SimpleCov.formatter = SimpleCov::Formatter::MultiFormatter[
-    SimpleCov::Formatter::HTMLFormatter,
-    Coveralls::SimpleCov::Formatter
-  ]
-  SimpleCov.start do
-    add_filter 'spec/'
-    add_filter 'vendor/'
-  end
-end
-
-$TESTING = true
-if RUBY_VERSION < "1.9.2"
-  $stderr.puts "Ruby 1.9.2 or later is required. (You are running: " + RUBY_VERSION + ")"
-  raise LoadError
-end
-
-$logger = LogStash::Logger.new(STDOUT)
-if ENV["TEST_DEBUG"]
-  $logger.level = :debug
-else
-  $logger.level = :error
-end
-
-puts("Using Accessor#strict_set for specs")
-# mokey path LogStash::Event to use strict_set in tests
-# ugly, I know, but this avoids adding conditionals in performance critical section
-class LogStash::Event
-  alias_method :setval, :[]=
-  def []=(str, value)
-    if str == TIMESTAMP && !value.is_a?(LogStash::Timestamp)
-      raise TypeError, "The field '@timestamp' must be a LogStash::Timestamp, not a #{value.class} (#{value})"
-    end
-    LogStash::Event.validate_value(value)
-    setval(str, value)
-  end # def []=
-end
-
-RSpec.configure do |config|
-  config.extend LogStashHelper
-  config.filter_run_excluding :redis => true, :socket => true, :performance => true, :elasticsearch => true, :broken => true, :export_cypher => true
-end
-
diff --git a/spec/util/accessors_spec.rb b/spec/util/accessors_spec.rb
index daca1b3339b..f837b23e6ec 100644
--- a/spec/util/accessors_spec.rb
+++ b/spec/util/accessors_spec.rb
@@ -1,6 +1,6 @@
 # encoding: utf-8
 
-require "spec_helper"
+require "logstash/devutils/rspec/spec_helper"
 require "logstash/util/accessors"
 
 describe LogStash::Util::Accessors, :if => true do
diff --git a/spec/util/charset_spec.rb b/spec/util/charset_spec.rb
index 8514e1a5755..97d85494bf7 100644
--- a/spec/util/charset_spec.rb
+++ b/spec/util/charset_spec.rb
@@ -1,6 +1,6 @@
 # encoding: utf-8
 
-require "spec_helper"
+require "logstash/devutils/rspec/spec_helper"
 require "logstash/util/charset"
 
 describe LogStash::Util::Charset do
diff --git a/spec/util/fieldeval_spec.rb b/spec/util/fieldeval_spec.rb
index 963ad3925f5..1b8d5304211 100644
--- a/spec/util/fieldeval_spec.rb
+++ b/spec/util/fieldeval_spec.rb
@@ -1,4 +1,4 @@
-require "spec_helper"
+require "logstash/devutils/rspec/spec_helper"
 require "logstash/util/fieldreference"
 
 describe LogStash::Util::FieldReference, :if => true do
