diff --git a/logstash-core/src/test/java/org/logstash/log/DefaultDeprecationLoggerTest.java b/logstash-core/src/test/java/org/logstash/log/DefaultDeprecationLoggerTest.java
index 8388bd8cb9f..7353eac415d 100644
--- a/logstash-core/src/test/java/org/logstash/log/DefaultDeprecationLoggerTest.java
+++ b/logstash-core/src/test/java/org/logstash/log/DefaultDeprecationLoggerTest.java
@@ -40,6 +40,7 @@ public void setUp() throws IOException {
 
     @After
     public void tearDown() throws IOException {
+        LogManager.shutdown();
         LogTestUtils.deleteLogFile("logstash-deprecation.log");
         LogTestUtils.reloadLogConfiguration();
     }
diff --git a/logstash-core/src/test/java/org/logstash/log/LogTestUtils.java b/logstash-core/src/test/java/org/logstash/log/LogTestUtils.java
index f7bd39fbbc3..2ada1992b26 100644
--- a/logstash-core/src/test/java/org/logstash/log/LogTestUtils.java
+++ b/logstash-core/src/test/java/org/logstash/log/LogTestUtils.java
@@ -3,12 +3,12 @@
 import org.apache.logging.log4j.core.LoggerContext;
 
 import java.io.IOException;
-import java.nio.file.FileSystemException;
 import java.nio.file.FileSystems;
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.util.concurrent.TimeUnit;
 import java.util.stream.Collectors;
+import java.util.stream.Stream;
 
 import static org.junit.Assert.assertTrue;
 
@@ -19,7 +19,9 @@ static String loadLogFileContent(String logfileName) throws IOException {
                 .getPath(System.getProperty("user.dir"), System.getProperty("ls.logs"), logfileName);
 
         assertTrue("Log [" + path.toString() + "] file MUST exists", Files.exists(path));
-        return Files.lines(path).collect(Collectors.joining());
+        try (Stream<String> lines = Files.lines(path)) {
+            return lines.collect(Collectors.joining());
+        }
     }
 
     static void reloadLogConfiguration() {
@@ -30,31 +32,6 @@ static void reloadLogConfiguration() {
     static void deleteLogFile(String logfileName) throws IOException {
         Path path = FileSystems.getDefault()
                 .getPath(System.getProperty("user.dir"), System.getProperty("ls.logs"), logfileName);
-        pollingDelete(path, 5, TimeUnit.SECONDS);
-    }
-
-    static void pollingDelete(Path path, int sleep, TimeUnit timeUnit) throws IOException {
-        final int maxRetries = 5;
-        int retries = 0;
-        do {
-            try {
-                Files.deleteIfExists(path);
-                break;
-            } catch (FileSystemException fsex) {
-                System.out.println("FS access error while deleting, " + fsex.getReason() + " deleting: " + fsex.getOtherFile());
-            }
-
-            try {
-                Thread.sleep(timeUnit.toMillis(sleep));
-            } catch (InterruptedException e) {
-                // follows up
-                Thread.currentThread().interrupt();
-                break;
-            }
-
-            retries++;
-        } while (retries < maxRetries);
-
-        assertTrue("Exhausted 5 retries to delete the file: " + path,retries < maxRetries);
+        Files.deleteIfExists(path);
     }
 }
