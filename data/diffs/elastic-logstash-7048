diff --git a/logstash-core/lib/logstash/agent.rb b/logstash-core/lib/logstash/agent.rb
index 85becff57c8..68d574ef79c 100644
--- a/logstash-core/lib/logstash/agent.rb
+++ b/logstash-core/lib/logstash/agent.rb
@@ -48,7 +48,7 @@ def initialize(settings = LogStash::SETTINGS, source_loader = nil)
 
     # This is for backward compatibility in the tests
     if source_loader.nil?
-      @source_loader = LogStash::Config::SOURCE_LOADER
+      @source_loader = LogStash::Config::SourceLoader.new
       @source_loader.add_source(LogStash::Config::Source::Local.new(@settings))
     else
       @source_loader = source_loader
diff --git a/logstash-core/lib/logstash/config/source_loader.rb b/logstash-core/lib/logstash/config/source_loader.rb
index e77b1e639bb..84983c2bd52 100644
--- a/logstash-core/lib/logstash/config/source_loader.rb
+++ b/logstash-core/lib/logstash/config/source_loader.rb
@@ -120,6 +120,4 @@ def find_duplicate_ids(pipeline_configs)
         .select { |group, pipeline_configs| pipeline_configs.size > 1 }
     end
   end
-
-  SOURCE_LOADER = SourceLoader.new
 end end
diff --git a/logstash-core/lib/logstash/runner.rb b/logstash-core/lib/logstash/runner.rb
index 99d539c10fc..9f073e30696 100644
--- a/logstash-core/lib/logstash/runner.rb
+++ b/logstash-core/lib/logstash/runner.rb
@@ -165,7 +165,7 @@ class LogStash::Runner < Clamp::StrictCommand
     I18n.t("logstash.runner.flag.quiet"),
     :new_flag => "log.level", :new_value => "error"
 
-  attr_reader :agent, :settings
+  attr_reader :agent, :settings, :source_loader
   attr_accessor :bootstrap_checks
 
   def initialize(*args)
@@ -173,7 +173,8 @@ def initialize(*args)
     @bootstrap_checks = DEFAULT_BOOTSTRAP_CHECKS.dup
 
     # Default we check local sources: `-e`, `-f` and the logstash.yml options.
-    LogStash::Config::SOURCE_LOADER.add_source(LogStash::Config::Source::Local.new(@settings))
+    @source_loader = LogStash::Config::SourceLoader.new(@settings)
+    @source_loader.add_source(LogStash::Config::Source::Local.new(@settings))
 
     super(*args)
   end
@@ -266,7 +267,7 @@ def execute
 
     if setting("config.test_and_exit")
       begin
-        results = LogStash::Config::SOURCE_LOADER.fetch
+        results = @source_loader.fetch
 
         # TODO(ph): make it better for multiple pipeline
         if results.success?
@@ -289,7 +290,7 @@ def execute
     @data_path_lock = FileLockFactory.getDefault().obtainLock(setting("path.data"), ".lock");
 
     @dispatcher.fire(:before_agent)
-    @agent = create_agent(@settings, LogStash::Config::SOURCE_LOADER)
+    @agent = create_agent(@settings, @source_loader)
     @dispatcher.fire(:after_agent)
 
     # enable sigint/sigterm before starting the agent
diff --git a/logstash-core/spec/logstash/runner_spec.rb b/logstash-core/spec/logstash/runner_spec.rb
index b105510c7aa..6c9946990bc 100644
--- a/logstash-core/spec/logstash/runner_spec.rb
+++ b/logstash-core/spec/logstash/runner_spec.rb
@@ -143,10 +143,6 @@ def run(args); end
   end
 
   describe "--config.test_and_exit" do
-    before do
-      # Reset the source in a clean state before any asserts
-      LogStash::Config::SOURCE_LOADER.configure_sources([])
-    end
     subject { LogStash::Runner.new("") }
     let(:args) { ["-t", "-e", pipeline_string] }
 
