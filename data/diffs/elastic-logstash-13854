diff --git a/logstash-core/lib/logstash/java_pipeline.rb b/logstash-core/lib/logstash/java_pipeline.rb
index 220a54d1a1a..3ca76e52074 100644
--- a/logstash-core/lib/logstash/java_pipeline.rb
+++ b/logstash-core/lib/logstash/java_pipeline.rb
@@ -548,6 +548,10 @@ def inspect
     }
   end
 
+  def shutdown_requested?
+    @shutdownRequested.get
+  end
+
   private
 
   def close_plugin_and_ignore(plugin)
diff --git a/logstash-core/lib/logstash/outputs/base.rb b/logstash-core/lib/logstash/outputs/base.rb
index ea07f7c2e16..231d19f1e52 100644
--- a/logstash-core/lib/logstash/outputs/base.rb
+++ b/logstash-core/lib/logstash/outputs/base.rb
@@ -135,6 +135,10 @@ def execution_context=(context)
     context
   end
 
+  def pipeline_shutdown_requested?
+    execution_context.pipeline&.shutdown_requested?
+  end
+
   private
   def output?(event)
     # TODO: noop for now, remove this once we delete this call from all plugins
diff --git a/logstash-core/src/main/java/org/logstash/execution/JavaBasePipelineExt.java b/logstash-core/src/main/java/org/logstash/execution/JavaBasePipelineExt.java
index f860aebbf63..a4fd279b91a 100644
--- a/logstash-core/src/main/java/org/logstash/execution/JavaBasePipelineExt.java
+++ b/logstash-core/src/main/java/org/logstash/execution/JavaBasePipelineExt.java
@@ -142,6 +142,11 @@ public RubyArray nonReloadablePlugins(final ThreadContext context) {
         return result;
     }
 
+    @JRubyMethod(name = "shutdown_requested?")
+    public IRubyObject isShutdownRequested(final ThreadContext context) {
+        throw new IllegalStateException("Pipeline implementation does not provide `shutdown_requested?`, which is a Logstash internal error.");
+    }
+
     public QueueWriter getQueueWriter(final String inputName) {
         return new JRubyWrappedWriteClientExt(RubyUtil.RUBY, RubyUtil.WRAPPED_WRITE_CLIENT_CLASS)
             .initialize(
