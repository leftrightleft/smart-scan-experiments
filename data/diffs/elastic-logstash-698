diff --git a/lib/logstash/codecs/plain.rb b/lib/logstash/codecs/plain.rb
index b4498603799..3dc185e3212 100644
--- a/lib/logstash/codecs/plain.rb
+++ b/lib/logstash/codecs/plain.rb
@@ -32,6 +32,9 @@ def decode(data)
       # into UTF-8 so we can use it with JSON, etc.
       data = data.encode("UTF-8", :invalid => :replace, :undef => :replace)
     end
+    
+    data = data.chars.select{|i| i.valid_encoding?}.join
+    
     yield LogStash::Event.new({"message" => data})
   end # def decode
 
diff --git a/lib/logstash/filters/multiline.rb b/lib/logstash/filters/multiline.rb
index 1ce318f030d..80e1aa46252 100644
--- a/lib/logstash/filters/multiline.rb
+++ b/lib/logstash/filters/multiline.rb
@@ -222,6 +222,8 @@ def filter(event)
       event["@timestamp"] = event["@timestamp"].first if event["@timestamp"].is_a?(Array)
       filter_matched(event) if match
     end
+  rescue StandardError => e
+    @logger.warn("Multiline regexp threw exception", :exception => e.message)
   end # def filter
 
   # Flush any pending messages. This is generally used for unit testing only.
diff --git a/spec/codecs/plain.rb b/spec/codecs/plain.rb
index 6183910109c..8f9a52da0a3 100644
--- a/spec/codecs/plain.rb
+++ b/spec/codecs/plain.rb
@@ -1,6 +1,7 @@
 require "logstash/codecs/plain"
 require "logstash/event"
 require "insist"
+require "uri"
 
 describe LogStash::Codecs::Plain do
   context "#decode" do
@@ -9,6 +10,12 @@
         insist { event.is_a? LogStash::Event }
       end
     end
+    
+    it "should handle invalid UTF8 messages" do
+      subject.decode(URI.decode("hello%7F%FF%FF%FF")) do |event|
+        insist { event["message"] } == "hello\u007F"
+      end
+    end
   end
 
   context "#encode" do
