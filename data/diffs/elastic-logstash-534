diff --git a/lib/logstash/outputs/elasticsearch_http.rb b/lib/logstash/outputs/elasticsearch_http.rb
index 733005d85b1..e5a5f3d7b51 100644
--- a/lib/logstash/outputs/elasticsearch_http.rb
+++ b/lib/logstash/outputs/elasticsearch_http.rb
@@ -23,6 +23,9 @@ class LogStash::Outputs::ElasticSearchHTTP < LogStash::Outputs::Base
   # The index type to write events to. Generally you should try to write only
   # similar events to the same 'type'. String expansion '%{foo}' works here.
   config :index_type, :validate => :string
+  
+  # The parent of the event. String expansion '%{foo}' works here.
+  config :parent, :validate => :string, :default => nil
 
   # The hostname or ip address to reach your elasticsearch server.
   config :host, :validate => :string
@@ -70,7 +73,8 @@ def flush(events, teardown=false)
         type = event.sprintf(@index_type)
       end
       header = { "index" => { "_index" => index, "_type" => type } }
-      header["index"]["_id"] = event.sprintf(@document_id) if !@document_id.nil?
+      header["index"]["_id"] = event.sprintf(@document_id) unless @document_id.nil?
+	  header["index"]["parent"] = event.sprintf(@parent) unless @parent.nil?
 
       [ header, event ]
     end.flatten.collect(&:to_json).map { |e| "#{e}\n" }
diff --git a/lib/logstash/outputs/elasticsearch_river.rb b/lib/logstash/outputs/elasticsearch_river.rb
index 08f0f6c49b8..d3c9e74bf34 100644
--- a/lib/logstash/outputs/elasticsearch_river.rb
+++ b/lib/logstash/outputs/elasticsearch_river.rb
@@ -29,6 +29,9 @@ class LogStash::Outputs::ElasticSearchRiver < LogStash::Outputs::Base
   # The index type to write events to. Generally you should try to write only
   # similar events to the same 'type'. String expansion '%{foo}' works here.
   config :index_type, :validate => :string, :default => "%{@type}"
+  
+  # The parent of the event. String expansion '%{foo}' works here.
+  config :parent, :validate => :string, :default => nil
 
   # The name/address of an ElasticSearch host to use for river creation
   config :es_host, :validate => :string, :required => true
@@ -203,10 +206,18 @@ def receive(event)
     # River events have a format of
     # "action\ndata\n"
     # where 'action' is index or delete, data is the data to index.
-    header = { "index" => { "_index" => event.sprintf(@index), "_type" => event.sprintf(@index_type) } }
-    if !@document_id.nil?
-      header["index"]["_id"] = event.sprintf(@document_id)
-    end
+
+	index = event.sprintf(@index)
+
+	# Set the 'type' value for the index.
+	if @index_type.nil?
+		type =  event["type"] || "logs"
+	else
+		type = event.sprintf(@index_type)
+	end
+	header = { "index" => { "_index" => index, "_type" => type } }
+	header["index"]["_id"] = event.sprintf(@document_id) unless @document_id.nil?
+	header["index"]["parent"] = event.sprintf(@parent) unless @parent.nil?
 
     @mq.receive_raw(header.to_json + "\n" + event.to_json + "\n")
   end # def receive
