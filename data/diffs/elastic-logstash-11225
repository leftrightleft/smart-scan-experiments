diff --git a/config/jvm.options b/config/jvm.options
index cebdf798486..2d743c8b32b 100644
--- a/config/jvm.options
+++ b/config/jvm.options
@@ -79,6 +79,3 @@
 
 # Copy the logging context from parent threads to children
 -Dlog4j2.isThreadContextMapInheritable=true
-
-# Avoid Nashorn deprecation logs in JDK > 11
--Dnashorn.args=--no-deprecation-warning
\ No newline at end of file
diff --git a/logstash-core/src/main/java/org/logstash/Logstash.java b/logstash-core/src/main/java/org/logstash/Logstash.java
index 98f5c525abe..cf156c8568b 100644
--- a/logstash-core/src/main/java/org/logstash/Logstash.java
+++ b/logstash-core/src/main/java/org/logstash/Logstash.java
@@ -38,6 +38,8 @@ public static void main(final String... args) {
                     "LS_HOME environment variable must be set. This is likely a bug that should be reported."
             );
         }
+        configureNashornDeprecationSwitchForJavaAbove11();
+
         final Path home = Paths.get(lsHome).toAbsolutePath();
         try (
                 final Logstash logstash = new Logstash(home, args, System.out, System.err, System.in)
@@ -61,6 +63,15 @@ public static void main(final String... args) {
         System.exit(0);
     }
 
+    private static void configureNashornDeprecationSwitchForJavaAbove11() {
+        final String javaVersion = System.getProperty("java.version");
+        // match version 1.x.y, 9.x.y and 10.x.y
+        if (!javaVersion.matches("^1\\.\\d\\..*") && !javaVersion.matches("^(9|10)\\.\\d\\..*")) {
+            // Avoid Nashorn deprecation logs in JDK >= 11
+            System.setProperty("nashorn.args", "--no-deprecation-warning");
+        }
+    }
+
     private static void handleCriticalError(Throwable t, String[] errorMessage) {
         LOGGER.error(t);
         if (errorMessage != null) {
