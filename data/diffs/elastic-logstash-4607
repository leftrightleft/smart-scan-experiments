diff --git a/docs/static/releasenotes.asciidoc b/docs/static/releasenotes.asciidoc
index 899b9cc9a75..b030f42bbe1 100644
--- a/docs/static/releasenotes.asciidoc
+++ b/docs/static/releasenotes.asciidoc
@@ -1,61 +1,79 @@
 [[releasenotes]]
-== Logstash 2.1 Release Notes
+== Logstash 2.2 Release Notes
+
+* This release of Logstash includes support for offline plugin installation from storage media.
+* The `jruby-openssl` library version is now 0.9.13
+* The <<plugin-filters-multiline,multiline filter plugin>> is deprecated in favor of the multiline codec plugin. Support 
+for the multiline filter plugin will be removed completely in a future release of Logstash.
+* The `http_poller` plugin is now installed by default.
 
 [float]
 == General
 
-* {lsissue}2376[Issue 2376]: Added ability to install and upgrade Logstash plugins without requiring internet
-connectivity.
-* {lsissue}3576[Issue 3576]: Support alternate or private Ruby gems server to install and update plugins.
-* {lsissue}3451[Issue 3451]: Added ability to reliably shutdown Logstash when there is a stall in event processing. This
-option can be enabled by passing `--allow-unsafe-shutdown` flag while starting Logstash. Please be aware that any in-
-flight events will be lost when shutdown happens.
-* {lsissue}4222[Issue 4222]: Fixed a memory leak which could be triggered when events having a date were serialized to
-string.
-* Added JDBC input to default package.
-* {lsissue}3243[Issue 3243]: Adding `--debug` to `--configtest` now shows the configuration in blocks annotated by source
-config file. Very useful when using multiple config files in a directory.
-* {lsissue}4130[Issue 4130]: Reset default worker threads to 1 when using non thread-safe filters like multiline.
-* Fixed file permissions for the `logrotate` configuration file.
-* {lsissue}3861[Issue 3861]: Changed the default heap size from 500MB to 1GB.
-* {lsissue}3645[Issue 3645]: Fixed config check option when starting Logstash through init scripts.
+* {lsissue}3693[Issue 3693]: The pipeline has been substantially reëngineered, adding new <<command-line-flags,command 
+line flags>>. Filter and output stages are now a single stage that consumes messages from an in-memory queue. This change 
+* {lsissue}4291[Issue 4291]: Logstash can be launched from a symbolic link.
+* {lsissue}4321[Issue 4321]: Fixes an issue with the `--configtest` switch and the SysV init script.
 
 [float]
 == Input Plugins
 
-[float]
-=== Twitter
-* https://github.com/logstash-plugins/logstash-input-twitter/issues/21[Issue 21]: Added an option to fetch data from the
-sample Twitter streaming endpoint.
-* https://github.com/logstash-plugins/logstash-input-twitter/issues/22[Issue 22]: Added hashtags, symbols and
-user_mentions as data for the non extended tweet event.
-* https://github.com/logstash-plugins/logstash-input-twitter/issues/20[Issue 20]: Added an option to filter per location
-and language.
-* https://github.com/logstash-plugins/logstash-input-twitter/issues/11[Issue 11]: Added an option to stream data from a
-list of users.
+*`file`*:
+* https://github.com/logstash-plugins/logstash-input-file/issues/81[Issue 81]: Adds the `close_older` configuration option 
+to close files that remain unmodified for longer than the specified timespan in seconds.
+* https://github.com/logstash-plugins/logstash-input-file/issues/81[Issue 81]: Adds the `ignore_older` configuration 
+option to ignore the contents of files that have remained unmodified for longer than the specified timespan in seconds.
 
-[float]
-=== Beats
-* https://github.com/logstash-plugins/logstash-input-beats/issues/10[Issue 10]: Properly handle multiline events from
-multiple sources, originating from Filebeat.
+*'jdbc`*:
+* https://github.com/logstash-plugins/logstash-input-jdbc/issues/57[Issue 57]: Allows tracking by a column value rather 
+than by last run time. This is a breaking change, as users may be required to change from using `sql_last_start` to use 
+`sql_last_value` in their queries. Time-based queries require no other changes.
+* https://github.com/logstash-plugins/logstash-input-jdbc/issues/44[Issue 44]: Adds an option to control lowercasing of
+column names.
 
-[float]
-=== File
-* https://github.com/logstash-plugins/logstash-input-file/issues/44[Issue 44]: Properly handle multiline events from
-multiple sources.
+*`beats`*:
+* https://github.com/logstash-plugins/logstash-input-beats/issues/14[Issue 14]: Refactored beats input to fix thread 
+synchronization issues under high data volume.
+
+*`kafka`*:
+* https://github.com/logstash-plugins/logstash-input-kafka/issues/59[Issue 59]: Fixes a CPU load issue when no new
+messages are available in the Kafka broker.
+
+*`http`*:
+* https://github.com/logstash-plugins/logstash-input-http/issues/33[Issue 33]: Adds support for compressed and gzip POST 
+requests.
 
 [float]
-=== Eventlog
-* https://github.com/logstash-plugins/logstash-input-eventlog/issues/11[Issue 11]: Change the underlying library to
-capture Event Logs from Windows more reliably.
+== Filter Plugins
+
+*`multiline`*: This filter is now deprecated. Use the multiline codec plugin instead.
+
+*`date`*:
+* https://github.com/logstash-plugins/logstash-filter-date/issues/23[Issue 23]: The `timezone` setting now supports the 
+`sprintf` format.
+* https://github.com/logstash-plugins/logstash-filter-date/issues/33[Issue 33]: Improves handling for new year rollovers 
+when the year is not present in the time format. When the local timestamp is December and the event time is January, the 
+year is set to the following year. When the local time is January and the event time is December, the year is set to the 
+previous year.
 
 [float]
-== Output
+== Output Plugins
+
+*`elasticsearch`*:
+* https://github.com/elastic/logstash/issues/4433[Issue 4433]: Node protocol is now discouraged and will not be actively 
+maintained. Use the `http` or `transport` protocols instead.
+* https://github.com/logstash-plugins/logstash-output-elasticsearch/pull/235[Issue 235]: Adds scripted update support.    
+* https://github.com/logstash-plugins/logstash-output-elasticsearch/issues/321[Issue 321]: Changes retry behavior. "Too 
+busy" and "service unavailable" errors from ES are retried indefinitely. Conflict errors are neve retried.
+
+*`file`*:
+* https://github.com/logstash-plugins/logstash-output-file/issues/18[Issue 18] Adds configuration setting to set directory
+and file permission.
 
 [float]
-=== Elasticsearch
-* Improved the default template to use doc_values wherever possible.
-* Improved the default template to disable fielddata on analyzed string fields.
-* https://github.com/logstash-plugins/logstash-output-elasticsearch/issues/260[Issue 260]: Added New setting: timeout.
-This lets you control the behavior of a slow/stuck request to Elasticsearch that could be, for example, caused by network,
-firewall, or load balancer issues.
+== Codec Plugins
+
+*`multiline`*:
+* https://github.com/logstash-plugins/logstash-codec-multiline/pull/18[Issue 18]: Adds the `auto_flush` configuration 
+option, with no default. Auto flushes are not performed if the value of `auto_flush` is not `true`. This feature flushes 
+events buffered as part of a multiline event when used with the `file` input plugin, for example.
diff --git a/docs/static/submitting-a-plugin.asciidoc b/docs/static/submitting-a-plugin.asciidoc
new file mode 100644
index 00000000000..c43643387d0
--- /dev/null
+++ b/docs/static/submitting-a-plugin.asciidoc
@@ -0,0 +1,105 @@
+[[submitting-plugin]]
+=== Submitting your plugin to RubyGems.org and the logstash-plugins repository
+
+Logstash uses http://rubygems.org[RubyGems.org] as its repository for all plugin
+artifacts. Once you have developed your new plugin, you can make it available to
+Logstash users by simply publishing it to RubyGems.org.
+
+==== Licensing
+Logstash and all its plugins are licensed under
+https://github.com/elasticsearch/logstash/blob/master/LICENSE[Apache License, version 2 ("ALv2")].
+If you make your plugin publicly available via http://rubygems.org[RubyGems.org],
+please make sure to have this line in your gemspec:
+
+* `s.licenses = ['Apache License (2.0)']`
+
+==== Publishing to http://rubygems.org[RubyGems.org]
+
+To begin, you’ll need an account on RubyGems.org
+
+* https://rubygems.org/sign_up[Sign-up for a RubyGems account].
+
+After creating an account,
+http://guides.rubygems.org/rubygems-org-api/#api-authorization[obtain] an API
+key from RubyGems.org. By default, RubyGems uses the file `~/.gem/credentials`
+to store your API key. These credentials will be used to publish the gem.
+Replace `username` and `password` with the credentials you created at
+RubyGems.org:
+
+[source,sh]
+----------------------------------
+curl -u username:password https://rubygems.org/api/v1/api_key.yaml > ~/.gem/credentials
+chmod 0600 ~/.gem/credentials
+----------------------------------
+
+Before proceeding, make sure you have the right version in your gemspec file
+and commit your changes.
+
+* `s.version = '0.1.0'`
+
+To publish version 0.1.0 of your new logstash gem:
+
+[source,sh]
+----------------------------------
+bundle install
+bundle exec rake vendor
+bundle exec rspec
+bundle exec rake publish_gem
+----------------------------------
+
+[NOTE]
+========
+Executing `rake publish_gem`:
+
+. Reads the version from the gemspec file (`s.version = '0.1.0'`)
+. Checks in your local repository if a tag exists for that version. If the tag
+already exists, it aborts the process. Otherwise, it creates a new version tag
+in your local repository.
+. Builds the gem
+. Publishes the gem to RubyGems.org
+========
+
+That's it! Your plugin is published! Logstash users can now install your plugin
+by running:
+
+[source,sh]
+[subs="attributes"]
+----------------------------------
+bin/plugin install logstash-{plugintype}-mypluginname
+----------------------------------
+
+==== Contributing your source code to https://github.com/logstash-plugins[logstash-plugins]
+
+It is not required to contribute your source code to
+https://github.com/logstash-plugins[logstash-plugins] github organization, but
+we always welcome new plugins!
+
+==== Benefits
+
+Some of the many benefits of having your plugin in the `logstash-plugins`
+repository are:
+
+* **Discovery** Your plugin will appear in the http://www.elasticsearch.org/guide/en/logstash/current/index.html[Logstash Reference],
+where Logstash users look first for plugins and documentation.
+* **Documentation** Your plugin documentation will automatically be added to the
+ http://www.elasticsearch.org/guide/en/logstash/current/index.html[Logstash Reference].
+* **Testing** With our testing infrastructure, your plugin will be continuously
+tested against current and future releases of Logstash.  As a result, users will
+have the assurance that if incompatibilities arise, they will be quickly
+discovered and corrected.
+
+==== Acceptance Guidelines
+
+* **Code Review** Your plugin must be reviewed by members of the community for
+coherence, quality, readability, stability and security.
+* **Tests** Your plugin must contain tests to be accepted.  These tests are also
+subject to code review for scope and completeness.  It's ok if you don't know
+how to write tests -- we will guide you. We are working on publishing a guide to
+creating tests for Logstash which will make it easier.  In the meantime, you can
+refer to http://betterspecs.org/ for examples.
+
+To begin migrating your plugin to logstash-plugins, simply create a new
+https://github.com/elasticsearch/logstash/issues[issue] in
+the Logstash repository. When the acceptance guidelines are completed, we will
+facilitate the move to the logstash-plugins organization using the recommended
+https://help.github.com/articles/transferring-a-repository/#transferring-from-a-user-to-an-organization[github process].
