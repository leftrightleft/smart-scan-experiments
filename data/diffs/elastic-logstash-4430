diff --git a/logstash-core/lib/logstash/util/worker_threads_default_printer.rb b/logstash-core/lib/logstash/util/worker_threads_default_printer.rb
index a4628552f7b..43869162865 100644
--- a/logstash-core/lib/logstash/util/worker_threads_default_printer.rb
+++ b/logstash-core/lib/logstash/util/worker_threads_default_printer.rb
@@ -6,8 +6,8 @@
 module LogStash module Util class WorkerThreadsDefaultPrinter
 
   def initialize(settings)
-    @setting = settings.fetch('pipeline-workers', 0)
-    @default = settings.fetch('default-pipeline-workers', 0)
+    @setting = settings.fetch(:pipeline_workers, 0)
+    @default = settings.fetch(:default_pipeline_workers, 0)
   end
 
   def visit(collector)
diff --git a/logstash-core/spec/logstash/util/defaults_printer_spec.rb b/logstash-core/spec/logstash/util/defaults_printer_spec.rb
index 3ec4a8517a8..b3f0576a3a9 100644
--- a/logstash-core/spec/logstash/util/defaults_printer_spec.rb
+++ b/logstash-core/spec/logstash/util/defaults_printer_spec.rb
@@ -25,7 +25,7 @@
 
     context 'when the settings hash has content' do
       let(:worker_queue) { 42 }
-      let(:settings) { {'pipeline-workers' => workers} }
+      let(:settings) { {:pipeline_workers => workers} }
       it_behaves_like "a defaults printer"
     end
   end
@@ -42,7 +42,7 @@
 
     context 'when the settings hash has content' do
       let(:workers) { 13 }
-      let(:settings) { {'pipeline-workers' => workers} }
+      let(:settings) { {:pipeline_workers => workers} }
 
       it_behaves_like "a defaults printer"
     end
diff --git a/logstash-core/spec/logstash/util/worker_threads_default_printer_spec.rb b/logstash-core/spec/logstash/util/worker_threads_default_printer_spec.rb
index 410d8c9fbf7..1842b4373ad 100644
--- a/logstash-core/spec/logstash/util/worker_threads_default_printer_spec.rb
+++ b/logstash-core/spec/logstash/util/worker_threads_default_printer_spec.rb
@@ -19,7 +19,7 @@
     end
 
     context 'when the settings hash has both user and default content' do
-      let(:settings) { {'pipeline-workers' => 42, 'default-pipeline-workers' => 5} }
+      let(:settings) { {:pipeline_workers => 42, :default_pipeline_workers => 5} }
 
       it 'adds two strings' do
         expect(collector).to eq(["User set pipeline workers: 42", "Default pipeline workers: 5"])
@@ -27,7 +27,7 @@
     end
 
     context 'when the settings hash has only user content' do
-      let(:settings) { {'pipeline-workers' => 42} }
+      let(:settings) { {:pipeline_workers => 42} }
 
       it 'adds a string with user set pipeline workers' do
         expect(collector.first).to eq("User set pipeline workers: 42")
@@ -35,7 +35,7 @@
     end
 
     context 'when the settings hash has only default content' do
-      let(:settings) { {'default-pipeline-workers' => 5} }
+      let(:settings) { {:default_pipeline_workers => 5} }
 
       it 'adds a string with default pipeline workers' do
         expect(collector.first).to eq("Default pipeline workers: 5")
