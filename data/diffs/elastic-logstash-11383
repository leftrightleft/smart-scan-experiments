diff --git a/logstash-core/lib/logstash/api/commands/default_metadata.rb b/logstash-core/lib/logstash/api/commands/default_metadata.rb
index 4dbea76c59a..06156ca5f41 100644
--- a/logstash-core/lib/logstash/api/commands/default_metadata.rb
+++ b/logstash-core/lib/logstash/api/commands/default_metadata.rb
@@ -19,8 +19,13 @@ def all
              :workers => LogStash::SETTINGS.get("pipeline.workers"),
              :batch_size => LogStash::SETTINGS.get("pipeline.batch.size"),
              :batch_delay => LogStash::SETTINGS.get("pipeline.batch.delay"),
-           }
-           }
+           },
+          }.merge(LogStash::SETTINGS.get("xpack.monitoring.enabled") ?
+                  {:monitoring => {
+                    :hosts => LogStash::SETTINGS.get("xpack.monitoring.elasticsearch.hosts"),
+                    :username => LogStash::SETTINGS.get("xpack.monitoring.elasticsearch.username")
+                    }.merge(LogStash::SETTINGS.set?("xpack.monitoring.cluster_uuid") ?
+                      {:cluster_uuid => LogStash::SETTINGS.get("xpack.monitoring.cluster_uuid")} : {})} : {})
         end
 
         def host
diff --git a/logstash-core/spec/logstash/api/commands/default_metadata_spec.rb b/logstash-core/spec/logstash/api/commands/default_metadata_spec.rb
index ee5157ffbd5..f6fb6dd85cc 100644
--- a/logstash-core/spec/logstash/api/commands/default_metadata_spec.rb
+++ b/logstash-core/spec/logstash/api/commands/default_metadata_spec.rb
@@ -12,9 +12,27 @@
 
   let(:report_class) { described_class }
 
+  after :each do
+    LogStash::SETTINGS.register(LogStash::Setting::Boolean.new("xpack.monitoring.enabled", false)) unless LogStash::SETTINGS.registered?("xpack.monitoring.enabled")
+    LogStash::SETTINGS.reset
+  end
+
   describe "#plugins_stats_report" do
     let(:report_method) { :all }
     # Enforce just the structure
+    it "check monitoring" do
+      LogStash::SETTINGS.set_value("xpack.monitoring.enabled", true)
+      expect(report.keys).to include(
+        :monitoring
+        )
+    end
+    it "check monitoring does not appear when not enabled" do
+      LogStash::SETTINGS.set_value("xpack.monitoring.enabled", false)
+      expect(report.keys).not_to include(
+        :monitoring
+        )
+    end
+
     it "check keys" do
       expect(report.keys).to include(
         :host,
diff --git a/x-pack/lib/monitoring/monitoring.rb b/x-pack/lib/monitoring/monitoring.rb
index 15e0cef7f54..87353fac161 100644
--- a/x-pack/lib/monitoring/monitoring.rb
+++ b/x-pack/lib/monitoring/monitoring.rb
@@ -179,6 +179,7 @@ def additionals_settings(settings)
       settings.register(LogStash::Setting::NullableString.new("xpack.monitoring.elasticsearch.ssl.truststore.password"))
       settings.register(LogStash::Setting::NullableString.new("xpack.monitoring.elasticsearch.ssl.keystore.path"))
       settings.register(LogStash::Setting::NullableString.new("xpack.monitoring.elasticsearch.ssl.keystore.password"))
+      settings.register(LogStash::Setting::NullableString.new("xpack.monitoring.cluster_uuid"))
       settings.register(LogStash::Setting::String.new("xpack.monitoring.elasticsearch.ssl.verification_mode", "certificate", true, ["none", "certificate"]))
       settings.register(LogStash::Setting::Boolean.new("xpack.monitoring.elasticsearch.sniffing", false))
       settings.register(LogStash::Setting::Boolean.new("xpack.monitoring.collection.pipeline.details.enabled", true))
