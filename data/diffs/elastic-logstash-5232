diff --git a/ci/ci_acceptance.sh b/ci/ci_acceptance.sh
index b85e26fb3cd..7117cb8025c 100755
--- a/ci/ci_acceptance.sh
+++ b/ci/ci_acceptance.sh
@@ -8,7 +8,7 @@ export JRUBY_OPTS="-J-Xmx1g"
 
 SELECTED_TEST_SUITE=$1
 
-if [[ $SELECTED_TEST_SUITE == $"centos" ]]; then
+if [[ $SELECTED_TEST_SUITE == $"redhat" ]]; then
   echo "Generating the RPM, make sure you start with a clean environment before generating other packages."
   rake artifact:rpm
   echo "Acceptance: Installing dependencies"
@@ -16,9 +16,10 @@ if [[ $SELECTED_TEST_SUITE == $"centos" ]]; then
   bundle install
 
   echo "Acceptance: Running the tests"
-  bundle exec rake test:setup
-  bundle exec rake test:ssh_config
-  bundle exec rake test:acceptance:centos
+  bundle exec rake qa:vm:setup["redhat"]
+  bundle exec rake qa:vm:ssh_config
+  bundle exec rake qa:acceptance:redhat
+  bundle exec rake qa:vm:halt["redhat"]
 elif [[ $SELECTED_TEST_SUITE == $"debian" ]]; then
   echo "Generating the DEB, make sure you start with a clean environment before generating other packages."
   rake artifact:deb
@@ -27,9 +28,10 @@ elif [[ $SELECTED_TEST_SUITE == $"debian" ]]; then
   bundle install
 
   echo "Acceptance: Running the tests"
-  bundle exec rake test:setup
-  bundle exec rake test:ssh_config
-  bundle exec rake test:acceptance:debian
+  bundle exec rake qa:vm:setup["debian"]
+  bundle exec rake qa:vm:ssh_config
+  bundle exec rake qa:acceptance:debian
+  bundle exec rake qa:vm:halt["debian"]
 elif [[ $SELECTED_TEST_SUITE == $"all" ]]; then
   echo "Building Logstash artifacts"
   rake artifact:all
@@ -39,8 +41,9 @@ elif [[ $SELECTED_TEST_SUITE == $"all" ]]; then
   bundle install
 
   echo "Acceptance: Running the tests"
-  bundle exec rake test:setup
-  bundle exec rake test:ssh_config
-  bundle exec rake test:acceptance:all
+  bundle exec rake qa:vm:setup
+  bundle exec rake qa:vm:ssh_config
+  bundle exec rake qa:acceptance:all
+  bundle exec rake qa:vm:halt
   cd ..
 fi
diff --git a/qa/Rakefile b/qa/Rakefile
index 3893a7deb51..fdaf91556fc 100644
--- a/qa/Rakefile
+++ b/qa/Rakefile
@@ -9,19 +9,41 @@ platforms = PlatformConfig.new
 task :spec    => 'spec:all'
 task :default => :spec
 
-namespace :test do
-  desc "Generate a valid ssh-config"
-  task :ssh_config do
-    require "json"
-    raw_ssh_config    = LogStash::VagrantHelpers.fetch_config.stdout.split("\n");
-    parsed_ssh_config = LogStash::VagrantHelpers.parse(raw_ssh_config)
-    File.write(File.join(File.dirname(__FILE__), ".vm_ssh_config"), parsed_ssh_config.to_json)
-  end
+namespace :qa do
+
+  namespace :vm do
+
+    desc "Generate a valid ssh-config"
+    task :ssh_config do
+      require "json"
+      raw_ssh_config    = LogStash::VagrantHelpers.fetch_config.stdout.split("\n");
+      parsed_ssh_config = LogStash::VagrantHelpers.parse(raw_ssh_config)
+      File.write(".vm_ssh_config", parsed_ssh_config.to_json)
+    end
+
+    desc "Bootstrap all the VM's used for this tests"
+    task :setup, :platform do |t, args|
+      config   = PlatformConfig.new
+      machines = config.select_names_for(args[:platform])
 
-  desc "Bootstrap all the VM's used for this tests"
-  task "setup" do
-    puts "bootstraping all VM's defined in acceptance/Vagrantfile"
-    LogStash::VagrantHelpers.bootstrap
+      message  = "bootstraping all VM's defined in acceptance/Vagrantfile"
+      message  = "#{message} for #{args[:platform]}: #{machines}" if !args[:platform].nil?
+      puts message
+
+      LogStash::VagrantHelpers.destroy(machines)
+      LogStash::VagrantHelpers.bootstrap(machines)
+    end
+
+    desc "Halt all VM's involved in the acceptance test round"
+    task :halt, :platform do |t, args|
+      config   = PlatformConfig.new
+      machines = config.select_names_for(args[:platform])
+      message = "halting all VM's defined inside Vagrantfile"
+      message  = "#{message} for #{args[:platform]}: #{machines}" if !args[:platform].nil?
+      puts message
+
+      LogStash::VagrantHelpers.halt(machines)
+    end
   end
 
   namespace :acceptance do
diff --git a/qa/acceptance/spec/centos/lib/install_spec.rb b/qa/acceptance/spec/centos/lib/install_spec.rb
deleted file mode 100644
index 44353bb92cf..00000000000
--- a/qa/acceptance/spec/centos/lib/install_spec.rb
+++ /dev/null
@@ -1,33 +0,0 @@
-# encoding: utf-8
-require_relative "../spec_helper"
-require "logstash/version"
-
-describe "artifacts", :platform => :centos do
-
-  shared_examples "installable" do |host, name|
-
-    before(:each) do
-      install("/logstash-build/logstash-#{LOGSTASH_VERSION}.noarch.rpm", host)
-    end
-
-    it "is installed on #{name}" do
-      expect("logstash").to be_installed.on(host)
-    end
-
-    it "is running in #{name}" do
-      start_service("logstash", host)
-      expect("logstash").to be_running.on(host)
-      stop_service("logstash", host)
-    end
-
-    it "is removable on #{name}" do
-      uninstall("logstash", host)
-      expect("logstash").to be_removed.on(host)
-    end
-  end
-
-  config = ServiceTester.configuration
-  config.servers.each do |host|
-    it_behaves_like "installable", host, config.lookup[host]
-  end
-end
diff --git a/qa/acceptance/spec/debian/lib/install_spec.rb b/qa/acceptance/spec/debian/lib/install_spec.rb
deleted file mode 100644
index 6a91605c4d4..00000000000
--- a/qa/acceptance/spec/debian/lib/install_spec.rb
+++ /dev/null
@@ -1,33 +0,0 @@
-# encoding: utf-8
-require_relative "../spec_helper"
-require "logstash/version"
-
-describe "artifacts", :platform => :debian do
-
-  shared_examples "installable" do |host, name|
-
-    before(:each) do
-      install("/logstash-build/logstash-#{LOGSTASH_VERSION}_all.deb", host)
-    end
-
-    it "is installed on #{name}" do
-      expect("logstash").to be_installed.on(host)
-    end
-
-    it "is running on #{name}" do
-      start_service("logstash", host)
-      expect("logstash").to be_running.on(host)
-      stop_service("logstash", host)
-    end
-
-    it "is removable on #{name}" do
-      uninstall("logstash", host)
-      expect("logstash").to be_removed.on(host)
-    end
-  end
-
-  config = ServiceTester.configuration
-  config.servers.each do |host|
-    it_behaves_like "installable", host, config.lookup[host]
-  end
-end
diff --git a/qa/platform_config.rb b/qa/platform_config.rb
index 969b7dba23f..9827f6ea841 100644
--- a/qa/platform_config.rb
+++ b/qa/platform_config.rb
@@ -38,6 +38,10 @@ def filter_type(type_name)
     @platforms.select { |platform| platform.type == type_name }
   end
 
+  def select_names_for(platform=nil)
+    !platform.nil? ? filter_type(platform).map{ |p| p.name } : ""
+  end
+
   def types
     @platforms.collect(&:type).uniq.sort
   end
diff --git a/qa/vagrant-helpers.rb b/qa/vagrant-helpers.rb
index fcff83f9b0c..0c582e0042f 100644
--- a/qa/vagrant-helpers.rb
+++ b/qa/vagrant-helpers.rb
@@ -35,7 +35,7 @@ def self.run(cmd)
     # was not run successfully and will display the content of STDERR
     def self.run!(cmd)
       response = run(cmd)
-    
+
       unless response.success?
         raise CommandError, "CMD: #{cmd} STDERR: #{response.stderr}"
       end
@@ -45,8 +45,16 @@ def self.run!(cmd)
 
   class VagrantHelpers
 
-    def self.bootstrap
-      CommandExecutor.run!("vagrant up")
+    def self.halt(machines="")
+      CommandExecutor.run!("vagrant halt #{machines.join(' ')}")
+    end
+
+    def self.destroy(machines="")
+      CommandExecutor.run!("vagrant destroy --force #{machines.join(' ')}") 
+    end
+
+    def self.bootstrap(machines="")
+      CommandExecutor.run!("vagrant up #{machines.join(' ')}")
     end
 
     def self.fetch_config
