diff --git a/logstash-core/src/main/java/org/logstash/RubyUtil.java b/logstash-core/src/main/java/org/logstash/RubyUtil.java
index 5e6c1aaa701..d3420720514 100644
--- a/logstash-core/src/main/java/org/logstash/RubyUtil.java
+++ b/logstash-core/src/main/java/org/logstash/RubyUtil.java
@@ -47,13 +47,10 @@ public final class RubyUtil {
     static {
         RUBY = Ruby.getGlobalRuntime();
         LOGSTASH_MODULE = RUBY.getOrCreateModule("LogStash");
-        RUBY_TIMESTAMP_CLASS = setupLogstashClass("Timestamp", new ObjectAllocator() {
-            @Override
-            public JrubyTimestampExtLibrary.RubyTimestamp allocate(final Ruby runtime,
-                final RubyClass rubyClass) {
-                return new JrubyTimestampExtLibrary.RubyTimestamp(runtime, rubyClass);
-            }
-        }, JrubyTimestampExtLibrary.RubyTimestamp.class);
+        RUBY_TIMESTAMP_CLASS = setupLogstashClass(
+            "Timestamp",
+            JrubyTimestampExtLibrary.RubyTimestamp::new, JrubyTimestampExtLibrary.RubyTimestamp.class
+        );
         RUBY_EVENT_CLASS = setupLogstashClass(
             "Event", JrubyEventExtLibrary.RubyEvent::new, JrubyEventExtLibrary.RubyEvent.class
         );
diff --git a/logstash-core/src/main/java/org/logstash/ext/JrubyTimestampExtLibrary.java b/logstash-core/src/main/java/org/logstash/ext/JrubyTimestampExtLibrary.java
index 2ba32220e91..115c19e3439 100644
--- a/logstash-core/src/main/java/org/logstash/ext/JrubyTimestampExtLibrary.java
+++ b/logstash-core/src/main/java/org/logstash/ext/JrubyTimestampExtLibrary.java
@@ -33,25 +33,10 @@ public RubyTimestamp(Ruby runtime, RubyClass klass) {
             super(runtime, klass);
         }
 
-        public RubyTimestamp(Ruby runtime, RubyClass klass, Timestamp timestamp) {
-            this(runtime, klass);
-            this.timestamp = timestamp;
-        }
-
-        public RubyTimestamp(Ruby runtime, Timestamp timestamp) {
-            this(runtime, RubyUtil.RUBY_TIMESTAMP_CLASS, timestamp);
-        }
-
-        public RubyTimestamp(Ruby runtime) {
-            this(runtime, new Timestamp());
-        }
-
-        public static RubyTimestamp newRubyTimestamp(Ruby runtime) {
-            return new RubyTimestamp(runtime);
-        }
-
         public static RubyTimestamp newRubyTimestamp(Ruby runtime, Timestamp timestamp) {
-            return new RubyTimestamp(runtime, timestamp);
+            final RubyTimestamp stamp = new RubyTimestamp(runtime, RubyUtil.RUBY_TIMESTAMP_CLASS);
+            stamp.timestamp = timestamp;
+            return stamp;
         }
 
         public Timestamp getTimestamp() {
@@ -199,7 +184,7 @@ public static IRubyObject ruby_at(ThreadContext context, IRubyObject recv, IRuby
         @JRubyMethod(name = "now", meta = true)
         public static IRubyObject ruby_now(ThreadContext context, IRubyObject recv)
         {
-            return RubyTimestamp.newRubyTimestamp(context.runtime);
+            return RubyTimestamp.newRubyTimestamp(context.runtime, new Timestamp());
         }
 
         @JRubyMethod(name = "utc")
