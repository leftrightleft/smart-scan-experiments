diff --git a/CHANGELOG b/CHANGELOG
index 026230a50b3..619294e8be5 100644
--- a/CHANGELOG
+++ b/CHANGELOG
@@ -1,4 +1,4 @@
-1.1.1 (???, 2012)
+1.1.1 (July 14, 2012)
  ## Overview of this release:
   * New input plugins: generator, heroku, pipe, ganglia, irc
   * New output plugins: juggernaut, metricscatcher, nagios_ncsa, pipe,
diff --git a/Makefile b/Makefile
index 25c10db68a8..8b3bb6b2de0 100644
--- a/Makefile
+++ b/Makefile
@@ -16,7 +16,7 @@ JRUBYC=java -Djruby.compat.version=RUBY1_9 -jar $(PWD)/$(JRUBY) -S jrubyc
 ELASTICSEARCH_URL=http://github.com/downloads/elasticsearch/elasticsearch
 ELASTICSEARCH=vendor/jar/elasticsearch-$(ELASTICSEARCH_VERSION)
 JODA=vendor/jar/joda-time-$(JODA_VERSION)/joda-time-$(JODA_VERSION).jar
-PLUGIN_FILES=$(shell git ls-files | egrep '^lib/logstash/(inputs|outputs|filters)/' | egrep -v '/base.rb$$')
+PLUGIN_FILES=$(shell git ls-files | egrep '^lib/logstash/(inputs|outputs|filters)/' | egrep -v '/(base|threadable).rb$$|/inputs/ganglia/')
 GEM_HOME=build/gems
 QUIET=@
 
diff --git a/docs/docgen.rb b/docs/docgen.rb
index 741c3d48989..cb0ac15d749 100644
--- a/docs/docgen.rb
+++ b/docs/docgen.rb
@@ -41,7 +41,7 @@ def parse(string)
         # nothing
       else
         # Join extended lines
-        if line =~ /(, *$)|(\\$)/
+        if line =~ /(, *$)|(\\$)|(\[ *$)/
           buffer += line.gsub(/\\$/, "")
           next
         end
@@ -144,6 +144,12 @@ def generate(file, settings)
 
     # Now parse the real library
     code = File.new(file).read
+
+    # inputs either inherit from Base or Threadable.
+    if code =~ /\< LogStash::Inputs::Threadable/
+      parse(File.new(File.join(File.dirname(file), "threadable.rb"), "r").read)
+    end
+
     parse(code)
 
     puts "Generating docs for #{file}"
diff --git a/lib/logstash/filters/syslog_pri.rb b/lib/logstash/filters/syslog_pri.rb
index 7d94ce8d400..2bd4bd22c51 100644
--- a/lib/logstash/filters/syslog_pri.rb
+++ b/lib/logstash/filters/syslog_pri.rb
@@ -44,7 +44,7 @@ class LogStash::Filters::Syslog_pri < LogStash::Filters::Base
     "local4",
     "local5",
     "local6",
-    "local7"
+    "local7",
   ]
 
   # Labels for severity levels. This comes from RFC3164.
@@ -56,7 +56,7 @@ class LogStash::Filters::Syslog_pri < LogStash::Filters::Base
     "warning",
     "notice",
     "informational",
-    "debug"
+    "debug",
   ]
 
   public
diff --git a/lib/logstash/inputs/log4j.rb b/lib/logstash/inputs/log4j.rb
index a546f75e512..2bef859ed37 100644
--- a/lib/logstash/inputs/log4j.rb
+++ b/lib/logstash/inputs/log4j.rb
@@ -3,8 +3,6 @@
 require "logstash/util/socket_peer"
 require "socket"
 require "timeout"
-require "java"
-require "jruby/serialization"
 
 # Read events over a TCP socket from Log4j SocketAppender.
 #
@@ -39,6 +37,9 @@ def initialize(*args)
 
   public
   def register
+    require "java"
+    require "jruby/serialization"
+
     if server?
       @logger.info("Starting Log4j input listener", :address => "#{@host}:#{@port}")
       @server_socket = TCPServer.new(@host, @port)
@@ -68,6 +69,9 @@ def handle_socket(socket, output_queue, event_source)
         }
         event_data["@fields"]["NDC"] = event_obj.getNDC() if event_obj.getNDC()
         event_data["@fields"]["stack_trace"] = event_obj.getThrowableStrRep().join("\n") if event_obj.getThrowableInformation()
+        event_obj.getPropertyKeySet().each do |key|
+            event_data["@fields"]["prop_"+key] = event_obj.getProperty(key)
+        end
 
         e = ::LogStash::Event.new event_data
         puts "Event: #{e}"
diff --git a/lib/logstash/inputs/redis.rb b/lib/logstash/inputs/redis.rb
index 1f243b315d3..a74274434ad 100644
--- a/lib/logstash/inputs/redis.rb
+++ b/lib/logstash/inputs/redis.rb
@@ -1,4 +1,5 @@
 require "logstash/inputs/base"
+require "logstash/inputs/threadable"
 require "logstash/namespace"
 
 # Read events from a redis. Supports both redis channels and also redis lists
diff --git a/lib/logstash/outputs/metriccatcher.rb b/lib/logstash/outputs/metriccatcher.rb
index 67d5f55e3d3..91eca51a41f 100644
--- a/lib/logstash/outputs/metriccatcher.rb
+++ b/lib/logstash/outputs/metriccatcher.rb
@@ -25,18 +25,56 @@ class LogStash::Outputs::MetricCatcher < LogStash::Outputs::Base
   config :port, :validate => :number, :default => 1420
 
   # The metrics to send. This supports dynamic strings like %{@source_host}
-  # for metric names and also for values. This is a hash field with key 
+  # for metric names and also for values. This is a hash field with key
+  # of the metric name, value of the metric value.
+  #
+  # The value will be coerced to a floating point value. Values which cannot be
+  # coerced will zero (0)
+  config :gauge, :validate => :hash
+
+  # The metrics to send. This supports dynamic strings like %{@source_host}
+  # for metric names and also for values. This is a hash field with key
+  # of the metric name, value of the metric value. Example:
+  #
+  #   counter => [ "%{@source_host}.apache.hits.%{response}, "1" ]
+  #
+  # The value will be coerced to a floating point value. Values which cannot be
+  # coerced will zero (0)
+  config :counter, :validate => :hash
+
+  # The metrics to send. This supports dynamic strings like %{@source_host}
+  # for metric names and also for values. This is a hash field with key
+  # of the metric name, value of the metric value.
+  #
+  # The value will be coerced to a floating point value. Values which cannot be
+  # coerced will zero (0)
+  config :meter, :validate => :hash
+
+  # The metrics to send. This supports dynamic strings like %{@source_host}
+  # for metric names and also for values. This is a hash field with key
+  # of the metric name, value of the metric value.
+  #
+  # The value will be coerced to a floating point value. Values which cannot be
+  # coerced will zero (0)
+  config :biased, :validate => :hash
+
+  # The metrics to send. This supports dynamic strings like %{@source_host}
+  # for metric names and also for values. This is a hash field with key
+  # of the metric name, value of the metric value.
+  #
+  # The value will be coerced to a floating point value. Values which cannot be
+  # coerced will zero (0)
+  config :uniform, :validate => :hash
+
+  # The metrics to send. This supports dynamic strings like %{@source_host}
+  # for metric names and also for values. This is a hash field with key
   # of the metric name, value of the metric value. Example:
   #
-  #   counter => [ "%{@source_host}.apache.hits", "1", "widgets.served.doubled", "2" ]
-  #   meter => [ "%{@source_host}.apache.response.%{response}", "1" ]
+  #   timer => [ "%{@source_host}.apache.response_time, "%{response_time}" ]
   #
   # The value will be coerced to a floating point value. Values which cannot be
   # coerced will zero (0)
-  @@metric_types = ["gauge", "counter", "meter", "biased", "uniform", "timer"]
-  @@metric_types.each do |metric_type|
-    config metric_type, :validate => :hash
-  end
+  config :timer, :validate => :hash
 
   def register
     @socket = UDPSocket.new
diff --git a/lib/logstash/version.rb b/lib/logstash/version.rb
index 36af9200548..8ee7306caff 100644
--- a/lib/logstash/version.rb
+++ b/lib/logstash/version.rb
@@ -1,5 +1,5 @@
 # The version of logstash.
-LOGSTASH_VERSION = "1.1.1.rc3"
+LOGSTASH_VERSION = "1.1.1"
 
-# Note to authors: this should not include dashes because 'gem' barfs if you include a
-# dash in the version string.
+# Note to authors: this should not include dashes because 'gem' barfs if
+# you include a dash in the version string.
diff --git a/test/logstash/filters/test_split.rb b/test/logstash/filters/test_split.rb
index 405fa62a084..6fd8b2f5680 100644
--- a/test/logstash/filters/test_split.rb
+++ b/test/logstash/filters/test_split.rb
@@ -22,7 +22,6 @@ def config(cfg)
     end
 
     @filter = LogStash::Filters::Split.new(cfg)
-    @filter.prepare_metrics
   end
 
   test "default behavior" do
