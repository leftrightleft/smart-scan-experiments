diff --git a/lib/pluginmanager/proxy_support.rb b/lib/pluginmanager/proxy_support.rb
index 238507debdb..e148ede2b7a 100644
--- a/lib/pluginmanager/proxy_support.rb
+++ b/lib/pluginmanager/proxy_support.rb
@@ -54,16 +54,26 @@ def extract_proxy_values_from_uri(proxy_uri)
   }
 end
 
+def get_proxy(key)
+  ENV[key.downcase] || ENV[key.upcase]
+end
+
+def valid_proxy?(proxy)
+  !proxy.nil? && !proxy.strip.empty?
+end
+
 def configure_proxy
   proxies = []
-  if proxy = (ENV["http_proxy"] || ENV["HTTP_PROXY"])
+  proxy = get_proxy("http_proxy")
+  if valid_proxy?(proxy)
     proxy_settings = extract_proxy_values_from_uri(proxy)
     proxy_settings[:protocol] = "http"
     apply_env_proxy_settings(proxy_settings)
     proxies << proxy_settings
   end
 
-  if proxy = (ENV["https_proxy"] || ENV["HTTPS_PROXY"])
+  proxy = get_proxy("https_proxy")
+  if valid_proxy?(proxy)
     proxy_settings = extract_proxy_values_from_uri(proxy)
     proxy_settings[:protocol] = "https"
     apply_env_proxy_settings(proxy_settings)
diff --git a/spec/unit/plugin_manager/proxy_support_spec.rb b/spec/unit/plugin_manager/proxy_support_spec.rb
index 9bfe4a61543..8dc1203ee8c 100644
--- a/spec/unit/plugin_manager/proxy_support_spec.rb
+++ b/spec/unit/plugin_manager/proxy_support_spec.rb
@@ -112,4 +112,21 @@
       }
     end
   end
+
+  context "when proxies are set with an empty string" do
+    let(:environments) {
+      {
+        "http_proxy" => "",
+        "https_proxy" => ""
+      }
+    }
+
+    before do
+      environments.each { |key, value| ENV[key] = value }
+    end
+
+    it "doesn't raise an exception" do
+      expect { configure_proxy }.not_to raise_exception
+    end
+  end
 end
