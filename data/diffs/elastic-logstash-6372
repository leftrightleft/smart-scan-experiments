diff --git a/docs/static/configuration.asciidoc b/docs/static/configuration.asciidoc
index ec2d21d1aae..759567acff5 100644
--- a/docs/static/configuration.asciidoc
+++ b/docs/static/configuration.asciidoc
@@ -89,7 +89,7 @@ types are supported.
 [[array]]
 ==== Array
 
-This type is now mostly deprecated in favor of using a standard type like `string` with the plugin defining the `:list => true` property for better type checking. It is still needed to handle lists of hashes or mixed types where type checking is not desired. added[5.0.0-alpha4,The :list property is available for better type checking] 
+This type is now mostly deprecated in favor of using a standard type like `string` with the plugin defining the `:list => true` property for better type checking. It is still needed to handle lists of hashes or mixed types where type checking is not desired. 
 
 Example:
 
@@ -102,8 +102,6 @@ Example:
 [float]
 ==== Lists
 
-added[5.0.0-alpha4,The :list property is available for better type checking]
-
 Not a type in and of itself, but a property types can have.
 This makes it possible to type check multiple values.
 Plugin authors can enable list checking by specifying `:list => true` when declaring an argument.
@@ -222,8 +220,6 @@ Example:
 [float]
 ==== URI
 
-added[5.0.0-alpha4]
-
 A URI can be anything from a full URL like 'http://elastic.co/' to a simple identifier
 like 'foobar'. If the URI contains a password such as 'http://user:pass@example.net' the password
 portion of the URI will not be logged or printed.
diff --git a/docs/static/include/pluginbody.asciidoc b/docs/static/include/pluginbody.asciidoc
index 12bc19389b0..4a31f014e48 100644
--- a/docs/static/include/pluginbody.asciidoc
+++ b/docs/static/include/pluginbody.asciidoc
@@ -476,7 +476,7 @@ will become a valid boolean in the config.  This coercion works for the
 `:number` type as well where "1.2" becomes a float and "22" is an integer.
 * `:default` - lets you specify a default value for a parameter
 * `:required` - whether or not this parameter is mandatory (a Boolean `true` or `false`)
-* `:list` - whether or not this value should be a list of values. Will typecheck the list members, and convert scalars to one element lists. Note that this mostly obviates the array type, though if you need lists of complex objects that will be more suitable. added[5.0.0-alpha4,The :list property is available for better type checking]
+* `:list` - whether or not this value should be a list of values. Will typecheck the list members, and convert scalars to one element lists. Note that this mostly obviates the array type, though if you need lists of complex objects that will be more suitable. 
 * `:deprecated` - informational (also a Boolean `true` or `false`)
 * `:obsolete` - used to declare that a given setting has been removed and is no longer functioning. The idea is to provide an informed upgrade path to users who are still using a now-removed setting.
 
