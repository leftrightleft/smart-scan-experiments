diff --git a/lib/pluginmanager/main.rb b/lib/pluginmanager/main.rb
index 598df0d38fe..146c1646c91 100644
--- a/lib/pluginmanager/main.rb
+++ b/lib/pluginmanager/main.rb
@@ -17,6 +17,7 @@ module PluginManager
 require "pluginmanager/install"
 require "pluginmanager/remove"
 require "pluginmanager/list"
+require "pluginmanager/search"
 require "pluginmanager/update"
 require "pluginmanager/pack"
 require "pluginmanager/unpack"
@@ -30,6 +31,7 @@ module PluginManager
     class Error < StandardError; end
 
     class Main < Clamp::Command
+      subcommand "search", "Search Rubygems.org for plugins", LogStash::PluginManager::Search
       subcommand "list", "List all installed Logstash plugins", LogStash::PluginManager::List
       subcommand "install", "Install a Logstash plugin", LogStash::PluginManager::Install
       subcommand "remove", "Remove a Logstash plugin", LogStash::PluginManager::Remove
diff --git a/lib/pluginmanager/search.rb b/lib/pluginmanager/search.rb
new file mode 100644
index 00000000000..3697d40accf
--- /dev/null
+++ b/lib/pluginmanager/search.rb
@@ -0,0 +1,29 @@
+# encoding: utf-8
+require 'rubygems/spec_fetcher'
+require "pluginmanager/command"
+
+class LogStash::PluginManager::Search < LogStash::PluginManager::Command
+
+  parameter "[PATTERN]", "pattern to look for"
+
+  option "--author", "NAME", "Show only plugins authored by this name"
+
+  def execute
+    LogStash::Bundler.setup!({:without => [:build, :development]})
+    fetcher = Gem::SpecFetcher.fetcher
+    fetcher.detect(:latest) do |name_tuple|
+      File.fnmatch?(pattern, name_tuple.name)
+    end.map {|name_tuple, source| source.fetch_spec(name_tuple) }.each do |spec|
+      next unless spec.metadata && spec.metadata["logstash_plugin"] == "true"
+      next unless spec.platform == 'java' || (spec.platform.is_a?(Gem::Platform) && spec.platform.os == 'java')
+      if author
+        next unless spec.authors.include?(author)
+      end
+      puts "#{spec.name} - #{spec.version}"
+      puts "  Date: #{spec.date}"
+      puts "  Author: #{spec.authors.join(', ')}"
+      puts "  Homepage: #{spec.homepage}"
+      puts "  Description: #{spec.summary}"
+    end
+  end
+end
