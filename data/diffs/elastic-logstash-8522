diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/IfVertex.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/IfVertex.java
index d23de9b98d2..c720363e3f1 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/IfVertex.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/IfVertex.java
@@ -13,7 +13,6 @@
  * Created by andrewvc on 9/15/16.
  */
 public class IfVertex extends Vertex {
-    private volatile String generatedId;
 
     public BooleanExpression getBooleanExpression() {
         return booleanExpression;
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/PluginVertex.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/PluginVertex.java
index 7b2068c45e4..56c190f49cd 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/PluginVertex.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/PluginVertex.java
@@ -13,7 +13,6 @@
 public class PluginVertex extends Vertex {
     private final SourceWithMetadata meta;
     private final PluginDefinition pluginDefinition;
-    private volatile String generatedId;
 
     public PluginDefinition getPluginDefinition() {
         return pluginDefinition;
@@ -66,10 +65,4 @@ public boolean sourceComponentEquals(SourceComponent other) {
         }
         return false;
     }
-
-    @Override
-    public void clearCache() {
-        super.clearCache();
-        this.generatedId = null;
-    }
 }
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/BreadthFirst.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/BreadthFirst.java
index 26b2f1b1a02..e8206155599 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/BreadthFirst.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/BreadthFirst.java
@@ -45,16 +45,14 @@ public static BfsResult breadthFirst(Collection<Vertex> roots,
         });
     }
 
-    return new BfsResult(vertexDistances, vertexParents);
+    return new BfsResult(vertexDistances);
 }
 
     public static final class BfsResult {
         public final Map<Vertex, Integer> vertexDistances;
-        private final Map<Vertex, Vertex> vertexParents;
 
-        BfsResult(Map<Vertex, Integer> vertexDistances, Map<Vertex,Vertex> vertexParents) {
+        BfsResult(Map<Vertex, Integer> vertexDistances) {
             this.vertexDistances = vertexDistances;
-            this.vertexParents = vertexParents;
         }
 
         public Collection<Vertex> getVertices() {
