diff --git a/logstash-core/lib/logstash/agent.rb b/logstash-core/lib/logstash/agent.rb
index 1d3a43f7058..0ebcc880842 100644
--- a/logstash-core/lib/logstash/agent.rb
+++ b/logstash-core/lib/logstash/agent.rb
@@ -103,12 +103,12 @@ def register_pipeline(settings)
     @pipelines[pipeline_id] = pipeline
   end
 
-  def reload_state!
+  def reload_state!(force=false)
     @upgrade_mutex.synchronize do
       @pipelines.each do |pipeline_id, pipeline|
-        next if pipeline.settings.get("config.reload.automatic") == false
+        next if pipeline.settings.get("config.reload.automatic") == false && force == false
         begin
-          reload_pipeline!(pipeline_id)
+          reload_pipeline!(pipeline_id, force)
         rescue => e
           @instance_reload_metric.increment(:failures)
           @pipeline_reload_metric.namespace([pipeline_id.to_sym, :reloads]).tap do |n|
@@ -297,11 +297,11 @@ def fetch_config(settings)
   # reload_pipeline trys to reloads the pipeline with id using a potential new configuration if it changed
   # since this method modifies the @pipelines hash it is wrapped in @upgrade_mutex in the parent call `reload_state!`
   # @param id [String] the pipeline id to reload
-  def reload_pipeline!(id)
+  def reload_pipeline!(id, force=false)
     old_pipeline = @pipelines[id]
     new_config = fetch_config(old_pipeline.settings)
 
-    if old_pipeline.config_str == new_config
+    if old_pipeline.config_str == new_config && force == false
       @logger.debug("no configuration change for pipeline", :pipeline => id)
       return
     end
diff --git a/logstash-core/lib/logstash/runner.rb b/logstash-core/lib/logstash/runner.rb
index 051d9995d40..2e9ad084064 100644
--- a/logstash-core/lib/logstash/runner.rb
+++ b/logstash-core/lib/logstash/runner.rb
@@ -418,7 +418,7 @@ def start_shell(shell, start_binding)
   def trap_sighup
     Stud::trap("HUP") do
       logger.warn(I18n.t("logstash.agent.sighup"))
-      @agent.reload_state!
+      @agent.reload_state!(true)
     end
   end
 
diff --git a/logstash-core/spec/logstash/agent_spec.rb b/logstash-core/spec/logstash/agent_spec.rb
index e90c36e3350..be3dab53082 100644
--- a/logstash-core/spec/logstash/agent_spec.rb
+++ b/logstash-core/spec/logstash/agent_spec.rb
@@ -162,6 +162,19 @@
             t.join
             subject.shutdown
           end
+
+          context "and force autoreload" do
+            it "reloads the pipeline" do
+              t = Thread.new { subject.execute }
+              sleep(0.01) until subject.running_pipelines? && subject.pipelines.values.first.running?
+              expect(subject).to receive(:reload_pipeline!).with("main", true)
+              subject.reload_state!(true)
+
+              Stud.stop!(t)
+              t.join
+              subject.shutdown
+            end
+          end
         end
 
         context "with a pipeline with auto reloading turned on" do
