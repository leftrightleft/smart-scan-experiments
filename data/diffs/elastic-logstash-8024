diff --git a/logstash-core/src/main/java/org/logstash/common/io/RecordIOReader.java b/logstash-core/src/main/java/org/logstash/common/io/RecordIOReader.java
index e6ede537576..5e74d3de8e2 100644
--- a/logstash-core/src/main/java/org/logstash/common/io/RecordIOReader.java
+++ b/logstash-core/src/main/java/org/logstash/common/io/RecordIOReader.java
@@ -137,10 +137,15 @@ void consumeBlock(boolean rewind) throws IOException {
             // already read enough, no need to read more
             return;
         }
-        int originalPosition = currentBlock.position();
-        int read = channel.read(currentBlock);
-        currentBlockSizeReadFromChannel += (read > 0) ? read : 0;
-        currentBlock.position(originalPosition);
+        int processedPosition = currentBlock.position();
+        try {
+            // Move to last written to position
+            currentBlock.position(currentBlockSizeReadFromChannel);
+            channel.read(currentBlock);
+            currentBlockSizeReadFromChannel = currentBlock.position();
+        } finally {
+            currentBlock.position(processedPosition);
+        }
     }
 
     /**
diff --git a/logstash-core/src/test/java/org/logstash/common/io/RecordIOReaderTest.java b/logstash-core/src/test/java/org/logstash/common/io/RecordIOReaderTest.java
index 46a069364cb..0053d99b97b 100644
--- a/logstash-core/src/test/java/org/logstash/common/io/RecordIOReaderTest.java
+++ b/logstash-core/src/test/java/org/logstash/common/io/RecordIOReaderTest.java
@@ -152,6 +152,27 @@ private void writeSeekAndVerify(final int eventCount, final int expectedSize) th
         }
     }
 
+    @Test
+    public void testReadWhileWriteAcrossBoundary() throws Exception {
+        char[] tooBig = fillArray( BLOCK_SIZE/4);
+        StringElement input = new StringElement(new String(tooBig));
+        byte[] inputSerialized = input.serialize();
+        try(RecordIOWriter writer = new RecordIOWriter(file);
+            RecordIOReader reader = new RecordIOReader(file)){
+
+            for (int j = 0; j < 2; j++) {
+                writer.writeEvent(inputSerialized);
+            }
+            assertThat(reader.readEvent(), equalTo(inputSerialized));
+            for (int j = 0; j < 2; j++) {
+                writer.writeEvent(inputSerialized);
+            }
+            for (int j = 0; j < 3; j++) {
+                assertThat(reader.readEvent(), equalTo(inputSerialized));
+            }
+        }
+    }
+
     private char[] fillArray(final int fillSize) {
         char[] blockSize= new char[fillSize];
         Arrays.fill(blockSize, 'e');
