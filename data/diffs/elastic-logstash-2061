diff --git a/lib/logstash/timestamp.rb b/lib/logstash/timestamp.rb
index fc8d793911c..1feddcdec86 100644
--- a/lib/logstash/timestamp.rb
+++ b/lib/logstash/timestamp.rb
@@ -10,8 +10,9 @@ class TimestampParserError < StandardError; end
 
   class Timestamp
     extend Forwardable
+    include Comparable
 
-    def_delegators :@time, :tv_usec, :usec, :year, :iso8601, :to_i, :tv_sec, :to_f, :to_edn
+    def_delegators :@time, :tv_usec, :usec, :year, :iso8601, :to_i, :tv_sec, :to_f, :to_edn, :<=>, :+
 
     attr_reader :time
 
@@ -89,5 +90,8 @@ def to_iso8601
     end
     alias_method :to_s, :to_iso8601
 
+    def -(value)
+      @time - (value.is_a?(Timestamp) ? value.time : value)
+    end
   end
 end
diff --git a/spec/core/timestamp_spec.rb b/spec/core/timestamp_spec.rb
index 1ebbab634b3..b899e8064ea 100644
--- a/spec/core/timestamp_spec.rb
+++ b/spec/core/timestamp_spec.rb
@@ -1,3 +1,4 @@
+require 'spec_helper'
 require "logstash/timestamp"
 
 describe LogStash::Timestamp do
@@ -39,4 +40,44 @@
   it "should support to_json and ignore arguments" do
     expect(LogStash::Timestamp.parse_iso8601("2014-09-23T00:00:00-0800").to_json(:some => 1, :argumnents => "test")).to eq("\"2014-09-23T08:00:00.000Z\"")
   end
+
+  it "should support timestamp comparaison" do
+   current = LogStash::Timestamp.new(Time.now) 
+   future = LogStash::Timestamp.new(Time.now + 100)
+
+   expect(future > current).to eq(true)
+   expect(future < current).to eq(false)
+   expect(current == current).to eq(true)
+
+   expect(current <=> current).to eq(0)
+   expect(current <=> future).to eq(-1)
+   expect(future <=> current).to eq(1)
+  end
+
+  it "should allow unary operation +" do
+    current = Time.now
+    t = LogStash::Timestamp.new(current) + 10
+    expect(t).to eq(current + 10)
+  end
+
+  describe "subtraction" do
+    it "should work on a timestamp object" do
+      t = Time.now
+      current = LogStash::Timestamp.new(t)
+      future = LogStash::Timestamp.new(t + 10)
+      expect(future - current).to eq(10)
+    end
+
+    it "should work on with time object" do
+      current = Time.now
+      t = LogStash::Timestamp.new(current + 10)
+      expect(t - current).to eq(10)
+    end
+
+    it "should work with numeric value" do
+      current = Time.now
+      t = LogStash::Timestamp.new(current + 10)
+      expect(t - 10).to eq(current)
+    end
+  end
 end
