diff --git a/bin/logstash.lib.sh b/bin/logstash.lib.sh
index fe49c8f6009..7a04868645e 100755
--- a/bin/logstash.lib.sh
+++ b/bin/logstash.lib.sh
@@ -16,7 +16,7 @@ setup_ruby() {
   VENDORED_JRUBY=
 
   export GEM_HOME="${basedir}/vendor/bundle/${RUBY}/${RUBYVER}"
-  export GEM_PATH=
+  export GEM_PATH=${GEM_HOME}
 }
 
 setup_java() {
@@ -74,7 +74,7 @@ setup_vendored_jruby() {
 
   export RUBYLIB="${basedir}/lib"
   export GEM_HOME="${basedir}/vendor/bundle/${RUBY}/${RUBYVER}"
-  export GEM_PATH=
+  export GEM_PATH=${GEM_HOME}
 }
 
 setup() {
@@ -96,4 +96,4 @@ install_deps() {
   else
     echo "Cannot install dependencies; missing logstash.gemspec. This 'deps' command only works from a logstash git clone."
   fi
-}
\ No newline at end of file
+}
diff --git a/gembag.rb b/gembag.rb
index 2962624404e..d45d8e6b69b 100644
--- a/gembag.rb
+++ b/gembag.rb
@@ -6,7 +6,7 @@
 target = "#{Dir.pwd}/vendor/bundle"
 gemdir = "#{target}/#{RUBY_ENGINE}/#{rubyabi}/"
 ENV["GEM_HOME"] = gemdir
-ENV["GEM_PATH"] = ""
+ENV["GEM_PATH"] = gemdir
 
 require "rubygems/specification"
 require "rubygems/commands/install_command"
diff --git a/lib/logstash/agent.rb b/lib/logstash/agent.rb
index 000d1ba4eb0..4885fd94684 100644
--- a/lib/logstash/agent.rb
+++ b/lib/logstash/agent.rb
@@ -260,30 +260,31 @@ def configure_logging(path)
   # Validate and add any paths to the list of locations
   # logstash will look to find plugins.
   def configure_plugin_path(paths)
-    # Append any plugin paths to the ruby search path
-    paths.each do |path|
-      # Verify the path exists
-      if !Dir.exists?(path)
-        warn(I18n.t("logstash.agent.configuration.plugin_path_missing",
-                    :path => path))
-
-      end
-
-      # TODO(sissel): Verify the path looks like the correct form.
-      # aka, there must be file in path/logstash/{inputs,codecs,filters,outputs}/*.rb
-      plugin_glob = File.join(path, "logstash", "{inputs,codecs,filters,outputs}", "*.rb")
-      if Dir.glob(plugin_glob).empty?
-        @logger.warn(I18n.t("logstash.agent.configuration.no_plugins_found",
-                    :path => path, :plugin_glob => plugin_glob))
-      end
-
-      # We push plugin paths to the front of the LOAD_PATH so that folks
-      # can override any core logstash plugins if they need to.
+    # prepend any discovered plugins paths to the $LOAD_PATH
+    load_paths = paths.map{|path| LogStash::Environment.discover_load_paths(path)}.flatten
+    @logger.warn(I18n.t("logstash.agent.configuration.no_plugins_found", :path => paths, :plugin_glob => "")) if load_paths.empty?
+    load_paths.each do |path|
       @logger.debug("Adding plugin path", :path => path)
       $LOAD_PATH.unshift(path)
     end
+
+    # prepend any discovered plugins gems paths to the ENV["GEM_PATH"]
+    gem_paths = paths.map{|path| LogStash::Environment.discover_gem_paths(path)}.flatten
+    gem_paths.each do |path|
+      @logger.debug("Adding gem path", :path => path)
+    end
+
+    # prepend current GEM_PATH to discovered gem_paths
+    gem_paths.unshift(ENV["GEM_PATH"])
+
+    # set GEM_PATH to the reverse so that plugins gems are found before own to follow same logic as load path
+    ENV["GEM_PATH"] = gem_paths.reverse.join(File::PATH_SEPARATOR)
+
+    # make sure rubygems recomputes its paths with the new GEM_PATH
+    Gem.clear_paths
   end # def configure_plugin_path
 
+
   def load_config(path)
     path = File.join(path, "*") if File.directory?(path)
 
diff --git a/lib/logstash/environment.rb b/lib/logstash/environment.rb
index f8c12ef59be..346cd6733fc 100644
--- a/lib/logstash/environment.rb
+++ b/lib/logstash/environment.rb
@@ -39,5 +39,35 @@ def plugin_path(path)
     def pattern_path(path)
       return ::File.join(LOGSTASH_HOME, "patterns", path)
     end
+
+    # @return [String] major.minor ruby version, ex 1.9
+    def ruby_minor_version
+      RUBY_VERSION[/(\d+\.\d+)(\.\d+)*/, 1]
+    end
+
+    # @return [String] jruby, ruby, rbx, ...
+    def ruby_engine
+      RUBY_ENGINE
+    end
+
+    # given a base path, typically what we'd get from --pluginpath search for logstash plugins source dirs.
+    # @param base_path [String] an existing dir path which will include logstash/... or lib/logstash/...
+    # @return [Array<String>] list of found dirs, [] if none
+    def discover_load_paths(base_path)
+      [".", "lib"].map{|search_path| ::File.expand_path(::File.join(base_path, search_path))}.select do |path|
+        !Dir.glob(::File.join(path, "logstash", "{inputs,codecs,filters,outputs}", "*.rb")).empty?
+      end
+    end
+
+    # given a base path, typically what we'd get from --pluginpath search for logstash plugins gems dirs
+    # in the given path or in the parent path.
+    # @param base_path [String] an existing dir path which will include ./vendor/bundle/... or ../vendor/bundle/...
+    # @return [Array<String>] list of found dirs, [] if none
+    def discover_gem_paths(base_path)
+      ["..", "."].map{|search_path| Dir.glob(::File.expand_path(::File.join(base_path, search_path, "vendor", "bundle", ruby_engine, ruby_minor_version)))}.select do |path|
+        !path.empty?
+      end
+    end
+
   end
 end
