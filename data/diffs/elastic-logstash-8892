diff --git a/bin/logstash.lib.sh b/bin/logstash.lib.sh
index 4074481eb65..c352fb9c47e 100755
--- a/bin/logstash.lib.sh
+++ b/bin/logstash.lib.sh
@@ -115,6 +115,8 @@ setup_vendored_jruby() {
     echo "If you are a developer, please run 'rake bootstrap'. Running 'rake' requires the 'ruby' program be available."
     exit 1
   fi
+  export GEM_HOME="${LOGSTASH_HOME}/vendor/bundle/jruby/2.3.0"
+  export GEM_PATH=${GEM_HOME}
 }
 
 setup() {
diff --git a/build.gradle b/build.gradle
index feded9fb517..9ebe14b296e 100644
--- a/build.gradle
+++ b/build.gradle
@@ -141,6 +141,8 @@ def jrubyBin = "${projectDir}/vendor/jruby/bin/jruby" +
   (System.getProperty("os.name").startsWith("Windows") ? '.bat' : '')
 
 def rakeBin = "${projectDir}/vendor/jruby/bin/rake"
+def gemPath = "${projectDir}/vendor/bundle/jruby/2.3.0/"
+def bundleBin = "${gemPath}/bin/bundle"
 
 task installTestGems(dependsOn: downloadAndInstallJRuby, type: Exec) {
   workingDir projectDir
@@ -154,6 +156,8 @@ task installTestGems(dependsOn: downloadAndInstallJRuby, type: Exec) {
   // Override z_rubycheck.rb because we execute the vendored JRuby and don't have to guard against
   // any Ruby environment leaking into the build
   environment "USE_RUBY", "1"
+  environment "GEM_PATH", gemPath
+  environment "GEM_HOME", gemPath
   standardOutput = new ExecLogOutputStream(System.out)
   errorOutput =  new ExecLogOutputStream(System.err)
   commandLine jrubyBin, rakeBin, "test:install-core"
@@ -170,6 +174,9 @@ task assembleTarDistribution(dependsOn: installTestGems, type: Exec) {
   inputs.files fileTree("${projectDir}/logstash-core/lib")
   inputs.files fileTree("${projectDir}/logstash-core/src")
   outputs.files file("${buildDir}/logstash-${project.version}.tar.gz")
+  environment "USE_RUBY", "1"
+  environment "GEM_PATH", gemPath
+  environment "GEM_HOME", gemPath
   standardOutput = new ExecLogOutputStream(System.out)
   errorOutput =  new ExecLogOutputStream(System.err)
   commandLine jrubyBin, rakeBin, "artifact:tar"
@@ -185,13 +192,13 @@ task unpackTarDistribution(dependsOn: assembleTarDistribution, type: Copy) {
   into {buildDir}
 }
 
-def bundleBin = "${projectDir}/vendor/bundle/jruby/2.3.0/bin/bundle"
-def gemPath = "${buildDir}/qa/integration/gems"
+// Integration Tests use Gems incompatible with Logstash Core
+def itGemPath = "${buildDir}/qa/integration/gems"
 
 task installIntegrationTestBundler(dependsOn: unpackTarDistribution, type: Exec) {
-  outputs.files fileTree("${gemPath}/gems/bundler-1.16.0")
-  environment "GEM_PATH", gemPath
-  environment "GEM_HOME", gemPath
+  outputs.files fileTree("${itGemPath}/gems/bundler-1.16.0")
+  environment "GEM_PATH", itGemPath
+  environment "GEM_HOME", itGemPath
   standardOutput = new ExecLogOutputStream(System.out)
   errorOutput =  new ExecLogOutputStream(System.err)
   commandLine jrubyBin, "${projectDir}/vendor/jruby/bin/gem", "install", "bundler", "-v", "1.16.0"
@@ -199,18 +206,18 @@ task installIntegrationTestBundler(dependsOn: unpackTarDistribution, type: Exec)
 
 task installIntegrationTestGems(dependsOn: installIntegrationTestBundler, type: Exec) {
   workingDir "${projectDir}/qa/integration"
-  environment "GEM_PATH", gemPath
-  environment "GEM_HOME", gemPath
+  environment "GEM_PATH", itGemPath
+  environment "GEM_HOME", itGemPath
   inputs.files file("${projectDir}/qa/integration/Gemfile")
   inputs.files file("${logstashBuildDir}/Gemfile")
   inputs.files file("${logstashBuildDir}/Gemfile.lock")
   inputs.files file("${logstashBuildDir}/logstash-core/logstash-core.gemspec")
   inputs.files file("${projectDir}/qa/integration/integration_tests.gemspec")
-  outputs.files fileTree("${gemPath}/gems")
+  outputs.files fileTree("${itGemPath}/gems")
   outputs.files file("${projectDir}/qa/integration/Gemfile.lock")
   standardOutput = new ExecLogOutputStream(System.out)
   errorOutput =  new ExecLogOutputStream(System.err)
-  commandLine jrubyBin, bundleBin, "install"
+  commandLine jrubyBin, bundleBin, "update"
 }
 
 def rubyIntegrationSpecs = project.hasProperty("rubyIntegrationSpecs") ? ((String) project.property("rubyIntegrationSpecs")).split(/\s+/) : []
@@ -218,8 +225,8 @@ def rubyIntegrationSpecs = project.hasProperty("rubyIntegrationSpecs") ? ((Strin
 task runIntegrationTests(dependsOn: installIntegrationTestGems, type: Exec) {
   workingDir "${projectDir}/qa/integration"
   environment "JAVA_OPTS", ""
-  environment "GEM_PATH", gemPath
-  environment "GEM_HOME", gemPath
+  environment "GEM_PATH", itGemPath
+  environment "GEM_HOME", itGemPath
   // FEATURE_FLAG is set in the CI to configure testing with enabled PQ
   environment "FEATURE_FLAG", System.getenv('FEATURE_FLAG')
   standardOutput = new ExecLogOutputStream(System.out)
diff --git a/lib/bootstrap/bundler.rb b/lib/bootstrap/bundler.rb
index e8ca3aa3fe5..1a9d432696b 100644
--- a/lib/bootstrap/bundler.rb
+++ b/lib/bootstrap/bundler.rb
@@ -47,11 +47,11 @@ def setup!(options = {})
       require "bundler"
       LogStash::Bundler.patch!
 
-      ::Bundler.settings[:path] = Environment::BUNDLE_DIR
-      ::Bundler.settings[:without] = options[:without].join(":")
+      ::Bundler.settings.set_global(:path, Environment::BUNDLE_DIR)
+      ::Bundler.settings.set_global(:without, options[:without].join(":"))
       # in the context of Bundler.setup it looks like this is useless here because Gemfile path can only be specified using
       # the ENV, see https://github.com/bundler/bundler/blob/v1.8.3/lib/bundler/shared_helpers.rb#L103
-      ::Bundler.settings[:gemfile] = Environment::GEMFILE_PATH
+      ::Bundler.settings.set_global(:gemfile, Environment::GEMFILE_PATH)
 
       ::Bundler.reset!
       ::Bundler.setup
@@ -103,10 +103,10 @@ def invoke!(options = {})
       # force Rubygems sources to our Gemfile sources
       ::Gem.sources = ::Gem::SourceList.from(options[:rubygems_source]) if options[:rubygems_source]
 
-      ::Bundler.settings[:path] = LogStash::Environment::BUNDLE_DIR
-      ::Bundler.settings[:gemfile] = LogStash::Environment::GEMFILE_PATH
-      ::Bundler.settings[:without] = options[:without].join(":")
-      ::Bundler.settings[:force] = options[:force]
+      ::Bundler.settings.set_global(:path, LogStash::Environment::BUNDLE_DIR)
+      ::Bundler.settings.set_global(:gemfile, LogStash::Environment::GEMFILE_PATH)
+      ::Bundler.settings.set_global(:without, options[:without].join(":"))
+      ::Bundler.settings.set_global(:force, options[:force])
 
       if !debug?
         # Will deal with transient network errors
diff --git a/logstash-core-plugin-api/logstash-core-plugin-api.gemspec b/logstash-core-plugin-api/logstash-core-plugin-api.gemspec
index 641339f7a21..aceec7caa66 100644
--- a/logstash-core-plugin-api/logstash-core-plugin-api.gemspec
+++ b/logstash-core-plugin-api/logstash-core-plugin-api.gemspec
@@ -30,7 +30,7 @@ Gem::Specification.new do |gem|
   gem.homepage      = "http://www.elastic.co/guide/en/logstash/current/index.html"
   gem.license       = "Apache License (2.0)"
 
-  gem.files         = Dir.glob(["logstash-core-plugin-api.gemspec", "lib/**/*.rb", "spec/**/*.rb"])
+  gem.files         = Dir.glob(["logstash-core-plugin-api.gemspec", "versions-gem-copy.yml", "lib/**/*.rb", "spec/**/*.rb"])
   gem.test_files    = gem.files.grep(%r{^(test|spec|features)/})
   gem.name          = "logstash-core-plugin-api"
   gem.require_paths = ["lib"]
diff --git a/logstash-core/lib/logstash-core_jars.rb b/logstash-core/lib/logstash-core_jars.rb
index 8802ba2b874..78e3ff7c0f6 100644
--- a/logstash-core/lib/logstash-core_jars.rb
+++ b/logstash-core/lib/logstash-core_jars.rb
@@ -15,14 +15,14 @@
 end
 
 if defined? Jars
-  require_jar( 'org.slf4j', 'slf4j-api', '1.7.25' )
-  require_jar( 'com.fasterxml.jackson.core', 'jackson-databind', '2.9.1' )
-  require_jar( 'com.fasterxml.jackson.core', 'jackson-annotations', '2.9.1' )
-  require_jar( 'org.apache.logging.log4j', 'log4j-api', '2.9.1' )
-  require_jar( 'org.apache.logging.log4j', 'log4j-core', '2.9.1' )
-  require_jar( 'com.fasterxml.jackson.dataformat', 'jackson-dataformat-cbor', '2.9.1' )
-  require_jar( 'org.codehaus.janino', 'commons-compiler', '3.0.7' )
-  require_jar( 'org.apache.logging.log4j', 'log4j-slf4j-impl', '2.9.1' )
-  require_jar( 'com.fasterxml.jackson.core', 'jackson-core', '2.9.1' )
-  require_jar( 'org.codehaus.janino', 'janino', '3.0.7' )
+  require_jar 'org.slf4j', 'slf4j-api', '1.7.25'
+  require_jar 'com.fasterxml.jackson.core', 'jackson-databind', '2.9.1'
+  require_jar 'com.fasterxml.jackson.core', 'jackson-annotations', '2.9.1'
+  require_jar 'org.apache.logging.log4j', 'log4j-api', '2.9.1'
+  require_jar 'org.apache.logging.log4j', 'log4j-core', '2.9.1'
+  require_jar 'com.fasterxml.jackson.dataformat', 'jackson-dataformat-cbor', '2.9.1'
+  require_jar 'org.codehaus.janino', 'commons-compiler', '3.0.7'
+  require_jar 'org.apache.logging.log4j', 'log4j-slf4j-impl', '2.9.1'
+  require_jar 'com.fasterxml.jackson.core', 'jackson-core', '2.9.1'
+  require_jar 'org.codehaus.janino', 'janino', '3.0.7'
 end
diff --git a/rakelib/dependency.rake b/rakelib/dependency.rake
index 5c6e9e8c92b..55a360b1376 100644
--- a/rakelib/dependency.rake
+++ b/rakelib/dependency.rake
@@ -1,7 +1,7 @@
 
 namespace "dependency" do
   task "bundler" do
-    Rake::Task["gem:require"].invoke("bundler", "~> 1.9.4")
+    Rake::Task["gem:require"].invoke("bundler", "~> 1.16.0")
   end
 
   task "rbx-stdlib" do
diff --git a/spec/unit/bootstrap/bundler_spec.rb b/spec/unit/bootstrap/bundler_spec.rb
index df6b4d169a5..1216ddbe704 100644
--- a/spec/unit/bootstrap/bundler_spec.rb
+++ b/spec/unit/bootstrap/bundler_spec.rb
@@ -44,7 +44,7 @@
     after do
       expect(::Bundler.settings[:path]).to eq(LogStash::Environment::BUNDLE_DIR)
       expect(::Bundler.settings[:gemfile]).to eq(LogStash::Environment::GEMFILE_PATH)
-      expect(::Bundler.settings[:without]).to eq(options.fetch(:without, []).join(':'))
+      expect(::Bundler.settings[:without]).to eq(options.fetch(:without, []))
 
       expect(ENV['GEM_PATH']).to eq(LogStash::Environment.logstash_gem_home)
 
diff --git a/versions.yml b/versions.yml
index 37bbb13fbfb..82836700efc 100644
--- a/versions.yml
+++ b/versions.yml
@@ -6,8 +6,8 @@ logstash-core-plugin-api: 2.1.16
 # jruby must reference a *released* version of jruby which can be downloaded from the official download url
 # *and* for which jars artifacts are published for compile-time
 jruby:
-  version: 9.1.13.0
-  sha1: 815bac27d5daa1459a4477d6d80584f007ce6a68
+  version: 9.1.15.0
+  sha1: 852b3dfd8b56a314ea4bf9502022a1f9edb8d7f6
 
 # jruby-runtime-override, if specified, will override the jruby version installed in vendor/jruby for logstash runtime only,
 # not for the compile-time jars
