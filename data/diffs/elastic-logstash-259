diff --git a/lib/logstash/event.rb b/lib/logstash/event.rb
index c77845468c6..71330e5fb13 100644
--- a/lib/logstash/event.rb
+++ b/lib/logstash/event.rb
@@ -1,7 +1,7 @@
 require "json"
 require "time"
 require "date"
-require "logstash/time"
+require "logstash/time_addon"
 require "logstash/namespace"
 require "uri"
 
@@ -230,7 +230,7 @@ def sprintf(format)
         # Got %{+%s}, support for unix epoch time
         if RUBY_ENGINE != "jruby"
           # This is really slow. See LOGSTASH-217
-          Date.parse(self.timestamp).to_i
+          Time.parse(self.timestamp).to_i
         else
           datetime = @@date_parser.parseDateTime(self.timestamp)
           (datetime.getMillis / 1000).to_i
diff --git a/lib/logstash/outputs/graphite.rb b/lib/logstash/outputs/graphite.rb
index b0efee006fc..20742763956 100644
--- a/lib/logstash/outputs/graphite.rb
+++ b/lib/logstash/outputs/graphite.rb
@@ -28,6 +28,9 @@ class LogStash::Outputs::Graphite < LogStash::Outputs::Base
   # coerced will zero (0)
   config :metrics, :validate => :hash, :required => true
 
+  # Enable debug output
+  config :debug, :validate => :boolean, :default => false
+
   def register
     connect
   end # def register
@@ -52,8 +55,13 @@ def receive(event)
 
     # Catch exceptions like ECONNRESET and friends, reconnect on failure.
     @metrics.each do |metric, value|
+      @logger.debug("processing", :metric => metric, :value => value)
+
       message = [event.sprintf(metric), event.sprintf(value).to_f,
                  event.sprintf("%{+%s}")].join(" ")
+
+      @logger.debug("Sending carbon message", :message => message, :host => @host, :port => @port)
+
       # TODO(sissel): Test error cases. Catch exceptions. Find fortune and glory.
       begin
         @socket.puts(message)
diff --git a/lib/logstash/time.rb b/lib/logstash/time_addon.rb
similarity index 100%
rename from lib/logstash/time.rb
rename to lib/logstash/time_addon.rb
