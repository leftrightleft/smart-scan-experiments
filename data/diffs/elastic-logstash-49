diff --git a/lib/logstash/filters/grok.rb b/lib/logstash/filters/grok.rb
index 8d81a2a15eb..c9a4a6ad6b6 100644
--- a/lib/logstash/filters/grok.rb
+++ b/lib/logstash/filters/grok.rb
@@ -201,6 +201,16 @@ def filter(event)
               value = value.to_f
           end
 
+	  # try automatic coercion to int if possible
+	  valueint = value.to_i
+	  # check if it is reversible (no loss)
+	  if valueint.to_s == value
+	    coercedvalue = valueint
+	  else
+	    coercedvalue = value
+	  end
+	  value = coercedvalue
+
           if fieldvalue == value and field == "@message"
             # Skip patterns that match the entire message
             @logger.debug("Skipping capture '#{key}' since it matches the whole line.")
@@ -225,6 +235,12 @@ def filter(event)
             event.fields[key] << value
           end
         end # match.each_capture
+        
+        #The following should probably be governed by a configuration option
+        #If there is a single value on an array, set the key to the single value
+        event.fields.each { |k, v| event.fields[k] = v.first if v.is_a?(Array) && v.length == 1 }
+        #Also, empty fields are forced to be empty, not a null array
+        event.fields.each { |k, v| event.fields[k] = nil if v.is_a?(Array) && v.length == 0 }
 
         filter_matched(event)
       end # event[field]
