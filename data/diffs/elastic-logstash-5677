diff --git a/logstash-core/lib/logstash/config/config_ast.rb b/logstash-core/lib/logstash/config/config_ast.rb
index 6963fc7d31e..a926cec3518 100644
--- a/logstash-core/lib/logstash/config/config_ast.rb
+++ b/logstash-core/lib/logstash/config/config_ast.rb
@@ -155,14 +155,27 @@ def initialize(*args)
     def compile_initializer
       generate_variables
       code = []
+
+      if LogStash::SETTINGS.get_value("config.simulate")
+        code << <<-CODE
+          @inputs << plugin("input", "stdin")
+          @generated_objects[:stdout_simulate] = plugin("output", "stdout")
+          @outputs << @generated_objects[:stdout_simulate]
+        CODE
+      end
+
       @variables.each do |plugin, name|
 
 
-        code << <<-CODE
+        plugin_declare_code = <<-CODE
           @generated_objects[:#{name}] = #{plugin.compile_initializer}
           @#{plugin.plugin_type}s << @generated_objects[:#{name}]
         CODE
 
+        unless LogStash::SETTINGS.get_value("config.simulate") && plugin.plugin_type == "input"
+          code << plugin_declare_code
+        end
+
         # The flush method for this filter.
         if plugin.plugin_type == "filter"
 
@@ -255,6 +268,9 @@ def compile
           events = @generated_objects[:#{variable_name}].multi_filter(events)
         CODE
       when "output"
+        if LogStash::SETTINGS.get_value("config.simulate")
+          variable_name = "stdout_simulate"
+        end
         return "targeted_outputs << @generated_objects[:#{variable_name}]\n"
       when "codec"
         settings = attributes.recursive_select(Attribute).collect(&:compile).reject(&:empty?)
diff --git a/logstash-core/lib/logstash/environment.rb b/logstash-core/lib/logstash/environment.rb
index 3ea629623fd..6954b6ffe01 100644
--- a/logstash-core/lib/logstash/environment.rb
+++ b/logstash-core/lib/logstash/environment.rb
@@ -24,6 +24,7 @@ module LogStash
                     Setting.new("path.plugins", Array, []),
             Setting::String.new("interactive", nil, false),
            Setting::Boolean.new("config.debug", false),
+           Setting::Boolean.new("config.simulate", false),
             Setting::String.new("log.level", "warn", true, ["quiet", "verbose", "warn", "debug"]),
            Setting::Boolean.new("version", false),
            Setting::Boolean.new("help", false),
diff --git a/logstash-core/lib/logstash/runner.rb b/logstash-core/lib/logstash/runner.rb
index bd85b77b752..62c90ef052d 100644
--- a/logstash-core/lib/logstash/runner.rb
+++ b/logstash-core/lib/logstash/runner.rb
@@ -132,6 +132,11 @@ class LogStash::Runner < Clamp::StrictCommand
     :attribute_name => "path.settings",
     :default => LogStash::SETTINGS.get_default("path.settings")
 
+  option ["--config.simulate"], :flag,
+    I18n.t("logstash.runner.flag.config_simulate"),
+    :attribute_name => "config.simulate",
+    :default => LogStash::SETTINGS.get_default("config.simulate")
+
   attr_reader :agent
 
   def initialize(*args)
