diff --git a/lib/logstash/event.rb b/lib/logstash/event.rb
index bb8b62c111f..25af5675def 100644
--- a/lib/logstash/event.rb
+++ b/lib/logstash/event.rb
@@ -187,7 +187,7 @@ def remove(field)
   #   "type is foo and source is bar"
   #
   # If a %{name} value is an array, then we will join by ','
-  # If a %{name} value does not exist, then no substitution occurs.
+  # If a %{name} value does not exist, then the token is removed.
   #
   # TODO(sissel): It is not clear what the value of a field that 
   # is an array (or hash?) should be. Join by comma? Something else?
@@ -220,9 +220,15 @@ def sprintf(format)
         # Use an event field.
         value = self[key]
         if value.nil?
-          tok # leave the %{foo} if this field does not exist in this event.
+          # check within the fields array
+          subvalue = self["@fields"][key]
+          if subvalue.nil?
+            nil # return nil to allow failovers
+          else
+            subvalue # use the value in the fields array
+          end
         elsif value.is_a?(Array)
-          value.join(",") # Join by ',' if value is an rray
+          value.join(",") # Join by ',' if value is an array
         else
           value # otherwise return the value
         end
diff --git a/lib/logstash/outputs/gelf.rb b/lib/logstash/outputs/gelf.rb
index f773a3016ee..543b25f42af 100644
--- a/lib/logstash/outputs/gelf.rb
+++ b/lib/logstash/outputs/gelf.rb
@@ -33,11 +33,11 @@ class LogStash::Outputs::Gelf < LogStash::Outputs::Base
   # "debug", "info", "warn", "error", "fatal", "unknown" (case insensitive).
   # Single-character versions of these are also valid, "d", "i", "w", "e", "f",
   # "u"
-  config :level, :validate => :array, :default => [ "%{severity}", "INFO" ]
+  config :level, :validate => :array, :default => [ "%{severity}", "%{level}", "INFO" ]
 
   # The GELF facility. Dynamic values like %{foo} are permitted here; this
   # is useful if you need to use a value from the event as the facility name.
-  config :facility, :validate => :string, :default => "logstash-gelf"
+  config :facility, :validate => :string, :default => [ "%{facility}", "logstash-gelf" ]
 
   # Ship metadata within event object?
   config :ship_metadata, :validate => :boolean, :default => true
@@ -92,6 +92,22 @@ def receive(event)
     m["host"] = event.sprintf(@sender)
     m["file"] = event["@source_path"]
 
+    # set facility using optional failover array
+    if @facility.is_a?(Array)
+      @facility.each do |value|
+        parsed_value = event.sprintf(value)
+        if !parsed_value.empty?
+          m["facility"] = parsed_value
+          break
+        end
+      end
+    else
+      m["facility"] = event.sprintf(@facility)
+    end
+
+    # graylog2 chokes on the old facility field hanging around
+    event["@fields"].delete("facility")
+    
     if @ship_metadata
         event.fields.each do |name, value|
           next if value == nil
@@ -115,15 +131,12 @@ def receive(event)
       end
     end
 
-    # set facility as defined
-    m["facility"] = event.sprintf(@facility)
-
     # Probe severity array levels
     level = nil
     if @level.is_a?(Array)
       @level.each do |value|
         parsed_value = event.sprintf(value)
-        if parsed_value
+        if !parsed_value.empty?
           level = parsed_value
           break
         end
