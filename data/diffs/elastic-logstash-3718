diff --git a/lib/logstash/string_interpolation.rb b/lib/logstash/string_interpolation.rb
index 93a8c0be27d..2340f0a8b4c 100644
--- a/lib/logstash/string_interpolation.rb
+++ b/lib/logstash/string_interpolation.rb
@@ -1,3 +1,5 @@
+# encoding: utf-8
+
 require "thread_safe"
 require "forwardable"
 
@@ -17,9 +19,9 @@ def evaluate(event, template)
       if template.is_a?(Float) && (template < MIN_FLOAT_BEFORE_SCI_NOT || template >= MAX_FLOAT_BEFORE_SCI_NOT)
         return ("%.15f" % template).sub(/0*$/,"")
       end
-      
+
       template = template.to_s
-      
+
       return template if not_cachable?(template)
 
       compiled = CACHE.get_or_default(template, nil) || CACHE.put(template, compile_template(template))
diff --git a/spec/core/event_spec.rb b/spec/core/event_spec.rb
index 8cb7a5340a7..798cab1bb04 100644
--- a/spec/core/event_spec.rb
+++ b/spec/core/event_spec.rb
@@ -99,6 +99,16 @@
       it "should return a json string if the key is a hash" do
         expect(subject.sprintf("%{[j][k3]}")).to eq("{\"4\":\"m\"}")
       end
+
+      context "#encoding" do
+        it "should return known patterns as UTF-8" do
+          expect(subject.sprintf("%{message}").encoding).to eq(Encoding::UTF_8)
+        end
+
+        it "should return unknown patterns as UTF-8" do
+          expect(subject.sprintf("%{unkown_pattern}").encoding).to eq(Encoding::UTF_8)
+        end
+      end
     end
 
     context "#[]" do
