diff --git a/ci/acceptance_tests.sh b/ci/acceptance_tests.sh
index d68daa3fbd6..e0bbc484b4a 100755
--- a/ci/acceptance_tests.sh
+++ b/ci/acceptance_tests.sh
@@ -21,6 +21,15 @@ SELECTED_TEST_SUITE=$1
 # BUILD_ID unless you set this magic flag:  https://wiki.jenkins.io/display/JENKINS/ProcessTreeKiller
 export BUILD_ID=dontKillMe
 
+# Always run the halt, even if the test times out or an exit is sent
+cleanup() {
+  bundle exec rake qa:vm:halt
+}
+trap cleanup EXIT
+
+# Cleanup any stale VMs from old jobs first
+bundle exec rake qa:vm:halt
+
 if [[ $SELECTED_TEST_SUITE == $"redhat" ]]; then
   echo "Generating the RPM, make sure you start with a clean environment before generating other packages."
   rake artifact:rpm
@@ -60,3 +69,5 @@ elif [[ $SELECTED_TEST_SUITE == $"all" ]]; then
   bundle exec rake qa:vm:halt
   cd ..
 fi
+
+
diff --git a/qa/Rakefile b/qa/Rakefile
index 6081413d48b..b1e241732b1 100644
--- a/qa/Rakefile
+++ b/qa/Rakefile
@@ -40,7 +40,9 @@ namespace :qa do
       puts user_feedback_string_for("bootstrapping", args[:platform], machines, {"experimental" => experimental})
 
       options = {:debug => ENV['LS_QA_DEBUG']}
+      puts "Destroying #{machines}"
       LogStash::VagrantHelpers.destroy(machines, options)
+      puts "Bootstrapping #{machines}"
       LogStash::VagrantHelpers.bootstrap(machines, options)
     end
 
@@ -53,6 +55,7 @@ namespace :qa do
       puts user_feedback_string_for("halting", args[:platform], machines, {"experimental" => experimental})
       options = {:debug => ENV['LS_QA_DEBUG']}
 
+      puts "Halting #{machines}"
       LogStash::VagrantHelpers.halt(machines, options)
     end
   end
diff --git a/qa/platform_config.rb b/qa/platform_config.rb
index 6cfb9716bd6..097b7ef6a10 100644
--- a/qa/platform_config.rb
+++ b/qa/platform_config.rb
@@ -66,12 +66,15 @@ def each(&block)
 
   def filter_type(type_name, options={})
     experimental = options.fetch("experimental", false)
-    @platforms.select { |platform| platform.type == type_name && platform.experimental == experimental }
+    @platforms.select do |platform|
+      (type_name.nil? ? true : platform.type == type_name) &&
+          platform.experimental == experimental
+    end
   end
 
   def select_names_for(platform, options={})
     filter_options = { "experimental" => options.fetch("experimental", false) }
-    !platform.nil? ? filter_type(platform, filter_options).map{ |p| p.name } : ""
+    filter_type(platform, filter_options).map{ |p| p.name }
   end
 
   def types
diff --git a/qa/vagrant/helpers.rb b/qa/vagrant/helpers.rb
index 96ea1992a02..9c65f714fd6 100644
--- a/qa/vagrant/helpers.rb
+++ b/qa/vagrant/helpers.rb
@@ -6,17 +6,17 @@
 module LogStash
   class VagrantHelpers
 
-    def self.halt(machines="", options={})
+    def self.halt(machines=[], options={})
       debug = options.fetch(:debug, false)
       CommandExecutor.run!("vagrant halt #{machines.join(' ')}", debug)
     end
 
-    def self.destroy(machines="", options={})
+    def self.destroy(machines=[], options={})
       debug = options.fetch(:debug, false)
       CommandExecutor.run!("vagrant destroy --force #{machines.join(' ')}", debug) 
     end
 
-    def self.bootstrap(machines="", options={})
+    def self.bootstrap(machines=[], options={})
       debug = options.fetch(:debug, false)
       CommandExecutor.run!("vagrant up #{machines.join(' ')}", debug)
     end
