diff --git a/Gemfile.template b/Gemfile.template
index e2e48e4a5fc..71fa07fd0e8 100644
--- a/Gemfile.template
+++ b/Gemfile.template
@@ -9,7 +9,7 @@ gem "paquet", "~> 0.2"
 gem "pleaserun", "~>0.0.28", require: false
 gem "rake", "~> 12", require: false
 gem "ruby-progressbar", "~> 1", require: false
-gem "logstash-output-elasticsearch", ">= 10.4.2"
+gem "logstash-output-elasticsearch", ">= 11.6.0"
 gem "polyglot", require: false
 gem "treetop", require: false
 gem "faraday", "~> 1", :require => false # due elasticsearch-transport (elastic-transport) depending faraday '~> 1'
diff --git a/config/logstash.yml b/config/logstash.yml
index cb41b696f0d..94808539096 100644
--- a/config/logstash.yml
+++ b/config/logstash.yml
@@ -329,7 +329,8 @@
 #xpack.monitoring.elasticsearch.cloud_auth: logstash_system:password
 # another authentication alternative is to use an Elasticsearch API key
 #xpack.monitoring.elasticsearch.api_key: "id:api_key"
-#xpack.monitoring.elasticsearch.ssl.certificate_authority: [ "/path/to/ca.crt" ]
+#xpack.monitoring.elasticsearch.ssl.certificate_authority: "/path/to/ca.crt"
+#xpack.monitoring.elasticsearch.ssl.ca_trusted_fingerprint: xxxxxxxxxx
 #xpack.monitoring.elasticsearch.ssl.truststore.path: path/to/file
 #xpack.monitoring.elasticsearch.ssl.truststore.password: password
 #xpack.monitoring.elasticsearch.ssl.keystore.path: /path/to/file
@@ -352,7 +353,8 @@
 #xpack.management.elasticsearch.cloud_auth: logstash_admin_user:password
 # another authentication alternative is to use an Elasticsearch API key
 #xpack.management.elasticsearch.api_key: "id:api_key"
-#xpack.management.elasticsearch.ssl.certificate_authority: [ "/path/to/ca.crt" ]
+#xpack.management.elasticsearch.ssl.ca_trusted_fingerprint: xxxxxxxxxx
+#xpack.management.elasticsearch.ssl.certificate_authority: "/path/to/ca.crt"
 #xpack.management.elasticsearch.ssl.truststore.path: /path/to/file
 #xpack.management.elasticsearch.ssl.truststore.password: password
 #xpack.management.elasticsearch.ssl.keystore.path: /path/to/file
diff --git a/docker/data/logstash/env2yaml/env2yaml.go b/docker/data/logstash/env2yaml/env2yaml.go
index 575826633c9..495dc6703ed 100644
--- a/docker/data/logstash/env2yaml/env2yaml.go
+++ b/docker/data/logstash/env2yaml/env2yaml.go
@@ -115,6 +115,7 @@ func normalizeSetting(setting string) (string, error) {
 		"xpack.monitoring.elasticsearch.cloud_id",
 		"xpack.monitoring.elasticsearch.sniffing",
 		"xpack.monitoring.elasticsearch.ssl.certificate_authority",
+		"xpack.monitoring.elasticsearch.ssl.ca_trusted_fingerprint",
 		"xpack.monitoring.elasticsearch.ssl.verification_mode",
 		"xpack.monitoring.elasticsearch.ssl.truststore.path",
 		"xpack.monitoring.elasticsearch.ssl.truststore.password",
@@ -132,6 +133,7 @@ func normalizeSetting(setting string) (string, error) {
 		"xpack.management.elasticsearch.cloud_id",
 		"xpack.management.elasticsearch.sniffing",
 		"xpack.management.elasticsearch.ssl.certificate_authority",
+		"xpack.management.elasticsearch.ssl.ca_trusted_fingerprint",
 		"xpack.management.elasticsearch.ssl.verification_mode",
 		"xpack.management.elasticsearch.ssl.truststore.path",
 		"xpack.management.elasticsearch.ssl.truststore.password",
diff --git a/docs/static/monitoring/monitoring-internal-legacy.asciidoc b/docs/static/monitoring/monitoring-internal-legacy.asciidoc
index bae007264f3..f796c303e32 100644
--- a/docs/static/monitoring/monitoring-internal-legacy.asciidoc
+++ b/docs/static/monitoring/monitoring-internal-legacy.asciidoc
@@ -98,6 +98,26 @@ can specify the location of the PEM encoded certificate with the
 xpack.monitoring.elasticsearch.ssl.certificate_authority: /path/to/ca.crt
 --------------------------------------------------
 
+To add a CA without having it loaded on disk, you can specify a hex-encoded
+SHA 256 fingerprint of the DER-formatted CA with the `ca_trusted_fingerprint` setting:
+
+[source,yaml]
+--------------------------------------------------
+xpack.monitoring.elasticsearch.ssl.ca_trusted_fingerprint: 2cfe62e474fb381cc7773c84044c28c9785ac5d1940325f942a3d736508de640
+--------------------------------------------------
+
+[NOTE]
+====
+A self-secured Elasticsearch cluster will provide the fingerprint of its CA to the console during setup.
+
+You can also get the SHA256 fingerprint of an Elasticsearch's CA using the `openssl` command-line utility on the Elasticsearch host:
+
+[source,shell]
+--------------------------------------------------
+openssl x509 -fingerprint -sha256 -in $ES_HOME/config/certs/http_ca.crt
+--------------------------------------------------
+====
+
 Alternatively, you can configure trusted certificates using a truststore
 (a Java Keystore file that contains the certificates):
 
diff --git a/docs/static/settings/configuration-management-settings.asciidoc b/docs/static/settings/configuration-management-settings.asciidoc
index 82d6d6acea6..45142a94c6a 100644
--- a/docs/static/settings/configuration-management-settings.asciidoc
+++ b/docs/static/settings/configuration-management-settings.asciidoc
@@ -64,6 +64,22 @@ If a user has created their own roles and granted them access to the .logstash i
 Optional setting that allows you to specify a proxy URL if Logstash needs to use a proxy
 to reach your Elasticsearch cluster.
 
+`xpack.management.elasticsearch.ssl.ca_trusted_fingerprint`::
+
+Optional setting that enables you to specify the hex-encoded SHA-256 fingerprint of the
+certificate authority for your {es} instance.
+[NOTE]
+=====
+A self-secured Elasticsearch cluster will provide the fingerprint of its CA to the console during setup.
+
+You can also get the SHA256 fingerprint of an Elasticsearch's CA using the `openssl` command-line utility on the Elasticsearch host:
+
+[source,shell]
+--------------------------------------------------
+openssl x509 -fingerprint -sha256 -in $ES_HOME/config/certs/http_ca.crt
+--------------------------------------------------
+=====
+
 `xpack.management.elasticsearch.ssl.certificate_authority`::
 
 Optional setting that enables you to specify a path to the `.pem` file for the
diff --git a/docs/static/settings/monitoring-settings-legacy.asciidoc b/docs/static/settings/monitoring-settings-legacy.asciidoc
index 56eba721baa..039b4ec3959 100644
--- a/docs/static/settings/monitoring-settings-legacy.asciidoc
+++ b/docs/static/settings/monitoring-settings-legacy.asciidoc
@@ -65,6 +65,22 @@ You can configure the following Transport Layer Security (TLS) or
 Secure Sockets Layer (SSL) settings. For more information, see 
 <<ls-monitoring-user>>.
 
+`xpack.monitoring.elasticsearch.ssl.ca_trusted_fingerprint`::
+
+Optional setting that enables you to specify the hex-encoded SHA-256 fingerprint of the
+certificate authority for your {es} instance.
+[NOTE]
+=====
+A self-secured Elasticsearch cluster will provide the fingerprint of its CA to the console during setup.
+
+You can also get the SHA256 fingerprint of an Elasticsearch's CA using the `openssl` command-line utility on the Elasticsearch host:
+
+[source,shell]
+--------------------------------------------------
+openssl x509 -fingerprint -sha256 -in $ES_HOME/config/certs/http_ca.crt
+--------------------------------------------------
+=====
+
 `xpack.monitoring.elasticsearch.ssl.certificate_authority`::
 
 Optional setting that enables you to specify a path to the `.pem` file for the
diff --git a/x-pack/lib/config_management/extension.rb b/x-pack/lib/config_management/extension.rb
index 06d849439c0..1c98065711b 100644
--- a/x-pack/lib/config_management/extension.rb
+++ b/x-pack/lib/config_management/extension.rb
@@ -32,6 +32,7 @@ def additionals_settings(settings)
         settings.register(LogStash::Setting::NullableString.new("xpack.management.elasticsearch.api_key"))
         settings.register(LogStash::Setting::NullableString.new("xpack.management.elasticsearch.proxy"))
         settings.register(LogStash::Setting::NullableString.new("xpack.management.elasticsearch.ssl.certificate_authority"))
+        settings.register(LogStash::Setting::NullableString.new("xpack.management.elasticsearch.ssl.ca_trusted_fingerprint"))
         settings.register(LogStash::Setting::NullableString.new("xpack.management.elasticsearch.ssl.truststore.path"))
         settings.register(LogStash::Setting::NullableString.new("xpack.management.elasticsearch.ssl.truststore.password"))
         settings.register(LogStash::Setting::NullableString.new("xpack.management.elasticsearch.ssl.keystore.path"))
diff --git a/x-pack/lib/helpers/elasticsearch_options.rb b/x-pack/lib/helpers/elasticsearch_options.rb
index 8ecbed03c6d..c3afb64fe72 100644
--- a/x-pack/lib/helpers/elasticsearch_options.rb
+++ b/x-pack/lib/helpers/elasticsearch_options.rb
@@ -8,6 +8,7 @@ module ElasticsearchOptions
 
     ES_SETTINGS = %w(
       ssl.certificate_authority
+      ssl.ca_trusted_fingerprint
       ssl.truststore.path
       ssl.keystore.path
       hosts
@@ -29,6 +30,7 @@ module ElasticsearchOptions
       "proxy" => "proxy",
       "sniffing" => "sniffing",
       "ssl.certificate_authority" => "cacert",
+      "ssl.ca_trusted_fingerprint" => "ca_trusted_fingerprint",
       "ssl.truststore.path" => "truststore",
       "ssl.truststore.password" => "truststore_password",
       "ssl.keystore.path" => "keystore",
@@ -93,6 +95,7 @@ def ssl?(feature, settings, prefix)
       return true if verify_https_scheme(feature, settings, prefix)
       return true if settings.set?("#{prefix}#{feature}.elasticsearch.cloud_id") # cloud_id always resolves to https hosts
       return true if settings.set?("#{prefix}#{feature}.elasticsearch.ssl.certificate_authority")
+      return true if settings.set?("#{prefix}#{feature}.elasticsearch.ssl.ca_trusted_fingerprint")
       return true if settings.set?("#{prefix}#{feature}.elasticsearch.ssl.truststore.path") && settings.set?("#{prefix}#{feature}.elasticsearch.ssl.truststore.password")
       return true if settings.set?("#{prefix}#{feature}.elasticsearch.ssl.keystore.path") && settings.set?("#{prefix}#{feature}.elasticsearch.ssl.keystore.password")
 
diff --git a/x-pack/lib/monitoring/monitoring.rb b/x-pack/lib/monitoring/monitoring.rb
index 4ce34cfed51..c8ad7c8aac9 100644
--- a/x-pack/lib/monitoring/monitoring.rb
+++ b/x-pack/lib/monitoring/monitoring.rb
@@ -35,6 +35,7 @@ def initialize(node_uuid,
         @proxy = es_settings['proxy']
         @ssl = es_settings['ssl']
         @ca_path = es_settings['cacert']
+        @ca_trusted_fingerprint = es_settings['ca_trusted_fingerprint']
         @truststore_path = es_settings['truststore']
         @truststore_password = es_settings['truststore_password']
         @keystore_path = es_settings['keystore']
@@ -44,7 +45,7 @@ def initialize(node_uuid,
       end
 
       attr_accessor :system_api_version, :es_hosts, :user, :password, :node_uuid, :cloud_id, :cloud_auth, :api_key
-      attr_accessor :proxy, :ssl, :ca_path, :truststore_path, :truststore_password
+      attr_accessor :proxy, :ssl, :ca_path, :ca_trusted_fingerprint, :truststore_path, :truststore_password
       attr_accessor :keystore_path, :keystore_password, :sniffing, :ssl_certificate_verification
 
       def collection_interval
@@ -76,7 +77,7 @@ def api_key?
       end
 
       def ssl?
-        ssl || ca_path || (truststore_path && truststore_password) || (keystore_path && keystore_password)
+        ssl || ca_path || ca_trusted_fingerprint || truststore? || keystore?
       end
 
       def truststore?
@@ -263,6 +264,7 @@ def register_monitoring_settings(settings, prefix = "")
       settings.register(LogStash::Setting::NullableString.new("#{prefix}monitoring.elasticsearch.cloud_auth"))
       settings.register(LogStash::Setting::NullableString.new("#{prefix}monitoring.elasticsearch.api_key"))
       settings.register(LogStash::Setting::NullableString.new("#{prefix}monitoring.elasticsearch.ssl.certificate_authority"))
+      settings.register(LogStash::Setting::NullableString.new("#{prefix}monitoring.elasticsearch.ssl.ca_trusted_fingerprint"))
       settings.register(LogStash::Setting::NullableString.new("#{prefix}monitoring.elasticsearch.ssl.truststore.path"))
       settings.register(LogStash::Setting::NullableString.new("#{prefix}monitoring.elasticsearch.ssl.truststore.password"))
       settings.register(LogStash::Setting::NullableString.new("#{prefix}monitoring.elasticsearch.ssl.keystore.path"))
diff --git a/x-pack/lib/template.cfg.erb b/x-pack/lib/template.cfg.erb
index 6ad2d94b63b..c85faee991d 100644
--- a/x-pack/lib/template.cfg.erb
+++ b/x-pack/lib/template.cfg.erb
@@ -41,6 +41,9 @@ output {
     <% if ca_path %>
         cacert => "<%= ca_path %>"
     <% end %>
+    <% if ca_trusted_fingerprint %>
+        ca_trusted_fingerprint => <%= ca_trusted_fingerprint.inspect %>
+    <% end %>
     <% if truststore? %>
         truststore => "<%= truststore_path %>"
         truststore_password => "<%= truststore_password %>"
diff --git a/x-pack/spec/config_management/extension_spec.rb b/x-pack/spec/config_management/extension_spec.rb
index b40a7f1402e..0dca5f4a4de 100644
--- a/x-pack/spec/config_management/extension_spec.rb
+++ b/x-pack/spec/config_management/extension_spec.rb
@@ -35,6 +35,7 @@
         "xpack.management.elasticsearch.username" => [LogStash::Setting::String, "logstash_system"],
         "xpack.management.elasticsearch.password" => [LogStash::Setting::String, nil],
         "xpack.management.elasticsearch.ssl.certificate_authority" => [LogStash::Setting::NullableString, nil],
+        "xpack.management.elasticsearch.ssl.ca_trusted_fingerprint" => [LogStash::Setting::NullableString, nil],
         "xpack.management.elasticsearch.ssl.truststore.path" => [LogStash::Setting::NullableString, nil],
         "xpack.management.elasticsearch.ssl.truststore.password" => [LogStash::Setting::NullableString, nil],
         "xpack.management.elasticsearch.ssl.keystore.path" => [LogStash::Setting::NullableString, nil],
diff --git a/x-pack/spec/helpers/elasticsearch_options_spec.rb b/x-pack/spec/helpers/elasticsearch_options_spec.rb
index 6303a9c030d..1fee8e6962b 100644
--- a/x-pack/spec/helpers/elasticsearch_options_spec.rb
+++ b/x-pack/spec/helpers/elasticsearch_options_spec.rb
@@ -35,6 +35,21 @@
     end
   end
 
+  context "with ca_trusted_fingerprint" do
+    let(:ca_trusted_fingerprint) { SecureRandom.hex(32) }
+    let(:settings) { super().merge("xpack.monitoring.elasticsearch.ssl.ca_trusted_fingerprint" => ca_trusted_fingerprint) }
+
+    it "creates the elasticsearch output options hash" do
+      expect(test_class.es_options_from_settings('monitoring', system_settings)).to include(
+                                                                                      "hosts" => elasticsearch_url,
+                                                                                      "user" => elasticsearch_username,
+                                                                                      "password" => elasticsearch_password,
+                                                                                      "ssl" => true,
+                                                                                      "ca_trusted_fingerprint" => ca_trusted_fingerprint
+                                                                                    )
+    end
+  end
+
   context "with truststore" do
     let(:elasticsearch_truststore_path) { Stud::Temporary.file.path }
     let(:elasticsearch_truststore_password) { "truststore_password" }
diff --git a/x-pack/spec/monitoring/pipeline_register_hook_spec.rb b/x-pack/spec/monitoring/pipeline_register_hook_spec.rb
index a42b955eb23..8c2965c8ab7 100644
--- a/x-pack/spec/monitoring/pipeline_register_hook_spec.rb
+++ b/x-pack/spec/monitoring/pipeline_register_hook_spec.rb
@@ -6,7 +6,7 @@
 
 describe LogStash::MonitoringExtension::PipelineRegisterHook do
 
-  subject { described_class.new }
+  subject(:monitoring_extension) { described_class.new }
 
   before(:all) {
     @extension = LogStash::MonitoringExtension.new
@@ -68,6 +68,30 @@
         end
       end
     end
+
+    context 'ssl ca_trusted_fingerprint setting' do
+      let(:ca_trusted_fingerprint) { SecureRandom.hex(32) }
+
+      let(:settings) do
+        @sys_settings.clone.tap do |s|
+          s.reset
+          s.set_value("xpack.monitoring.enabled", true)
+          s.set_value("xpack.monitoring.elasticsearch.hosts", "https://localhost:9200")
+          s.set_value("xpack.monitoring.elasticsearch.username", "elastic")
+          s.set_value("xpack.monitoring.elasticsearch.password", "changeme")
+
+          s.set_value("xpack.monitoring.elasticsearch.ssl.ca_trusted_fingerprint", ca_trusted_fingerprint)
+        end
+      end
+
+      context 'the generated pipeline' do
+        subject(:generated_pipeline_config) { monitoring_extension.generate_pipeline_config(settings) }
+
+        it %Q(includes `ca_trusted_fingerprint` with the value of the provided `ssl.ca_trusted_fingerprint`) do
+          expect(generated_pipeline_config).to include(%Q(ca_trusted_fingerprint => "#{ca_trusted_fingerprint}"))
+        end
+      end
+    end
   end
 
 end
