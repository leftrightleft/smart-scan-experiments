diff --git a/Gemfile b/Gemfile
index 2e74234e4b6..9c93ab87fda 100755
--- a/Gemfile
+++ b/Gemfile
@@ -32,6 +32,7 @@ gem "xmpp4r", "0.5" # outputs/xmpp, # License: As-Is
 gem "gelfd", "0.2.0" #inputs/gelf, # License: Apache 2.0
 gem "jruby-win32ole", :platforms => :jruby # inputs/eventlog, # License: JRuby
 
+gem "ffi", "1.0.11"
 gem "ffi-rzmq", "0.9.0"
 gem "ffi"
 
diff --git a/Gemfile.lock b/Gemfile.lock
index 25600d27907..294b79b64e4 100755
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -15,6 +15,7 @@ GEM
     bunny (0.7.9)
     cabin (0.4.4)
       json
+    columnize (0.3.4)
     excon (0.14.0)
     ffi (1.0.11)
     ffi (1.0.11-java)
diff --git a/lib/logstash/outputs/file.rb b/lib/logstash/outputs/file.rb
index 95e579558f4..697bf1f52d7 100644
--- a/lib/logstash/outputs/file.rb
+++ b/lib/logstash/outputs/file.rb
@@ -1,5 +1,6 @@
 require "logstash/namespace"
 require "logstash/outputs/base"
+require "logstash/util/signals"
 require "zlib"
 
 # File output.
@@ -41,6 +42,27 @@ class LogStash::Outputs::File < LogStash::Outputs::Base
   def register
     require "fileutils" # For mkdir_p
     @files = {}
+
+    # Hook SIGHUP (1) to this instance
+    LogStash::Util::Signals::LibC.signal(1) do |signal|
+        if signal == 1
+            path_list = []
+            @files.each do |file_path, file_desc| 
+                file_desc.flush
+                file_desc.close
+                path_list << file_path
+            end
+            @files.clear
+
+            # now reopen everything
+            path_list.each do |fpath|
+            fd = open(fpath)
+            # Have to explicitly flush incase we rotate right away
+            fd.flush
+            end
+        end
+    end
+
     now = Time.now
     @last_flush_cycle = now
     @last_stale_cleanup_cycle = now
@@ -49,6 +71,7 @@ def register
     @metric_flushes = @logger.metrics.timer(self, "flushes")
     @metric_write_delay = @logger.metrics.timer(self, "write-delay")
     @metric_write_bytes = @logger.metrics.histogram(self, "write-bytes")
+
   end # def register
 
   public
@@ -58,7 +81,7 @@ def receive(event)
     path = event.sprintf(@path)
     fd = open(path)
 
-    # TODO(sissel): Check if we should rotate the file.
+    # TODO(sissel): Check if we should close files not recently used.
 
     if @message_format
       output = event.sprintf(@message_format) + "\n"
@@ -175,6 +198,9 @@ def method_missing(method_name, *args, &block)
     else
       super
     end
+
+    @files[path].flush
+
   end
   attr_accessor :active
 end
diff --git a/lib/logstash/util/signals.rb b/lib/logstash/util/signals.rb
new file mode 100644
index 00000000000..1d044fdee19
--- /dev/null
+++ b/lib/logstash/util/signals.rb
@@ -0,0 +1,13 @@
+# 
+# Add support for capturing signals into JRuby
+#
+require 'ffi'
+
+module LogStash::Util::Signals
+    module LibC
+      extend FFI::Library
+      ffi_lib FFI::Library::LIBC
+      callback :invoke, [ :int ], :void
+      attach_function :signal, [ :int, :invoke], :void
+    end
+end
