diff --git a/docs/static/monitoring-apis.asciidoc b/docs/static/monitoring-apis.asciidoc
index 98f246a402c..0d5ba228aa6 100644
--- a/docs/static/monitoring-apis.asciidoc
+++ b/docs/static/monitoring-apis.asciidoc
@@ -76,8 +76,8 @@ Where `<types>` is optional and specifies the types of node info you want to ret
 You can limit the info that's returned by combining any of the following types in a comma-separated list:
 
 [horizontal]
-<<node-pipeline-info,`pipeline`>>::
-Gets pipeline-specific information and settings.
+<<node-pipeline-info,`pipelines`>>::
+Gets pipeline-specific information and settings for each pipeline.
 <<node-os-info,`os`>>::
 Gets node-level info about the OS.
 <<node-jvm-info,`jvm`>>::
@@ -94,10 +94,10 @@ batch size, and batch delay:
 
 [source,js]
 --------------------------------------------------
-curl -XGET 'localhost:9600/_node/pipeline?pretty'
+curl -XGET 'localhost:9600/_node/pipelines?pretty'
 --------------------------------------------------
 
-If you want to view additional information about the pipeline, such as stats for each configured input, filter,
+If you want to view additional information about a pipeline, such as stats for each configured input, filter,
 or output stage, see the <<pipeline-stats>> section under the <<node-stats-api>>.
 
 Example response:
@@ -105,16 +105,50 @@ Example response:
 ["source","js",subs="attributes"]
 --------------------------------------------------
 {
-  "pipeline": {
-    "workers": 8,
-    "batch_size": 125,
-    "batch_delay": 5,
-    "config_reload_automatic": true,
-    "config_reload_interval": 3
-    "id" : "main"
+  "pipelines" : {
+    "test" : {
+      "workers" : 1,
+      "batch_size" : 1,
+      "batch_delay" : 5,
+      "config_reload_automatic" : false,
+      "config_reload_interval" : 3
+    },
+    "test2" : {
+      "workers" : 8,
+      "batch_size" : 125,
+      "batch_delay" : 5,
+      "config_reload_automatic" : false,
+      "config_reload_interval" : 3
+    }
   }
 --------------------------------------------------
 
+You can see the info for a specific pipeline by including the pipeline ID. In
+the following example, the ID of the pipeline is `test`:
+
+[source,js]
+--------------------------------------------------
+curl -XGET 'localhost:9600/_node/pipelines/test?pretty'
+--------------------------------------------------
+
+Example response:
+
+[source,json]
+--------------------------------------------------
+{
+  "pipelines" : {
+    "test" : {
+      "workers" : 1,
+      "batch_size" : 1,
+      "batch_delay" : 5,
+      "config_reload_automatic" : false,
+      "config_reload_interval" : 3
+    }
+  }
+------------------------------------------------
+
+If you specify an invalid pipeline ID, the request returns a 404 Not Found error.
+
 [[node-os-info]]
 ==== OS Info
 
@@ -241,8 +275,11 @@ Gets JVM stats, including stats about threads, memory usage, garbage collectors,
 and uptime.
 <<process-stats,`process`>>::
 Gets process stats, including stats about file descriptors, memory consumption, and CPU usage.
-<<pipeline-stats,`pipeline`>>::
-Gets runtime stats about the Logstash pipeline.
+<<event-stats,`events`>>:: 
+Gets event-related statistics for the Logstash instance (regardless of how many
+pipelines were created and destroyed).
+<<pipeline-stats,`pipelines`>>::
+Gets runtime stats about each Logstash pipeline.
 <<reload-stats,`reloads`>>::
 Gets runtime stats about config reload successes and failures.
 <<os-stats,`os`>>::
@@ -266,55 +303,55 @@ Example response:
 [source,js]
 --------------------------------------------------
 {
-  "jvm": {
-    "threads": {
-      "count": 35,
-      "peak_count": 36
+  "jvm" : {
+    "threads" : {
+      "count" : 49,
+      "peak_count" : 50
     },
-    "mem": {
-      "heap_used_in_bytes": 318691184,
-      "heap_used_percent": 15,
-      "heap_committed_in_bytes": 519045120,
-      "heap_max_in_bytes": 2075918336,
-      "non_heap_used_in_bytes": 189382304,
-      "non_heap_committed_in_bytes": 200728576,
-      "pools": {
-        "survivor": {
-          "peak_used_in_bytes": 8912896,
-          "used_in_bytes": 9538656,
-          "peak_max_in_bytes": 35782656,
-          "max_in_bytes": 71565312,
-          "committed_in_bytes": 17825792
+    "mem" : {
+      "heap_used_percent" : 14,
+      "heap_committed_in_bytes" : 309866496,
+      "heap_max_in_bytes" : 1037959168,
+      "heap_used_in_bytes" : 151686096,
+      "non_heap_used_in_bytes" : 122486176,
+      "non_heap_committed_in_bytes" : 133222400,
+      "pools" : {
+        "survivor" : {
+          "peak_used_in_bytes" : 8912896,
+          "used_in_bytes" : 288776,
+          "peak_max_in_bytes" : 35782656,
+          "max_in_bytes" : 35782656,
+          "committed_in_bytes" : 8912896
         },
-        "old": {
-          "peak_used_in_bytes": 106946320,
-          "used_in_bytes": 181913072,
-          "peak_max_in_bytes": 715849728,
-          "max_in_bytes": 1431699456,
-          "committed_in_bytes": 357957632
+        "old" : {
+          "peak_used_in_bytes" : 148656848,
+          "used_in_bytes" : 148656848,
+          "peak_max_in_bytes" : 715849728,
+          "max_in_bytes" : 715849728,
+          "committed_in_bytes" : 229322752
         },
-        "young": {
-          "peak_used_in_bytes": 71630848,
-          "used_in_bytes": 127239456,
-          "peak_max_in_bytes": 286326784,
-          "max_in_bytes": 572653568,
-          "committed_in_bytes": 143261696
+        "young" : {
+          "peak_used_in_bytes" : 71630848,
+          "used_in_bytes" : 2740472,
+          "peak_max_in_bytes" : 286326784,
+          "max_in_bytes" : 286326784,
+          "committed_in_bytes" : 71630848
         }
       }
     },
-    "gc": {
-      "collectors": {
-        "old": {
-          "collection_time_in_millis": 58,
-          "collection_count": 2
+    "gc" : {
+      "collectors" : {
+        "old" : {
+          "collection_time_in_millis" : 607,
+          "collection_count" : 12
         },
-        "young": {
-          "collection_time_in_millis": 338,
-          "collection_count": 26
+        "young" : {
+          "collection_time_in_millis" : 4904,
+          "collection_count" : 1033
         }
       }
     },
-    "uptime_in_millis": 382701
+    "uptime_in_millis" : 1809643
   }
 --------------------------------------------------
 
@@ -333,22 +370,46 @@ Example response:
 [source,js]
 --------------------------------------------------
 {
-  "process": {
-    "open_file_descriptors": 164,
-    "peak_open_file_descriptors": 166,
-    "max_file_descriptors": 10240,
-    "mem": {
-      "total_virtual_in_bytes": 5399474176
+  "process" : {
+    "open_file_descriptors" : 184,
+    "peak_open_file_descriptors" : 185,
+    "max_file_descriptors" : 10240,
+    "mem" : {
+      "total_virtual_in_bytes" : 5486125056
     },
-    "cpu": {
-      "total_in_millis": 72810537000,
-      "percent": 0,
-      "load_average": {
-        "1m": 2.41943359375
+    "cpu" : {
+      "total_in_millis" : 657136,
+      "percent" : 2,
+      "load_average" : {
+        "1m" : 2.38134765625
       }
     }
   }
-}
+--------------------------------------------------
+
+[[event-stats]]
+==== Event Stats
+
+The following request returns a JSON document containing event-related statistics
+for the Logstash instance:
+
+[source,js]
+--------------------------------------------------
+curl -XGET 'localhost:9600/_node/stats/events?pretty'
+--------------------------------------------------
+
+Example response:
+
+[source,js]
+--------------------------------------------------
+{
+  "events" : {
+    "in" : 293658,
+    "filtered" : 293658,
+    "out" : 293658,
+    "duration_in_millis" : 2324391,
+    "queue_push_duration_in_millis" : 343816
+  }
 --------------------------------------------------
 
 [[pipeline-stats]]
@@ -357,7 +418,7 @@ Example response:
 The following request returns a JSON document containing pipeline stats,
 including:
 
-* the number of events that were input, filtered, or output by the pipeline
+* the number of events that were input, filtered, or output by each pipeline
 * stats for each configured filter or output stage
 * info about config reload successes and failures
 (when <<reloading-config,config reload>> is enabled)
@@ -366,7 +427,7 @@ including:
 
 [source,js]
 --------------------------------------------------
-curl -XGET 'localhost:9600/_node/stats/pipeline?pretty'
+curl -XGET 'localhost:9600/_node/stats/pipelines?pretty'
 --------------------------------------------------
 
 Example response:
@@ -374,68 +435,180 @@ Example response:
 [source,js]
 --------------------------------------------------
 {
-  "pipeline" : {
-    "events" : {
-      "duration_in_millis" : 1955,
-      "in" : 100,
-      "filtered" : 100,
-      "out" : 100,
-      "queue_push_duration_in_millis" : 71
-    },
-    "plugins" : {
-      "inputs" : [ {
-        "id" : "729b0efdc657715a4a59103ab2643c010fc46e77-1",
-        "events" : {
-          "out" : 100,
-          "queue_push_duration_in_millis" : 71
-        },
-        "name" : "beats"
-      } ],
-      "filters" : [ {
-        "id" : "729b0efdc657715a4a59103ab2643c010fc46e77-2",
-        "events" : {
-          "duration_in_millis" : 64,
-          "in" : 100,
-          "out" : 100
-        },
-        "matches" : 100,
-        "patterns_per_field" : {
-          "message" : 1
-        },
-        "name" : "grok"
-      } ],
-      "outputs" : [ {
-        "id" : "729b0efdc657715a4a59103ab2643c010fc46e77-3",
-        "events" : {
-          "duration_in_millis" : 1724,
-          "in" : 100,
-          "out" : 100
-        },
-        "name" : "stdout"
-      } ]
-    },
-    "reloads" : {
-      "last_error" : null,
-      "successes" : 2,
-      "last_success_timestamp" : "2017-05-25T02:40:40.974Z",
-      "last_failure_timestamp" : null,
-      "failures" : 0
-    },
-    "queue" : {
-      "events" : 0,
-      "type" : "persisted",
-      "capacity" : {
-        "page_capacity_in_bytes" : 262144000,
-        "max_queue_size_in_bytes" : 8589934592,
-        "max_unread_events" : 0
+  "pipelines" : {
+    "test" : {
+      "events" : {
+        "duration_in_millis" : 365495,
+        "in" : 216485,
+        "filtered" : 216485,
+        "out" : 216485,
+        "queue_push_duration_in_millis" : 342466
+      },
+      "plugins" : {
+        "inputs" : [ {
+          "id" : "35131f351e2dc5ed13ee04265a8a5a1f95292165-1",
+          "events" : {
+            "out" : 216485,
+            "queue_push_duration_in_millis" : 342466
+          },
+          "name" : "beats"
+        } ],
+        "filters" : [ {
+          "id" : "35131f351e2dc5ed13ee04265a8a5a1f95292165-2",
+          "events" : {
+            "duration_in_millis" : 55969,
+            "in" : 216485,
+            "out" : 216485
+          },
+          "failures" : 216485,
+          "patterns_per_field" : {
+            "message" : 1
+          },
+          "name" : "grok"
+        }, {
+          "id" : "35131f351e2dc5ed13ee04265a8a5a1f95292165-3",
+          "events" : {
+            "duration_in_millis" : 3326,
+            "in" : 216485,
+            "out" : 216485
+          },
+          "name" : "geoip"
+        } ],
+        "outputs" : [ {
+          "id" : "35131f351e2dc5ed13ee04265a8a5a1f95292165-4",
+          "events" : {
+            "duration_in_millis" : 278557,
+            "in" : 216485,
+            "out" : 216485
+          },
+          "name" : "elasticsearch"
+        } ]
       },
-      "data" : {
-        "path" : "/path/to/data/queue",
-        "free_space_in_bytes" : 89280552960,
-        "storage_type" : "hfs"
+      "reloads" : {
+        "last_error" : null,
+        "successes" : 0,
+        "last_success_timestamp" : null,
+        "last_failure_timestamp" : null,
+        "failures" : 0
+      },
+      "queue" : {
+        "type" : "memory"
       }
     },
-    "id" : "main"
+    "test2" : {
+      "events" : {
+        "duration_in_millis" : 2222229,
+        "in" : 87247,
+        "filtered" : 87247,
+        "out" : 87247,
+        "queue_push_duration_in_millis" : 1532
+      },
+      "plugins" : {
+        "inputs" : [ {
+          "id" : "d7ea8941c0fc48ac58f89c84a9da482107472b82-1",
+          "events" : {
+            "out" : 87247,
+            "queue_push_duration_in_millis" : 1532
+          },
+          "name" : "twitter"
+        } ],
+        "filters" : [ ],
+        "outputs" : [ {
+          "id" : "d7ea8941c0fc48ac58f89c84a9da482107472b82-2",
+          "events" : {
+            "duration_in_millis" : 139545,
+            "in" : 87247,
+            "out" : 87247
+          },
+          "name" : "elasticsearch"
+        } ]
+      },
+      "reloads" : {
+        "last_error" : null,
+        "successes" : 0,
+        "last_success_timestamp" : null,
+        "last_failure_timestamp" : null,
+        "failures" : 0
+      },
+      "queue" : {
+        "type" : "memory"
+      }
+    }
+  }
+--------------------------------------------------
+
+You can see the stats for a specific pipeline by including the pipeline ID. In
+the following example, the ID of the pipeline is `test`:
+
+[source,js]
+--------------------------------------------------
+curl -XGET 'localhost:9600/_node/stats/pipelines/test?pretty'
+--------------------------------------------------
+
+Example response:
+
+[source,js]
+--------------------------------------------------
+{
+    "test" : {
+      "events" : {
+        "duration_in_millis" : 365495,
+        "in" : 216485,
+        "filtered" : 216485,
+        "out" : 216485,
+        "queue_push_duration_in_millis" : 342466
+      },
+      "plugins" : {
+        "inputs" : [ {
+          "id" : "35131f351e2dc5ed13ee04265a8a5a1f95292165-1",
+          "events" : {
+            "out" : 216485,
+            "queue_push_duration_in_millis" : 342466
+          },
+          "name" : "beats"
+        } ],
+        "filters" : [ {
+          "id" : "35131f351e2dc5ed13ee04265a8a5a1f95292165-2",
+          "events" : {
+            "duration_in_millis" : 55969,
+            "in" : 216485,
+            "out" : 216485
+          },
+          "failures" : 216485,
+          "patterns_per_field" : {
+            "message" : 1
+          },
+          "name" : "grok"
+        }, {
+          "id" : "35131f351e2dc5ed13ee04265a8a5a1f95292165-3",
+          "events" : {
+            "duration_in_millis" : 3326,
+            "in" : 216485,
+            "out" : 216485
+          },
+          "name" : "geoip"
+        } ],
+        "outputs" : [ {
+          "id" : "35131f351e2dc5ed13ee04265a8a5a1f95292165-4",
+          "events" : {
+            "duration_in_millis" : 278557,
+            "in" : 216485,
+            "out" : 216485
+          },
+          "name" : "elasticsearch"
+        } ]
+      },
+      "reloads" : {
+        "last_error" : null,
+        "successes" : 0,
+        "last_success_timestamp" : null,
+        "last_failure_timestamp" : null,
+        "failures" : 0
+      },
+      "queue" : {
+        "type" : "memory"
+      }
+    }
   }
 }
 --------------------------------------------------
@@ -517,64 +690,29 @@ Logstash.
 
 Example response:
 
-[source,js]
+["source","sh",subs="attributes"]
 --------------------------------------------------
 {
-    "time": "2017-01-12T12:09:45-08:00",
-    "busiest_threads": 3,
-    "threads": [
-      {
-        "name": "LogStash::Runner",
-        "percent_of_cpu_time": 1.07,
-        "state": "timed_waiting",
-        "traces": [
-          "java.lang.Object.wait(Native Method)",
-          "java.lang.Thread.join(Thread.java:1253)",
-          "org.jruby.internal.runtime.NativeThread.join(NativeThread.java:75)",
-          "org.jruby.RubyThread.join(RubyThread.java:697)",
-          "org.jruby.RubyThread$INVOKER$i$0$1$join.call(RubyThread$INVOKER$i$0$1$join.gen)",
-          "org.jruby.internal.runtime.methods.JavaMethod$JavaMethodN.call(JavaMethod.java:663)",
-          "org.jruby.internal.runtime.methods.DynamicMethod.call(DynamicMethod.java:198)",
-          "org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)",
-          "org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)",
-          "org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)"
-        ]
-      },
-      {
-        "name": "[main]>worker7",
-        "percent_of_cpu_time": 0.71,
-        "state": "waiting",
-        "traces": [
-          "sun.misc.Unsafe.park(Native Method)",
-          "java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)",
-          "java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)",
-          "java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:897)",
-          "java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1222)",
-          "java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:335)",
-          "org.jruby.RubyThread.lockInterruptibly(RubyThread.java:1470)",
-          "org.jruby.ext.thread.Mutex.lock(Mutex.java:91)",
-          "org.jruby.ext.thread.Mutex.synchronize(Mutex.java:147)",
-          "org.jruby.ext.thread.Mutex$INVOKER$i$0$0$synchronize.call(Mutex$INVOKER$i$0$0$synchronize.gen)"
-        ]
-      },
-      {
-        "name": "[main]>worker3",
-        "percent_of_cpu_time": 0.71,
-        "state": "waiting",
-        "traces": [
-          "sun.misc.Unsafe.park(Native Method)",
-          "java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)",
-          "java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)",
-          "java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:897)",
-          "java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1222)",
-          "java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:335)",
-          "org.jruby.RubyThread.lockInterruptibly(RubyThread.java:1470)",
-          "org.jruby.ext.thread.Mutex.lock(Mutex.java:91)",
-          "org.jruby.ext.thread.Mutex.synchronize(Mutex.java:147)",
-          "org.jruby.ext.thread.Mutex$INVOKER$i$0$0$synchronize.call(Mutex$INVOKER$i$0$0$synchronize.gen)"
-        ]
-      }
-    ]
+  "hot_threads" : {
+    "time" : "2017-06-06T18:25:28-07:00",
+    "busiest_threads" : 3,
+    "threads" : [ {
+      "name" : "Ruby-0-Thread-7",
+      "percent_of_cpu_time" : 0.0,
+      "state" : "timed_waiting",
+      "path" : "/path/to/logstash-{logstash_version}/vendor/bundle/jruby/1.9/gems/puma-2.16.0-java/lib/puma/thread_pool.rb:187",
+      "traces" : [ "java.lang.Object.wait(Native Method)", "org.jruby.RubyThread.sleep(RubyThread.java:1002)", "org.jruby.RubyKernel.sleep(RubyKernel.java:803)" ]
+    }, {
+      "name" : "[test2]>worker3",
+      "percent_of_cpu_time" : 0.85,
+      "state" : "waiting",
+      "traces" : [ "sun.misc.Unsafe.park(Native Method)", "java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)", "java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)" ]
+    }, {
+      "name" : "[test2]>worker2",
+      "percent_of_cpu_time" : 0.85,
+      "state" : "runnable",
+      "traces" : [ "org.jruby.RubyClass.allocate(RubyClass.java:225)", "org.jruby.RubyClass.newInstance(RubyClass.java:856)", "org.jruby.RubyClass$INVOKER$i$newInstance.call(RubyClass$INVOKER$i$newInstance.gen)" ]
+    } ]
   }
 }
 --------------------------------------------------
@@ -598,46 +736,26 @@ curl -XGET 'localhost:9600/_node/hot_threads?human=true'
 
 Example of a human-readable response:
 
-[source,js]
+["source","js",subs="attributes"]
 --------------------------------------------------
  ::: {}
- Hot threads at 2017-01-12T12:10:15-08:00, busiestThreads=3: 
+ Hot threads at 2017-06-06T18:31:17-07:00, busiestThreads=3: 
  ================================================================================
- 1.02 % of cpu usage, state: timed_waiting, thread name: 'LogStash::Runner' 
-	java.lang.Object.wait(Native Method)
-	java.lang.Thread.join(Thread.java:1253)
-	org.jruby.internal.runtime.NativeThread.join(NativeThread.java:75)
-	org.jruby.RubyThread.join(RubyThread.java:697)
-	org.jruby.RubyThread$INVOKER$i$0$1$join.call(RubyThread$INVOKER$i$0$1$join.gen)
-	org.jruby.internal.runtime.methods.JavaMethod$JavaMethodN.call(JavaMethod.java:663)
-	org.jruby.internal.runtime.methods.DynamicMethod.call(DynamicMethod.java:198)
-	org.jruby.runtime.callsite.CachingCallSite.cacheAndCall(CachingCallSite.java:306)
-	org.jruby.runtime.callsite.CachingCallSite.call(CachingCallSite.java:136)
-	org.jruby.ast.CallNoArgNode.interpret(CallNoArgNode.java:60)
+ 0.0 % of cpu usage, state: timed_waiting, thread name: 'Ruby-0-Thread-7' 
+ /path/to/logstash-{logstash_version}/vendor/bundle/jruby/1.9/gems/puma-2.16.0-java/lib/puma/thread_pool.rb:187
+	 java.lang.Object.wait(Native Method)
+	 org.jruby.RubyThread.sleep(RubyThread.java:1002)
+	 org.jruby.RubyKernel.sleep(RubyKernel.java:803)
  --------------------------------------------------------------------------------
- 0.71 % of cpu usage, state: waiting, thread name: '[main]>worker7' 
-	sun.misc.Unsafe.park(Native Method)
-	java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
-	java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
-	java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:897)
-	java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1222)
-	java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:335)
-	org.jruby.RubyThread.lockInterruptibly(RubyThread.java:1470)
-	org.jruby.ext.thread.Mutex.lock(Mutex.java:91)
-	org.jruby.ext.thread.Mutex.synchronize(Mutex.java:147)
-	org.jruby.ext.thread.Mutex$INVOKER$i$0$0$synchronize.call(Mutex$INVOKER$i$0$0$synchronize.gen)
+ 0.0 % of cpu usage, state: waiting, thread name: 'defaultEventExecutorGroup-5-4' 
+	 sun.misc.Unsafe.park(Native Method)
+	 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
+	 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
  --------------------------------------------------------------------------------
- 0.71 % of cpu usage, state: timed_waiting, thread name: '[main]>worker3' 
-	sun.misc.Unsafe.park(Native Method)
-	java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
-	java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)
-	java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)
-	java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)
-	sun.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
-	sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
-	java.lang.reflect.Method.invoke(Method.java:497)
-	org.jruby.javasupport.JavaMethod.invokeDirectWithExceptionHandling(JavaMethod.java:466)
-	org.jruby.javasupport.JavaMethod.invokeDirect(JavaMethod.java:324)
+ 0.05 % of cpu usage, state: timed_waiting, thread name: '[test]-pipeline-manager' 
+	 java.lang.Object.wait(Native Method)
+	 java.lang.Thread.join(Thread.java:1253)
+	 org.jruby.internal.runtime.NativeThread.join(NativeThread.java:75)
 
 --------------------------------------------------
 
