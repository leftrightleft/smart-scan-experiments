diff --git a/logstash-core/lib/logstash/util/password.rb b/logstash-core/lib/logstash/util/password.rb
index bb55ff1d0a6..f1f4dd2d44f 100644
--- a/logstash-core/lib/logstash/util/password.rb
+++ b/logstash-core/lib/logstash/util/password.rb
@@ -17,21 +17,7 @@
 
 # This class exists to quietly wrap a password string so that, when printed or
 # logged, you don't accidentally print the password itself.
-module LogStash module Util class Password
-  attr_reader :value
 
-  public
-  def initialize(password)
-    @value = password
-  end # def initialize
-
-  public
-  def to_s
-    return "<password>"
-  end # def to_s
-
-  public
-  def inspect
-    return to_s
-  end # def inspect
-end end end # class LogStash::Util::Password
+module LogStash; module Util
+    java_import "co.elastic.logstash.api.Password"
+end; end # class LogStash::Util::Password
diff --git a/logstash-core/src/main/java/co/elastic/logstash/api/Password.java b/logstash-core/src/main/java/co/elastic/logstash/api/Password.java
index 535a745fc2c..c89c315574b 100644
--- a/logstash-core/src/main/java/co/elastic/logstash/api/Password.java
+++ b/logstash-core/src/main/java/co/elastic/logstash/api/Password.java
@@ -20,10 +20,14 @@
 
 package co.elastic.logstash.api;
 
+import java.io.Serializable;
+
 /**
  * Wraps a password string so that it is not inadvertently printed or logged.
  */
-public class Password {
+public class Password implements Serializable {
+
+    private static final long serialVersionUID = -8683271728417419530L;
 
     private String password;
 
@@ -40,7 +44,13 @@ public String toString() {
         return "<password>";
     }
 
+    // Ruby code compatibility, value attribute
     public String getValue() {
         return getPassword();
     }
+
+    // Ruby code compatibility, inspect method
+    public String inspect() {
+        return toString();
+    }
 }
