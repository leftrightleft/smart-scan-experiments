diff --git a/lib/logstash/filters/grep.rb b/lib/logstash/filters/grep.rb
index aa6d37eb1bd..f39ca18e53c 100644
--- a/lib/logstash/filters/grep.rb
+++ b/lib/logstash/filters/grep.rb
@@ -83,7 +83,7 @@ def filter(event)
         if event[field].nil? and match["negate"] == true
           match_count += 1
         end
-        event[field].each do |value|
+        (event[field].is_a?(Array) ? event[field] : [event[field]]).each do |value|
           if match["negate"] == true
             @logger.debug("want negate match")
             next if re.match(value)
diff --git a/lib/logstash/inputs/amqp.rb b/lib/logstash/inputs/amqp.rb
index aebfc2031d5..fde344217a1 100644
--- a/lib/logstash/inputs/amqp.rb
+++ b/lib/logstash/inputs/amqp.rb
@@ -27,7 +27,13 @@ def initialize(url, type, config={}, &block)
   public
   def register
     @logger.info("Registering input #{@url}")
-    @amqp = AMQP.connect(:host => @url.host)
+    amqpsettings = {
+      :host => @url.host,
+      :port => (@url.port or 5672),
+    }
+    amqpsettings[:user] = @url.user if @url.user
+    amqpsettings[:pass] = @url.password if @url.password
+    @amqp = AMQP.connect(amqpsettings)
     @mq = MQ.new(@amqp)
     @target = nil
 
diff --git a/lib/logstash/outputs/amqp.rb b/lib/logstash/outputs/amqp.rb
index 237dcca51ec..282a2b4b027 100644
--- a/lib/logstash/outputs/amqp.rb
+++ b/lib/logstash/outputs/amqp.rb
@@ -24,7 +24,13 @@ def initialize(url, config={}, &block)
   public
   def register
     @logger.info("Registering output #{@url}")
-    @amqp = AMQP.connect(:host => @url.host, :port => (@url.port or 5672))
+    amqpsettings = {
+      :host => @url.host,
+      :port => (@url.port or 5672),
+    }
+    amqpsettings[:user] = @url.user if @url.user
+    amqpsettings[:pass] = @url.password if @url.password
+    @amqp = AMQP.connect(amqpsettings)
     @mq = MQ.new(@amqp)
     @target = nil
 
diff --git a/lib/logstash/outputs/elasticsearch.rb b/lib/logstash/outputs/elasticsearch.rb
index 1dd61f40f64..3132bfa2f52 100644
--- a/lib/logstash/outputs/elasticsearch.rb
+++ b/lib/logstash/outputs/elasticsearch.rb
@@ -62,7 +62,8 @@ def ready(params)
       @callback = self.method(:receive_http)
     when "river"
       params["port"] ||= 5672
-      mq_url = URI::parse("amqp://#{params["host"]}:#{params["port"]}/queue/#{params["queue"]}?durable=1")
+      auth = "#{params["user"] or "guest"}:#{params["pass"] or "guest"}"
+      mq_url = URI::parse("amqp://#{auth}@#{params["host"]}:#{params["port"]}/queue/#{params["queue"]}?durable=1")
       @mq = LogStash::Outputs::Amqp.new(mq_url.to_s)
       @mq.register
       @callback = self.method(:receive_river)
diff --git a/patterns/grok-patterns b/patterns/grok-patterns
index 5ce32b34356..f106eb06459 100644
--- a/patterns/grok-patterns
+++ b/patterns/grok-patterns
@@ -7,6 +7,7 @@ BASE16NUM (?<![0-9A-Fa-f])(?:[+-]?(?:0x)?(?:[0-9A-Fa-f]+))
 BASE16FLOAT \b(?<![0-9A-Fa-f.])(?:[+-]?(?:0x)?(?:(?:[0-9A-Fa-f]+(?:\.[0-9A-Fa-f]*)?)|(?:\.[0-9A-Fa-f]+)))\b
 
 POSINT \b(?:[0-9]+)\b
+TWODIGITINT [0-9]{2}
 WORD \b\w+\b
 NOTSPACE \S+
 DATA .*?
@@ -89,5 +90,9 @@ QS %{QUOTEDSTRING}
 SYSLOGBASE %{SYSLOGTIMESTAMP:timestamp} (?:%{SYSLOGFACILITY} )?%{SYSLOGHOST:logsource} %{SYSLOGPROG}:
 COMBINEDAPACHELOG %{IPORHOST:clientip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] "%{WORD:verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:httpversion}" %{NUMBER:response} (?:%{NUMBER:bytes}|-) "(?:%{URI:referrer}|-)" %{QS:agent}
 
+#
 # Custom formats
+# Add additional custom patterns below
 DATESTAMP_RAILS %{DAY} %{MONTH} %{MONTHDAY} %{TIME} (?:%{INT:ZONE} )?%{YEAR}
+DATESTAMP_MYSQL %{TWODIGITINT:year}%{TWODIGITINT:month}%{TWODIGITINT:day}\s+%{TIME}
+
