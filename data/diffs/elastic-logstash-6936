diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/Expression.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/Expression.java
index 1d5e9a447a6..e876f25e147 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/Expression.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/Expression.java
@@ -16,7 +16,6 @@
  * Created by andrewvc on 9/6/16.
  */
 public abstract class Expression extends BaseSourceComponent implements Hashable {
-    private Object compiled;
     private ScriptingContainer container;
 
     public Expression(SourceMetadata meta) {
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/RegexValueExpression.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/RegexValueExpression.java
index 4cd85aa4ea9..cd917a74623 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/RegexValueExpression.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/RegexValueExpression.java
@@ -6,6 +6,9 @@
 import org.logstash.config.ir.InvalidIRException;
 import org.logstash.config.ir.SourceMetadata;
 
+import java.nio.charset.Charset;
+import java.nio.charset.StandardCharsets;
+
 /**
  * Created by andrewvc on 9/15/16.
  */
@@ -19,7 +22,7 @@ public RegexValueExpression(SourceMetadata meta, Object value) throws InvalidIRE
             throw new InvalidIRException("Regex value expressions can only take strings!");
         }
 
-        byte[] patternBytes = getSource().getBytes();
+        byte[] patternBytes = getSource().getBytes(StandardCharsets.UTF_8);
         this.regex = new Regex(patternBytes, 0, patternBytes.length, Option.NONE);
     }
 
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/BooleanEdge.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/BooleanEdge.java
index 6459331158c..61fc131940b 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/BooleanEdge.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/BooleanEdge.java
@@ -4,6 +4,8 @@
 import org.logstash.config.ir.SourceComponent;
 import org.logstash.config.ir.InvalidIRException;
 
+import java.util.Objects;
+
 /**
  * Created by andrewvc on 9/15/16.
  */
@@ -23,6 +25,11 @@ public BooleanEdge make(Vertex in, Vertex out) throws InvalidIRException {
             return new BooleanEdge(edgeType, in, out);
         }
 
+        @Override
+        public int hashCode() {
+            return this.edgeType.hashCode();
+        }
+
         public boolean equals(Object other) {
             if (other == null) return false;
             if (other instanceof BooleanEdgeFactory) {
@@ -35,8 +42,8 @@ public String toString() {
             return "BooleanEdge.BooleanEdgeFactory[" + edgeType + "]";
         }
     }
-    public static BooleanEdge.BooleanEdgeFactory trueFactory = new BooleanEdge.BooleanEdgeFactory(true);
-    public static BooleanEdge.BooleanEdgeFactory falseFactory = new BooleanEdge.BooleanEdgeFactory(false);
+    public static final BooleanEdge.BooleanEdgeFactory trueFactory = new BooleanEdge.BooleanEdgeFactory(true);
+    public static final BooleanEdge.BooleanEdgeFactory falseFactory = new BooleanEdge.BooleanEdgeFactory(false);
 
     private final Boolean edgeType;
 
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/Graph.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/Graph.java
index 709ea2c2259..da6c6469038 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/Graph.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/Graph.java
@@ -78,11 +78,6 @@ public Vertex getVertexById(String id) {
         return this.vertices().filter(v -> v.getId().equals(id)).findAny().get();
     }
 
-    // Use chainVertices instead
-    private Graph addEdge(Edge e) throws InvalidIRException {
-        return addEdge(e, true);
-    }
-
     private Graph addEdge(Edge e, boolean doRefresh) throws InvalidIRException {
         if (!(this.getVertices().contains(e.getFrom()) && this.getVertices().contains(e.getTo()))) {
             throw new InvalidIRException("Attempted to add edge referencing vertices not in this graph!");
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/PlainEdge.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/PlainEdge.java
index 64ee584305c..d96f58fe26b 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/PlainEdge.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/PlainEdge.java
@@ -14,7 +14,7 @@ public PlainEdge make(Vertex from, Vertex to) throws InvalidIRException {
         }
     }
 
-    public static PlainEdgeFactory factory = new PlainEdgeFactory();
+    public static final PlainEdgeFactory factory = new PlainEdgeFactory();
 
     @Override
     public String individualHashSource() {
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/Vertex.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/Vertex.java
index 2948cfb2bd9..e6414938cb3 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/Vertex.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/Vertex.java
@@ -130,7 +130,7 @@ public String uniqueHash() {
 
         MessageDigest lineageDigest = Util.defaultMessageDigest();
 
-        lineageDigest.update(hashPrefix().getBytes());
+        lineageDigest.update(hashPrefix().getBytes(StandardCharsets.UTF_8));
 
         // The lineage can be quite long and we want to avoid the quadratic complexity of string concatenation
         // Thus, in this case there's no real way to get the hash source, we just hash as we go.
