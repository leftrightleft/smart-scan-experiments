diff --git a/lib/logstash/event.rb b/lib/logstash/event.rb
index 5c3dd35d899..70f68ac9bb2 100644
--- a/lib/logstash/event.rb
+++ b/lib/logstash/event.rb
@@ -135,7 +135,8 @@ def fields
   end
 
   public
-  def to_json
+  def to_json(*args)
+    # ignore arguments to respect accepted to_json method signature
     LogStash::Json.dump(@data)
   end # def to_json
 
diff --git a/lib/logstash/timestamp.rb b/lib/logstash/timestamp.rb
index a96dfb02c1d..fc8d793911c 100644
--- a/lib/logstash/timestamp.rb
+++ b/lib/logstash/timestamp.rb
@@ -78,7 +78,8 @@ def utc
     end
     alias_method :gmtime, :utc
 
-    def to_json
+    def to_json(*args)
+      # ignore arguments to respect accepted to_json method signature
       LogStash::Json.dump(@time.iso8601(ISO8601_PRECISION))
     end
     alias_method :inspect, :to_json
diff --git a/spec/event.rb b/spec/event.rb
index e885c4f6e79..06d85c7609c 100644
--- a/spec/event.rb
+++ b/spec/event.rb
@@ -294,4 +294,27 @@
       insist{event[LogStash::Event::TIMESTAMP_FAILURE_FIELD]} == "foo"
     end
   end
+
+  context "to_json" do
+    it "should support to_json" do
+      new_event = LogStash::Event.new(
+        "@timestamp" => Time.iso8601("2014-09-23T19:26:15.832Z"),
+        "message" => "foo bar",
+      )
+      json = new_event.to_json
+
+      insist { json } ==  "{\"@timestamp\":\"2014-09-23T19:26:15.832Z\",\"message\":\"foo bar\",\"@version\":\"1\"}"
+    end
+
+    it "should support to_json and ignore arguments" do
+      new_event = LogStash::Event.new(
+        "@timestamp" => Time.iso8601("2014-09-23T19:26:15.832Z"),
+        "message" => "foo bar",
+      )
+      json = new_event.to_json(:foo => 1, :bar => "baz")
+
+      insist { json } ==  "{\"@timestamp\":\"2014-09-23T19:26:15.832Z\",\"message\":\"foo bar\",\"@version\":\"1\"}"
+    end
+  end
+
 end
diff --git a/spec/filters/ruby.rb b/spec/filters/ruby.rb
new file mode 100644
index 00000000000..6bb4b7b7c74
--- /dev/null
+++ b/spec/filters/ruby.rb
@@ -0,0 +1,56 @@
+require "test_utils"
+require "logstash/filters/ruby"
+require "logstash/filters/date"
+
+describe LogStash::Filters::Ruby do
+  extend LogStash::RSpec
+
+  describe "generate pretty json on event.to_hash" do
+    # this obviously tests the Ruby filter but also makes sure
+    # the fix for issue #1771 is correct and that to_json is
+    # compatible with the json gem convention.
+
+    config <<-CONFIG
+      filter {
+        date {
+          match => [ "mydate", "ISO8601" ]
+          locale => "en"
+          timezone => "UTC"
+        }
+        ruby {
+          init => "require 'json'"
+          code => "event['pretty'] = JSON.pretty_generate(event.to_hash)"
+        }
+      }
+    CONFIG
+
+    sample("message" => "hello world", "mydate" => "2014-09-23T00:00:00-0800") do
+      # json is rendered in pretty json since the JSON.pretty_generate created json from the event hash
+      insist { subject["pretty"] } == "{\n  \"message\": \"hello world\",\n  \"mydate\": \"2014-09-23T00:00:00-0800\",\n  \"@version\": \"1\",\n  \"@timestamp\": \"2014-09-23T08:00:00.000Z\"\n}"
+    end
+  end
+
+  describe "generate pretty json on event.to_hash" do
+    # this obviously tests the Ruby filter but asses that using the json gem directly
+    # on even will correctly call the to_json method but will use the logstash json
+    # generation and thus will not work with pretty_generate.
+    config <<-CONFIG
+      filter {
+        date {
+          match => [ "mydate", "ISO8601" ]
+          locale => "en"
+          timezone => "UTC"
+        }
+        ruby {
+          init => "require 'json'"
+          code => "event['pretty'] = JSON.pretty_generate(event)"
+        }
+      }
+    CONFIG
+
+    sample("message" => "hello world", "mydate" => "2014-09-23T00:00:00-0800") do
+      # if this eventually breaks because we removed the custom to_json and/or added pretty support to JrJackson then all is good :)
+      insist { subject["pretty"] } == "{\"message\":\"hello world\",\"mydate\":\"2014-09-23T00:00:00-0800\",\"@version\":\"1\",\"@timestamp\":\"2014-09-23T08:00:00.000Z\"}"
+    end
+  end
+end
diff --git a/spec/timestamp.rb b/spec/timestamp.rb
index f6e6a0ceeed..1ebbab634b3 100644
--- a/spec/timestamp.rb
+++ b/spec/timestamp.rb
@@ -32,4 +32,11 @@
     expect(LogStash::Timestamp.coerce(:foobar)).to be_nil
   end
 
+  it "should support to_json" do
+    expect(LogStash::Timestamp.parse_iso8601("2014-09-23T00:00:00-0800").to_json).to eq("\"2014-09-23T08:00:00.000Z\"")
+  end
+
+  it "should support to_json and ignore arguments" do
+    expect(LogStash::Timestamp.parse_iso8601("2014-09-23T00:00:00-0800").to_json(:some => 1, :argumnents => "test")).to eq("\"2014-09-23T08:00:00.000Z\"")
+  end
 end
