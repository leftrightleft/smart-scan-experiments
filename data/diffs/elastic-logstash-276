diff --git a/lib/logstash/inputs/twitter.rb b/lib/logstash/inputs/twitter.rb
index 0b48d1a7e33..76ea081b72b 100644
--- a/lib/logstash/inputs/twitter.rb
+++ b/lib/logstash/inputs/twitter.rb
@@ -19,6 +19,18 @@ class LogStash::Inputs::Twitter < LogStash::Inputs::Base
   # Any keywords to track in the twitter stream
   config :keywords, :validate => :array, :required => true
 
+  # Proxy Host
+  config :proxy_host, :validate => :string
+
+  # Proxy Port
+  config :proxy_port, :validate => :number
+
+  # Proxy Username
+  config :proxy_user, :validate => :string
+
+  # Proxy Password
+  config :proxy_password, :validate => :password
+
   public
   def initialize(params)
     super
@@ -77,7 +89,7 @@ def track(*keywords)
       #"track" => keywords
     #}
 
-    http = Net::HTTP.new(uri.host, uri.port)
+    http = Net::HTTP::Proxy(@proxy_host, @proxy_port, @proxy_user, @proxy_password.value).new(uri.host, uri.port)
     http.use_ssl = true
 
     # TODO(sissel): Load certs.
diff --git a/lib/logstash/outputs/loggly.rb b/lib/logstash/outputs/loggly.rb
index e82cb9723db..df16b20cbc2 100644
--- a/lib/logstash/outputs/loggly.rb
+++ b/lib/logstash/outputs/loggly.rb
@@ -46,6 +46,19 @@ class LogStash::Outputs::Loggly < LogStash::Outputs::Base
   # Defaults to https
   config :proto, :validate => :string, :default => "http"
 
+  # Proxy Host
+  config :proxy_host, :validate => :string
+
+  # Proxy Port
+  config :proxy_port, :validate => :number
+
+  # Proxy Username
+  config :proxy_user, :validate => :string
+
+  # Proxy Password
+  config :proxy_password, :validate => :password
+
+
   public
   def register
     # nothing to do
@@ -63,7 +76,7 @@ def receive(event)
     # Send the event over http.
     url = URI.parse("#{@proto}://#{@host}/inputs/#{event.sprintf(@key)}")
     @logger.info("Loggly URL", :url => url)
-    http = Net::HTTP.new(url.host, url.port)
+    http = Net::HTTP::Proxy(@proxy_host, @proxy_port, @proxy_user, @proxy_password.value).new(uri.host, uri.port)
     if url.scheme == 'https'
       http.use_ssl = true
       http.verify_mode = OpenSSL::SSL::VERIFY_NONE
