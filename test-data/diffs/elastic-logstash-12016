diff --git a/qa/integration/specs/reload_config_spec.rb b/qa/integration/specs/reload_config_spec.rb
index b4864e43559..4092aa9b253 100644
--- a/qa/integration/specs/reload_config_spec.rb
+++ b/qa/integration/specs/reload_config_spec.rb
@@ -95,7 +95,7 @@
     expect(instance_reload_stats["successes"]).to eq(1)
     expect(instance_reload_stats["failures"]).to eq(0)
     # parse the results and validate
-    re = JSON.load(File.new(output_file2))
+    re = JSON.parse(IO.read(output_file2))
     expect(re["clientip"]).to eq("74.125.176.147")
     expect(re["response"]).to eq(200)
   end
diff --git a/rakelib/default_plugins.rb b/rakelib/default_plugins.rb
index 8df255dd714..08d10e7e917 100644
--- a/rakelib/default_plugins.rb
+++ b/rakelib/default_plugins.rb
@@ -40,7 +40,7 @@ def self.fetch_plugins_for(type)
       # Lets use the standard library here, in the context of the bootstrap the
       # logstash-core could have failed to be installed.
       require "json"
-      JSON.load(::File.read("rakelib/plugins-metadata.json")).select do |_, metadata|
+      JSON.parse(::File.read("rakelib/plugins-metadata.json")).select do |_, metadata|
         metadata[type]
       end.keys
     end
diff --git a/rakelib/modules.rake b/rakelib/modules.rake
index fc09509d484..adf00ad9b41 100644
--- a/rakelib/modules.rake
+++ b/rakelib/modules.rake
@@ -19,7 +19,7 @@ namespace "modules" do
 
   def unpacker(src_file, dest_dir)
     puts "Reading #{src_file}"
-    array = JSON.load(IO.read(src_file))
+    array = JSON.parse(IO.read(src_file))
 
     if !array.is_a?(Array)
       raise "#{src_file} does not contain a JSON array as the first object"
