diff --git a/logstash-core/src/main/java/org/logstash/Event.java b/logstash-core/src/main/java/org/logstash/Event.java
index 17b70a48dfb..88fb0afa3bd 100644
--- a/logstash-core/src/main/java/org/logstash/Event.java
+++ b/logstash-core/src/main/java/org/logstash/Event.java
@@ -12,7 +12,6 @@
 import org.logstash.ackedqueue.Queueable;
 
 import java.io.IOException;
-import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Date;
@@ -23,8 +22,7 @@
 import static org.logstash.ObjectMappers.CBOR_MAPPER;
 import static org.logstash.ObjectMappers.JSON_MAPPER;
 
-
-public class Event implements Cloneable, Serializable, Queueable {
+public final class Event implements Cloneable, Queueable {
 
     private boolean cancelled;
     private Map<String, Object> data;
@@ -299,14 +297,9 @@ public String sprintf(String s) throws IOException {
         return StringInterpolation.getInstance().evaluate(this, s);
     }
 
-    public Event clone()
-            throws CloneNotSupportedException
-    {
-//        Event clone = (Event)super.clone();
-//        clone.setAccessors(new Accessors(clone.getData()));
-
-        Event clone = new Event(Cloner.deep(getData()));
-        return clone;
+    @Override
+    public Event clone() {
+        return new Event(Cloner.deep(this.data));
     }
 
     public String toString() {
diff --git a/logstash-core/src/main/java/org/logstash/ext/JrubyEventExtLibrary.java b/logstash-core/src/main/java/org/logstash/ext/JrubyEventExtLibrary.java
index df9367ca643..e6accb30792 100644
--- a/logstash-core/src/main/java/org/logstash/ext/JrubyEventExtLibrary.java
+++ b/logstash-core/src/main/java/org/logstash/ext/JrubyEventExtLibrary.java
@@ -166,11 +166,7 @@ public IRubyObject ruby_remove(ThreadContext context, RubyString reference)
         @JRubyMethod(name = "clone")
         public IRubyObject ruby_clone(ThreadContext context)
         {
-            try {
-                return RubyEvent.newRubyEvent(context.runtime, this.event.clone());
-            } catch (CloneNotSupportedException e) {
-                throw context.runtime.newRuntimeError(e.getMessage());
-            }
+            return RubyEvent.newRubyEvent(context.runtime, this.event.clone());
         }
 
         @JRubyMethod(name = "overwrite", required = 1)
