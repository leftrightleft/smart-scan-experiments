diff --git a/logstash-core/lib/logstash/runner.rb b/logstash-core/lib/logstash/runner.rb
index 992c76823d0..5c95d4551c8 100644
--- a/logstash-core/lib/logstash/runner.rb
+++ b/logstash-core/lib/logstash/runner.rb
@@ -15,7 +15,7 @@
 # specific language governing permissions and limitations
 # under the License.
 
-Thread.abort_on_exception = true
+Thread.abort_on_exception = false
 Encoding.default_external = Encoding::UTF_8
 $DEBUGLIST = (ENV["DEBUG"] || "").split(",")
 
diff --git a/logstash-core/spec/logstash/acked_queue_concurrent_stress_spec.rb b/logstash-core/spec/logstash/acked_queue_concurrent_stress_spec.rb
index f85d5f9e26d..069c460c208 100644
--- a/logstash-core/spec/logstash/acked_queue_concurrent_stress_spec.rb
+++ b/logstash-core/spec/logstash/acked_queue_concurrent_stress_spec.rb
@@ -84,7 +84,7 @@ def publisher(items, writer)
 
     shared_examples "a well behaved queue" do
       it "writes, reads, closes and reopens" do
-        Thread.abort_on_exception = true
+        Thread.abort_on_exception = false
 
         # force lazy initialization to avoid concurrency issues within threads
         counts
diff --git a/logstash-core/spec/logstash/java_pipeline_spec.rb b/logstash-core/spec/logstash/java_pipeline_spec.rb
index 18f514862f4..3b59cc8185c 100644
--- a/logstash-core/spec/logstash/java_pipeline_spec.rb
+++ b/logstash-core/spec/logstash/java_pipeline_spec.rb
@@ -187,6 +187,10 @@ def flush(options)
     pipeline_settings.each {|k, v| pipeline_settings_obj.set(k, v) }
   end
 
+  after :each do
+    Thread.abort_on_exception = false
+  end
+  
   describe "#ephemeral_id" do
     it "creates an ephemeral_id at creation time" do
       pipeline = mock_java_pipeline_from_string("input { generator { count =>  1 } } output { null {} }")
