diff --git a/qa/integration/services/dockerized/Dockerfile b/qa/integration/services/dockerized/Dockerfile
index 045ba94de2c..b11450e87e9 100644
--- a/qa/integration/services/dockerized/Dockerfile
+++ b/qa/integration/services/dockerized/Dockerfile
@@ -16,6 +16,11 @@ USER tester
 ENV WORKDIR /home/tester
 WORKDIR $WORKDIR
 
+# Generate TLS certificates that can be used by services.
+ENV CERTIFICATES_DIR $WORKDIR/certificates
+RUN mkdir -p $CERTIFICATES_DIR && \
+openssl req -subj '/CN=localhost/' -x509 -days $((100 * 365)) -batch -nodes -newkey rsa:2048 -keyout $CERTIFICATES_DIR/certificate.key -out $CERTIFICATES_DIR/certificate.crt
+
 # Script with routines that can be used in derived images.
 ADD helpers.sh .
 
diff --git a/qa/integration/services/service_container.rb b/qa/integration/services/service_container.rb
index 1d013c779f5..a535ddbd22f 100644
--- a/qa/integration/services/service_container.rb
+++ b/qa/integration/services/service_container.rb
@@ -60,4 +60,29 @@ def stop_container
     @container.stop
     @container.delete(:force => true, :volumes => true)
   end
+
+  # Get environment variable from container's ENV.
+  def envvar(var)
+    # Exec command returns an array with [[stdout], [stderr], exit_code] layout.
+    res = @container.exec(['printenv', var])
+    res[0].join(" ").chomp
+  end
+
+  # Get path to certificates directory.
+  def certificates_dir
+    envvar("CERTIFICATES_DIR")
+  end
+
+  # Copy certificates from container to directory in the host.
+  def certificates(dest_dir)
+    FileUtils.mkdir_p(dest_dir)
+    cert_dir = certificates_dir
+    ["certificate.key", "certificate.crt"].each do |file|
+      File.open(File.join(dest_dir, file), "w") do |io|
+        # Use container's file separator (i.e. Linux)
+        io.write(@container.read_file(cert_dir.chomp + "/" + file))
+      end
+    end
+  end
+
 end
