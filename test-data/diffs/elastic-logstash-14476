diff --git a/logstash-core/lib/logstash/agent.rb b/logstash-core/lib/logstash/agent.rb
index 4080e9b0e6a..1bc1d3a78a0 100644
--- a/logstash-core/lib/logstash/agent.rb
+++ b/logstash-core/lib/logstash/agent.rb
@@ -30,6 +30,7 @@
 require "uri"
 require "socket"
 require "securerandom"
+require 'tmpdir'
 
 LogStash::Environment.load_locale!
 
@@ -65,6 +66,7 @@ def initialize(settings = LogStash::SETTINGS, source_loader = nil)
     @name = setting("node.name")
     # Generate / load the persistent uuid
     id
+    clean_jruby_dir
 
     # Initialize, but do not start the webserver.
     @webserver = LogStash::WebServer.from_settings(@logger, self, settings)
@@ -273,6 +275,31 @@ def id_path
     @id_path ||= ::File.join(settings.get("path.data"), "uuid")
   end
 
+  # write pid to path.data/pid for cleaning up /tmp/jruby-$pid
+  # logstash shutdown by SIGKILL left many jar files in tmp
+  # After several ungraceful restart, jar files occupy certain amount of space. GH #11051
+  def clean_jruby_dir
+    pid_path = ::File.join(settings.get("path.data"), "pid")
+
+    begin
+      if ::File.exists?(pid_path)
+        pid = ::File.read(pid_path).chomp.strip
+        tmp_path = ::File.join(Dir.tmpdir(), "jruby-#{pid}")
+        FileUtils.remove_dir(tmp_path) if ::File.exists?(tmp_path)
+      end
+    rescue => e
+      tmp_path ||= "jruby dir in OS temp dir" 
+      logger.warn("Cannot remove #{tmp_path}", :error => e.message, :exception => e.class)
+    end
+
+
+    begin
+      ::File.open(pid_path, 'w') { |f| f.write(Process.pid) }
+    rescue => e
+      logger.warn("Cannot write pid file in #{pid_path}", :error => e.message, :exception => e.class)
+    end
+  end
+
   #
   # Backward compatibility proxies to the PipelineRegistry
   #
