diff --git a/.buildkite/scripts/snyk/report.sh b/.buildkite/scripts/snyk/report.sh
new file mode 100755
index 00000000000..ba8d861de53
--- /dev/null
+++ b/.buildkite/scripts/snyk/report.sh
@@ -0,0 +1,76 @@
+#!/bin/bash
+
+set -e
+
+TARGET_BRANCHES=("main")
+cd .buildkite/scripts
+
+# Resolves the branches we are going to track
+resolve_latest_branches() {
+  source snyk/resolve_stack_version.sh
+  for SNAPSHOT_VERSION in "${SNAPSHOT_VERSIONS[@]}"
+  do
+    IFS='.'
+    read -a versions <<< "$SNAPSHOT_VERSION"
+    version=${versions[0]}.${versions[1]}
+    version="${version%\"}"
+    version="${version#\"}"
+    TARGET_BRANCHES+=("$version")
+  done
+}
+
+# Clones the Logstash repo
+clone_logstash_repo() {
+  echo "Cloning logstash repo..."
+  git clone https://github.com/elastic/logstash.git
+}
+
+# Build Logstash specific branch to generate Gemlock file where Snyk scans
+build_logstash() {
+  cd logstash
+  git reset --hard HEAD # reset if any generated files appeared
+  git checkout "$1"
+  ./gradlew clean bootstrap assemble installDefaultGems && cd ..
+}
+
+# Downloads snyk distribution
+download_auth_snyk() {
+  cd logstash
+  echo "Downloading snyk..."
+  curl https://static.snyk.io/cli/latest/snyk-linux -o snyk
+  chmod +x ./snyk
+
+  vault_path=secret/ci/elastic-logstash-filter-elastic-integration/snyk-creds
+  SNYK_TOKEN=$(vault read -field=token "${vault_path}")
+  ./snyk auth "$SNYK_TOKEN"
+  cd ..
+}
+
+# Reports vulnerabilities to the Snyk
+report() {
+  echo "Reporting to Snyk..."
+  cd logstash
+  REMOTE_REPO_URL=$1
+  if [ "$REMOTE_REPO_URL" != "$MAIN_BRANCH" ]; then
+    MAJOR_VERSION=$(echo "$REMOTE_REPO_URL"| cut -d'.' -f 1)
+    REMOTE_REPO_URL="$MAJOR_VERSION".latest
+    echo "Using '$REMOTE_REPO_URL' remote repo url."
+  fi
+
+  # adding git commit hash to Snyk tag to improve visibility
+  GIT_HEAD=$(git rev-parse --short HEAD 2> /dev/null | sed "s/\(.*\)/\1/")
+  ./snyk monitor --all-projects --org=logstash --remote-repo-url="$REMOTE_REPO_URL" --target-reference="$REMOTE_REPO_URL" --detection-depth=6 --exclude=requirements.txt --project-tags=branch="$TARGET_BRANCH",git_head="$GIT_HEAD" && true
+  cd ..
+}
+
+resolve_latest_branches
+clone_logstash_repo
+download_auth_snyk
+
+# clone Logstash repo, build and report
+for TARGET_BRANCH in "${TARGET_BRANCHES[@]}"
+do
+  echo "Using $TARGET_BRANCH branch."
+  build_logstash "$TARGET_BRANCH"
+  report "$TARGET_BRANCH"
+done
\ No newline at end of file
diff --git a/.buildkite/scripts/snyk/resolve_stack_version.sh b/.buildkite/scripts/snyk/resolve_stack_version.sh
new file mode 100755
index 00000000000..c6e359eb572
--- /dev/null
+++ b/.buildkite/scripts/snyk/resolve_stack_version.sh
@@ -0,0 +1,25 @@
+#!/bin/bash
+
+# This script resolves latest version from VERSION_URL SNAPSHOTS based on given N.x (where N is a precise, ex 8.x)
+# Why Snapshot? - the 7.latest and 8.latest branchs will be accurately places in snapshots, not in releases.
+# Ensure you have set the ELASTIC_STACK_VERSION environment variable.
+
+set -e
+
+VERSION_URL="https://raw.githubusercontent.com/elastic/logstash/main/ci/logstash_releases.json"
+
+echo "Fetching versions from $VERSION_URL"
+VERSIONS=$(curl --silent $VERSION_URL)
+SNAPSHOTS=$(echo $VERSIONS | jq '.snapshots' | jq 'keys | .[]')
+IFS=$'\n' read -d "\034" -r -a SNAPSHOT_KEYS <<<"${SNAPSHOTS}\034"
+
+SNAPSHOT_VERSIONS=()
+for KEY in "${SNAPSHOT_KEYS[@]}"
+do
+  # remove starting and trailing double quotes
+  KEY="${KEY%\"}"
+  KEY="${KEY#\"}"
+  SNAPSHOT_VERSION=$(echo $VERSIONS | jq '.snapshots."'"$KEY"'"')
+  echo "Resolved snapshot version: $SNAPSHOT_VERSION"
+  SNAPSHOT_VERSIONS+=("$SNAPSHOT_VERSION")
+done
\ No newline at end of file
diff --git a/.buildkite/snyk_report_pipeline.yml b/.buildkite/snyk_report_pipeline.yml
new file mode 100644
index 00000000000..a473ef87d19
--- /dev/null
+++ b/.buildkite/snyk_report_pipeline.yml
@@ -0,0 +1,5 @@
+steps:
+  # reports main, previous (ex: 7.latest) and current (ex: 8.latest) release branches to Snyk
+  - label: ":hammer: Report to Snyk"
+    command:
+      - .buildkite/scripts/snyk/report.sh
\ No newline at end of file
