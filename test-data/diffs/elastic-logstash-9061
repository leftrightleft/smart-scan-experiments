diff --git a/logstash-core/src/main/java/org/logstash/Event.java b/logstash-core/src/main/java/org/logstash/Event.java
index 1cda5eee31f..ce7330cad9d 100644
--- a/logstash-core/src/main/java/org/logstash/Event.java
+++ b/logstash-core/src/main/java/org/logstash/Event.java
@@ -9,6 +9,7 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.Arrays;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 import org.joda.time.DateTime;
@@ -27,6 +28,7 @@ public final class Event implements Cloneable, Queueable {
     private ConvertedMap data;
     private ConvertedMap metadata;
 
+    public static final String[] RESERVED_FIELDS = { "@timestamp", "@version", "@metadata" };
     public static final String METADATA = "@metadata";
     public static final String METADATA_BRACKETS = "[" + METADATA + "]";
     public static final String TIMESTAMP = "@timestamp";
@@ -249,7 +251,15 @@ public Event append(Event e) {
         return this;
     }
 
+    public Boolean isReserved(final String field) {
+        return Arrays.asList(RESERVED_FIELDS).contains(field);
+    }
+
     public Object remove(final String path) {
+        if(isReserved(path)){
+            logger.warn("Unable to remove reserved field " + path);
+            return null;
+        }
         return remove(FieldReference.from(path));
     }
 
diff --git a/logstash-core/src/test/java/org/logstash/EventTest.java b/logstash-core/src/test/java/org/logstash/EventTest.java
index e8a0e43f8ad..dc43d956641 100644
--- a/logstash-core/src/test/java/org/logstash/EventTest.java
+++ b/logstash-core/src/test/java/org/logstash/EventTest.java
@@ -15,6 +15,7 @@
 import org.jruby.java.proxies.ConcreteJavaProxy;
 import org.junit.Test;
 import org.logstash.ext.JrubyTimestampExtLibrary;
+import org.mockito.internal.matchers.NotNull;
 
 import static net.javacrumbs.jsonunit.JsonAssert.assertJsonEquals;
 import static org.hamcrest.CoreMatchers.is;
@@ -22,6 +23,7 @@
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertNull;
+import static org.junit.Assert.assertNotNull;
 
 public final class EventTest {
 
@@ -367,26 +369,20 @@ public void testTagOnExistingTagsField() throws Exception {
     }
 
     @Test
-    public void toStringWithTimestamp() throws Exception {
-        Map<String, Object> data = new HashMap<>();
-        data.put("host", "foo");
-        data.put("message", "bar");
-        Event e = new Event(data);
-        assertEquals(e.toString(), e.getTimestamp().toString() + " foo bar");
+    public void testReservedFieldNotRemoved() throws Exception {
+        final Timestamp timestamp = new Timestamp();
+        Event e = new Event();
+        e.remove("@timestamp");
+        assertThat(e.getField("@timestamp"), is(timestamp));
     }
 
     @Test
-    public void toStringWithoutTimestamp() throws Exception {
+    public void toStringWithTimestamp() throws Exception {
         Map<String, Object> data = new HashMap<>();
         data.put("host", "foo");
         data.put("message", "bar");
         Event e = new Event(data);
-        e.remove("@timestamp");
-        assertEquals(e.toString(), "foo bar");
-
-        e = new Event();
-        e.remove("@timestamp");
-        assertEquals(e.toString(), "%{host} %{message}");
+        assertEquals(e.toString(), e.getTimestamp().toString() + " foo bar");
     }
 
     @Test
