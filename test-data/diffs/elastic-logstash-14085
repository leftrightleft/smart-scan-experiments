diff --git a/logstash-core/src/main/java/org/logstash/launchers/JvmOptionsParser.java b/logstash-core/src/main/java/org/logstash/launchers/JvmOptionsParser.java
index 53e01407bd3..9368ad5d190 100644
--- a/logstash-core/src/main/java/org/logstash/launchers/JvmOptionsParser.java
+++ b/logstash-core/src/main/java/org/logstash/launchers/JvmOptionsParser.java
@@ -28,6 +28,7 @@
 import java.util.stream.Collectors;
 
 
+
 /**
  * Parse jvm.options file applying version conditional logic. Heavily inspired by same functionality in Elasticsearch.
  * */
@@ -35,6 +36,7 @@ public class JvmOptionsParser {
 
     private static final String[] MANDATORY_JVM_OPTIONS = new String[]{
             "-Djruby.regexp.interruptible=true",
+            "-Djdk.io.File.enableADS=true",
             "16-:--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED",
             "16-:--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED",
             "16-:--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED",
@@ -47,6 +49,7 @@ public class JvmOptionsParser {
             "11-:--add-opens=java.management/sun.management=ALL-UNNAMED"
     };
 
+
     static class JvmOptionsFileParserException extends Exception {
 
         private static final long serialVersionUID = 2446165130736962758L;
@@ -82,7 +85,7 @@ SortedMap<Integer, String> invalidLines() {
      *
      * @param args the args to the program which should consist of a single option, the path to LOGSTASH_HOME
      */
-    public static void main(final String[] args) throws InterruptedException, IOException {
+    public static void main(final String[] args) {
         if (args.length < 1 || args.length > 2) {
             throw new IllegalArgumentException(
                     "Expected two arguments specifying path to LOGSTASH_HOME and an optional LS_JVM_OPTS, but was " + Arrays.toString(args)
