diff --git a/logstash-core/src/main/java/org/logstash/common/io/MmapPageIO.java b/logstash-core/src/main/java/org/logstash/common/io/MmapPageIO.java
index 12d316e8d21..bbac28d0551 100644
--- a/logstash-core/src/main/java/org/logstash/common/io/MmapPageIO.java
+++ b/logstash-core/src/main/java/org/logstash/common/io/MmapPageIO.java
@@ -1,5 +1,8 @@
 package org.logstash.common.io;
 
+import sun.misc.Cleaner;
+import sun.nio.ch.DirectBuffer;
+
 import java.io.File;
 import java.io.IOException;
 import java.io.RandomAccessFile;
@@ -103,9 +106,16 @@ public void purge() throws IOException {
     public void close() throws IOException {
         if (this.buffer != null) {
             this.buffer.force();
+
+            // calling the cleaner() method releases resources held by this direct buffer which would be held until GC otherwise.
+            // see https://github.com/elastic/logstash/pull/6740
+            Cleaner cleaner = ((DirectBuffer) this.buffer).cleaner();
+            if (cleaner != null) { cleaner.clean(); }
+
         }
-        if (this.channel != null && this.channel.isOpen()) {
-            this.channel.close();
+        if (this.channel != null) {
+            if (this.channel.isOpen()) { this.channel.force(false); }
+            this.channel.close(); // close can be called multiple times
         }
         this.channel = null;
         this.buffer = null;
diff --git a/logstash-core/src/test/java/org/logstash/common/io/FileCheckpointIOTest.java b/logstash-core/src/test/java/org/logstash/common/io/FileCheckpointIOTest.java
index 86e860aad59..d962bcfa433 100644
--- a/logstash-core/src/test/java/org/logstash/common/io/FileCheckpointIOTest.java
+++ b/logstash-core/src/test/java/org/logstash/common/io/FileCheckpointIOTest.java
@@ -46,7 +46,7 @@ public void write() throws Exception {
         Path fullFileName = Paths.get(checkpointFolder, "checkpoint.head");
         byte[] contents = Files.readAllBytes(fullFileName);
         URL url = this.getClass().getResource("checkpoint.head");
-        Path path = Paths.get(url.getPath());
+        Path path = Paths.get(url.toURI());
         byte[] compare = Files.readAllBytes(path);
         assertThat(contents, is(equalTo(compare)));
     }
