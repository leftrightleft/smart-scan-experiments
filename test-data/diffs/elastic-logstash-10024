diff --git a/logstash-core/spec/logstash/instrument/periodic_poller/os_spec.rb b/logstash-core/spec/logstash/instrument/periodic_poller/os_spec.rb
index 5445850d343..9c489d74bf3 100644
--- a/logstash-core/spec/logstash/instrument/periodic_poller/os_spec.rb
+++ b/logstash-core/spec/logstash/instrument/periodic_poller/os_spec.rb
@@ -11,46 +11,43 @@
     let(:snapshot_store) { metric.collector.snapshot_metric.metric_store }
     let(:os_metrics) { snapshot_store.get_shallow(:os) }
 
-    let(:cpuacct_control_group) { "/docker/a10687343f90e97bbb1f7181bd065a42de96c40c4aa91764a9d526ea30475f61" }
+    let(:relative_path) { "/docker/a10687343f90e97bbb1f7181bd065a42de96c40c4aa91764a9d526ea30475f61" }
+    let(:proc_self_cgroup_content) do
+      %W(14:name=systemd,holaunlimited:#{relative_path}
+          13:pids:#{relative_path}
+          12:hugetlb:#{relative_path}
+          11:net_prio:#{relative_path}
+          10:perf_event:#{relative_path}
+          9:net_cls:#{relative_path}
+          8:freezer:#{relative_path}
+          7:devices:#{relative_path}
+          6:memory:#{relative_path}
+          5:blkio:#{relative_path}
+          4:cpuacct:#{relative_path}
+          3:cpu:#{relative_path}
+          2:cpuset:#{relative_path}
+          1:name=openrc:/docker
+          0::/docker)
+    end
+
     let(:cpuacct_usage) { 1982 }
-    let(:cpu_control_group) { "/docker/a10687343f90e97bbb1f7181bd065a42de96c40c4aa91764a9d526ea30475f61" }
     let(:cpu_period_micros) { 500 }
     let(:cpu_quota_micros) { 98 }
     let(:cpu_stats_number_of_periods) { 1 }
     let(:cpu_stats_number_of_time_throttled) { 2 }
     let(:cpu_stats_time_throttled_nanos) { 3 }
-    let(:proc_self_cgroup_content) {
-      %W(14:name=systemd,holaunlimited:/docker/a10687343f90e97bbb1f7181bd065a42de96c40c4aa91764a9d526ea30475f61
-13:pids:/docker/a10687343f90e97bbb1f7181bd065a42de96c40c4aa91764a9d526ea30475f61
-12:hugetlb:/docker/a10687343f90e97bbb1f7181bd065a42de96c40c4aa91764a9d526ea30475f61
-11:net_prio:/docker/a10687343f90e97bbb1f7181bd065a42de96c40c4aa91764a9d526ea30475f61
-10:perf_event:/docker/a10687343f90e97bbb1f7181bd065a42de96c40c4aa91764a9d526ea30475f61
-9:net_cls:/docker/a10687343f90e97bbb1f7181bd065a42de96c40c4aa91764a9d526ea30475f61
-8:freezer:/docker/a10687343f90e97bbb1f7181bd065a42de96c40c4aa91764a9d526ea30475f61
-7:devices:/docker/a10687343f90e97bbb1f7181bd065a42de96c40c4aa91764a9d526ea30475f61
-6:memory:/docker/a10687343f90e97bbb1f7181bd065a42de96c40c4aa91764a9d526ea30475f61
-5:blkio:/docker/a10687343f90e97bbb1f7181bd065a42de96c40c4aa91764a9d526ea30475f61
-4:cpuacct:#{cpuacct_control_group}
-3:cpu:#{cpu_control_group}
-2:cpuset:/docker/a10687343f90e97bbb1f7181bd065a42de96c40c4aa91764a9d526ea30475f61
-1:name=openrc:/docker) }
-    let(:cpu_stat_file_content) {
-      [
-        "nr_periods #{cpu_stats_number_of_periods}",
-        "nr_throttled #{cpu_stats_number_of_time_throttled}",
-        "throttled_time #{cpu_stats_time_throttled_nanos}"
-      ]
-    }
-
-    before do
-      allow(LogStash::Instrument::PeriodicPoller::Cgroup).to receive(:are_cgroup_available?).and_return(true)
 
-      allow(LogStash::Instrument::PeriodicPoller::Cgroup).to receive(:read_proc_self_cgroup_lines).and_return(proc_self_cgroup_content)
-      allow(LogStash::Instrument::PeriodicPoller::Cgroup).to receive(:read_sys_fs_cgroup_cpuacct_cpu_stat).and_return(cpu_stat_file_content)
+    let(:cpu_stat_file_content) do
+      ["nr_periods #{cpu_stats_number_of_periods}", "nr_throttled #{cpu_stats_number_of_time_throttled}", "throttled_time #{cpu_stats_time_throttled_nanos}"]
+    end
 
-      allow(LogStash::Instrument::PeriodicPoller::Cgroup).to receive(:cgroup_cpuacct_usage_nanos).with(cpuacct_control_group).and_return(cpuacct_usage)
-      allow(LogStash::Instrument::PeriodicPoller::Cgroup).to receive(:cgroup_cpu_fs_period_micros).with(cpu_control_group).and_return(cpu_period_micros)
-      allow(LogStash::Instrument::PeriodicPoller::Cgroup).to receive(:cgroup_cpu_fs_quota_micros).with(cpu_control_group).and_return(cpu_quota_micros)
+    before do
+      allow(::File).to receive(:exist?).and_return(true)
+      allow(IO).to receive(:readlines).with("/sys/fs/cgroup/cpuacct#{relative_path}/cpuacct.usage").and_return([cpuacct_usage])
+      allow(IO).to receive(:readlines).with("/sys/fs/cgroup/cpu#{relative_path}/cpu.cfs_period_us").and_return([cpu_period_micros])
+      allow(IO).to receive(:readlines).with("/sys/fs/cgroup/cpu#{relative_path}/cpu.cfs_quota_us").and_return([cpu_quota_micros])
+      allow(IO).to receive(:readlines).with("/sys/fs/cgroup/cpu#{relative_path}/cpu.stat").and_return(cpu_stat_file_content)
+      allow(IO).to receive(:readlines).with("/proc/self/cgroup").and_return(proc_self_cgroup_content)
 
       subject.collect
     end
