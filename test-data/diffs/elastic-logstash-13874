diff --git a/logstash-core/lib/logstash/modules/logstash_config.rb b/logstash-core/lib/logstash/modules/logstash_config.rb
index 02fae52536c..eb70d73e7f1 100644
--- a/logstash-core/lib/logstash/modules/logstash_config.rb
+++ b/logstash-core/lib/logstash/modules/logstash_config.rb
@@ -92,9 +92,9 @@ def fetch_raw_setting(name, default)
     @settings.fetch(name, default)
   end
 
-  def elasticsearch_output_config(type_string = nil)
+  def elasticsearch_output_config(type_string = nil, index_suffix = "-%{+YYYY.MM.dd}")
     hosts = array_to_string(get_setting(LogStash::Setting::SplittableStringArray.new("var.elasticsearch.hosts", String, ["localhost:9200"])))
-    index = "#{@name}-#{setting("var.elasticsearch.index_suffix", "%{+YYYY.MM.dd}")}"
+    index = "#{@name}#{index_suffix}"
     user = @settings["var.elasticsearch.username"]
     password = @settings["var.elasticsearch.password"]
     lines = ["hosts => #{hosts}", "index => \"#{index}\""]
diff --git a/logstash-core/spec/logstash/modules/logstash_config_spec.rb b/logstash-core/spec/logstash/modules/logstash_config_spec.rb
index 24577f77b4b..1a7d324ebea 100644
--- a/logstash-core/spec/logstash/modules/logstash_config_spec.rb
+++ b/logstash-core/spec/logstash/modules/logstash_config_spec.rb
@@ -18,7 +18,8 @@
 require "logstash/modules/logstash_config"
 
 describe LogStash::Modules::LogStashConfig do
-  let(:mod) { instance_double("module", :directory => Stud::Temporary.directory, :module_name => "testing") }
+  let(:module_name) { "testing" }
+  let(:mod) { instance_double("module", :directory => Stud::Temporary.directory, :module_name => module_name) }
   let(:settings) { {"var.logstash.testing.pants" => "fancy", "var.elasticsearch.password" => LogStash::Util::Password.new('correct_horse_battery_staple') }}
   subject { described_class.new(mod, settings) }
 
@@ -52,9 +53,21 @@
     end
   end
 
-  describe 'elastic_search_config' do
+  describe 'elasticsearch_config_output' do
+    let(:args) { nil }
+    let(:config) { subject.elasticsearch_output_config(*args) }
     it 'should put the password in correctly' do
-      expect(subject.elasticsearch_output_config()).to include("password => \"correct_horse_battery_staple\"")
+      expect(config).to include("password => \"correct_horse_battery_staple\"")
+    end
+    it 'appends the timestamp expression to the index name' do
+      expect(config).to include("index => \"#{module_name}-%{+YYYY.MM.dd}\"")
+    end
+    context "when index_suffix is customized" do
+      let(:custom_suffix) { "-new_suffix" }
+      let(:args) { ["my_custom", custom_suffix] }
+      it 'the index name uses the custom suffix instead' do
+        expect(config).to include("index => \"#{module_name}#{custom_suffix}\"")
+      end
     end
   end
 
diff --git a/x-pack/modules/arcsight/configuration/logstash/arcsight.conf.erb b/x-pack/modules/arcsight/configuration/logstash/arcsight.conf.erb
index 57a24477ff1..4f021b21058 100644
--- a/x-pack/modules/arcsight/configuration/logstash/arcsight.conf.erb
+++ b/x-pack/modules/arcsight/configuration/logstash/arcsight.conf.erb
@@ -21,7 +21,7 @@ input {
     bootstrap_servers => <%= csv_string(get_setting(LogStash::Setting::SplittableStringArray.new("var.input.kafka.bootstrap_servers", String, "localhost:39092"))) %>
     topics => <%= array_to_string(get_setting(LogStash::Setting::SplittableStringArray.new("var.input.kafka.topics", String, ["eb-cef"]))) %>
     <%= LogStash::Arcsight::ConfigHelper.kafka_input_ssl_sasl_config(self) %>
-    type => syslog
+    type => _doc
   }
   <% end %>
 
@@ -31,7 +31,7 @@ input {
     codec => cef { delimiter => "\r\n" }
     port => <%= setting("var.input.tcp.port", 5000) %>
     <%= LogStash::Arcsight::ConfigHelper.tcp_input_ssl_config(self) %>
-    type => syslog
+    type => _doc
   }
   <% end %>
 }
@@ -67,5 +67,5 @@ filter {
 }
 
 output {
-  <%= elasticsearch_output_config('syslog') %>
+  <%= elasticsearch_output_config('_doc', "-#{LOGSTASH_VERSION}-%{+YYYY.MM.dd}") %>
 }
diff --git a/x-pack/spec/modules/arcsight/arcsight_module_config_spec.rb b/x-pack/spec/modules/arcsight/arcsight_module_config_spec.rb
new file mode 100644
index 00000000000..d4d1fc93535
--- /dev/null
+++ b/x-pack/spec/modules/arcsight/arcsight_module_config_spec.rb
@@ -0,0 +1,21 @@
+require_relative '../../../../x-pack/lib/x-pack/logstash_registry.rb'
+require 'logstash-core'
+require 'logstash/settings'
+require 'logstash/util/modules_setting_array'
+require 'logstash/modules/scaffold'
+require 'arcsight_module_config_helper'
+
+describe "ArcSight module" do 
+  let(:logstash_config_class) { LogStash::Modules::LogStashConfig  }
+  let(:module_name) { "arcsight" }
+  let(:module_path) { ::File.join(LogStash::Environment::LOGSTASH_HOME, "x-pack", "modules", module_name, "configuration") }
+  let(:mod) { instance_double("arcsight", :directory => module_path , :module_name => module_name) }
+  let(:settings) { {} }
+  subject { logstash_config_class.new(mod, settings) }
+
+  it "test" do
+    expect(subject.config_string).to include("index => \"arcsight-#{::LOGSTASH_VERSION}-%{+YYYY.MM.dd}\"")
+  end
+end
+
+
