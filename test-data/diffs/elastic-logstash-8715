diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/Graph.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/Graph.java
index 627f87aaa07..d1a5d9e7441 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/Graph.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/Graph.java
@@ -156,8 +156,8 @@ public Graph chain(Graph otherGraph) throws InvalidIRException {
 
         // Build these lists here since we do mutate the graph in place later
         // This isn't strictly necessary, but makes things less confusing
-        Collection<Vertex> fromLeaves = allLeaves().map(combineResult.oldToNewVertices::get).collect(Collectors.toSet());
-        Collection<Vertex> toRoots = otherGraph.roots().map(combineResult.oldToNewVertices::get).collect(Collectors.toSet());
+        Collection<Vertex> fromLeaves = allLeaves().map(combineResult.oldToNewVertices::get).collect(Collectors.toList());
+        Collection<Vertex> toRoots = otherGraph.roots().map(combineResult.oldToNewVertices::get).collect(Collectors.toList());
 
         return combineResult.graph.chain(fromLeaves, toRoots);
     }
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/graph/GraphTest.java b/logstash-core/src/test/java/org/logstash/config/ir/graph/GraphTest.java
index 03cc77b6ea4..836eda8d438 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/graph/GraphTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/graph/GraphTest.java
@@ -83,10 +83,11 @@ public void SimpleConsistencyTest() throws InvalidIRException {
 
     @Test
     public void complexConsistencyTest() throws InvalidIRException {
-        Graph g1 = IRHelpers.samplePipeline().getGraph();
-        Graph g2 = IRHelpers.samplePipeline().getGraph();
-
-        assertEquals(g1.uniqueHash(), g2.uniqueHash());
+        for (int i = 0; i < 10; ++i) {
+            Graph g1 = IRHelpers.samplePipeline().getGraph();
+            Graph g2 = IRHelpers.samplePipeline().getGraph();
+            assertEquals(g1.uniqueHash(), g2.uniqueHash());
+        }
     }
 
     @Test
