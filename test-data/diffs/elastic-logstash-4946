diff --git a/logstash-core/lib/logstash/pipeline.rb b/logstash-core/lib/logstash/pipeline.rb
index 4671b93340c..2cbedae3bf0 100644
--- a/logstash-core/lib/logstash/pipeline.rb
+++ b/logstash-core/lib/logstash/pipeline.rb
@@ -52,15 +52,6 @@ module LogStash; class Pipeline
     "LogStash::Inputs::Stdin"
   ]
 
-  def self.validate_config(config_str, settings = {})
-    begin
-      # There should be a better way to test this
-      self.new(config_str, settings)
-    rescue => e
-      e.message
-    end
-  end
-
   def initialize(config_str, settings = {})
     @config_str = config_str
     @original_settings = settings
diff --git a/logstash-core/lib/logstash/runner.rb b/logstash-core/lib/logstash/runner.rb
index a8984244a46..8d261d49276 100644
--- a/logstash-core/lib/logstash/runner.rb
+++ b/logstash-core/lib/logstash/runner.rb
@@ -166,14 +166,14 @@ def execute
     end
 
     if config_test?
-      config_loader = LogStash::Config::Loader.new(@logger, config_test?)
+      config_loader = LogStash::Config::Loader.new(@logger)
       config_str = config_loader.format_config(config_path, config_string)
-      config_error = LogStash::Pipeline.config_valid?(config_str)
-      if config_error == true
+      begin
+        LogStash::Pipeline.new(config_str)
         @logger.terminal "Configuration OK"
         return 0
-      else
-        @logger.fatal I18n.t("logstash.error", :error => config_error)
+      rescue => e
+        @logger.fatal I18n.t("logstash.runner.invalid-configuration", :error => e.message)
         return 1
       end
     end
@@ -213,7 +213,7 @@ def execute
     show_short_help
     return 1
   rescue => e
-    @logger.fatal I18n.t("oops", :error => e, :backtrace => e.backtrace)
+    @logger.fatal(I18n.t("oops"), :error => e, :backtrace => e.backtrace)
     return 1
   ensure
     Stud::untrap("INT", sigint_id) unless sigint_id.nil?
diff --git a/logstash-core/locales/en.yml b/logstash-core/locales/en.yml
index ab8dacef9b7..e373ff3c4bc 100644
--- a/logstash-core/locales/en.yml
+++ b/logstash-core/locales/en.yml
@@ -91,6 +91,8 @@ en:
           bin/logstash -i SHELL [--quiet|verbose|debug]
           bin/logstash -V [--verbose|debug]
           bin/logstash --help
+      invalid-configuration: >-
+        The given configuration is invalid. Reason: %{error}
       missing-configuration: >-
         No configuration file was specified. Perhaps you forgot to provide
         the '-f yourlogstash.conf' flag?
diff --git a/logstash-core/spec/logstash/runner_spec.rb b/logstash-core/spec/logstash/runner_spec.rb
index f8bcd9a6f35..98802f32d59 100644
--- a/logstash-core/spec/logstash/runner_spec.rb
+++ b/logstash-core/spec/logstash/runner_spec.rb
@@ -95,6 +95,26 @@ def run(args); end
     end
   end
 
+  describe "--config-test" do
+    subject { LogStash::Runner.new("") }
+    let(:args) { ["-t", "-e", pipeline_string] }
+
+    context "with a good configuration" do
+      let(:pipeline_string) { "input { } filter { } output { }" }
+      it "should exit successfuly" do
+        expect(channel).to receive(:terminal)
+        expect(subject.run(args)).to eq(0)
+      end
+    end
+
+    context "with a bad configuration" do
+      let(:pipeline_string) { "rlwekjhrewlqrkjh" }
+      it "should fail by returning a bad exit code" do
+        expect(channel).to receive(:fatal)
+        expect(subject.run(args)).to eq(1)
+      end
+    end
+  end
   describe "pipeline settings" do
     let(:pipeline_string) { "input { stdin {} } output { stdout {} }" }
     let(:main_pipeline_settings) { { :pipeline_id => "main" } }
