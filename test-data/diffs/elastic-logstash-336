diff --git a/bin/logstash-ruby b/bin/logstash-ruby
new file mode 100755
index 00000000000..8460856f3a7
--- /dev/null
+++ b/bin/logstash-ruby
@@ -0,0 +1,12 @@
+#!/usr/bin/env ruby
+#
+# Call this script through bundler:
+#
+# bundle exec logstash-ruby <...>
+#
+# ('bundle exec logstash <...>' will try to load the logstash script
+# from the gem shim, which won't work because logstash is a shell
+# script.)
+
+require "logstash/runner"
+LogStash::Runner.new.main(ARGV)
diff --git a/lib/logstash/event.rb b/lib/logstash/event.rb
index b32068c6de0..038296dfa21 100644
--- a/lib/logstash/event.rb
+++ b/lib/logstash/event.rb
@@ -1,4 +1,5 @@
 require "json"
+require "msgpack"
 require "time"
 require "date"
 require "logstash/time_addon"
@@ -36,6 +37,11 @@ def self.from_json(json)
     return LogStash::Event.new(JSON.parse(json))
   end # def self.from_json
 
+  public
+  def self.from_msgpack(msgpack)
+    return LogStash::Event.new(MessagePack.unpack(msgpack))
+  end # def self.from_msgpack
+
   public
   def cancel
     @cancelled = true
@@ -175,6 +181,7 @@ def fields; return @data["@fields"] end # def fields
   public
   def to_json(*args); return @data.to_json(*args) end # def to_json
   def to_hash; return @data end # def to_hash
+  def to_msgpack; return MessagePack.pack(@data) end # def to_msgpack
 
   public
   def overwrite(event)
diff --git a/lib/logstash/inputs/amqp.rb b/lib/logstash/inputs/amqp.rb
index 56f4066f104..a4bd00cc3fb 100644
--- a/lib/logstash/inputs/amqp.rb
+++ b/lib/logstash/inputs/amqp.rb
@@ -81,13 +81,7 @@ class LogStash::Inputs::Amqp < LogStash::Inputs::Threadable
   # Validate SSL certificate
   config :verify_ssl, :validate => :boolean, :default => false
 
-  public
-  def initialize(params)
-    super
-
-    @format ||= "json_event"
-
-  end # def initialize
+  config :format, :validate => [ "json_event", "msgpack_event" ], :default => "json_event"
 
   public
   def register
@@ -134,7 +128,10 @@ def run(queue)
       @arguments_hash = Hash[*@arguments]
 
       @bunnyqueue = @bunny.queue(@queue, {:durable => @durable, :auto_delete => @auto_delete, :exclusive => @exclusive, :arguments => @arguments_hash })
-      @bunnyqueue.bind(@exchange, :key => @key)
+      # Don't try to bind the default exchange
+      unless @exchange == ''
+        @bunnyqueue.bind(@exchange, :key => @key)
+      end
 
       @bunnyqueue.subscribe({:ack => @ack}) do |data|
         e = to_event(data[:payload], @amqpurl)
diff --git a/lib/logstash/inputs/base.rb b/lib/logstash/inputs/base.rb
index a6e5a7393e1..a57ddb5c041 100644
--- a/lib/logstash/inputs/base.rb
+++ b/lib/logstash/inputs/base.rb
@@ -126,6 +126,23 @@ def to_event(raw, source)
         event.tags << "_jsonparsefailure"
       end
 
+      if event.source == "unknown"
+        event.source = source
+      end
+    when "msgpack_event"
+      begin
+        event = LogStash::Event.from_msgpack(raw)
+        event.tags += @tags
+        if @message_format
+          event.message ||= event.sprintf(@message_format)
+        end
+      rescue => e
+        @logger.error("Trouble parsing msgpack input, falling back to plain text",
+                     :input => raw, :source => source, :exception => e)
+        event.message = raw
+        event.tags << "_msgpackparsefailure"
+      end
+
       if event.source == "unknown"
         event.source = source
       end
diff --git a/lib/logstash/outputs/amqp.rb b/lib/logstash/outputs/amqp.rb
index 676d62ea81b..0fcf8305dc3 100644
--- a/lib/logstash/outputs/amqp.rb
+++ b/lib/logstash/outputs/amqp.rb
@@ -59,6 +59,8 @@ class LogStash::Outputs::Amqp < LogStash::Outputs::Base
   # Validate SSL certificate
   config :verify_ssl, :validate => :boolean, :default => false
 
+  config :format, :validate => ["json_event", "msgpack_event"], :default => "json_event"
+
   public
   def register
     require "bunny" # rubygem 'bunny'
@@ -118,14 +120,26 @@ def receive(event)
                   :key => key)
     key = event.sprintf(@key) if @key
     begin
-      receive_raw(event.to_json, key)
-    rescue JSON::GeneratorError => e
-      @logger.warn("Trouble converting event to JSON", :exception => e,
+      formatted = format_event(event, @format)
+    rescue => e
+      @logger.warn("Trouble formatting event as #{@format}", :exception => e,
                    :event => event)
       return
+    else
+      receive_raw(formatted, key)
     end
   end # def receive
 
+  private
+  def format_event(event, format)
+    case format
+    when "json_event"
+      event.to_json
+    when "msgpack_event"
+      event.to_msgpack
+    end
+  end
+
   public
   def receive_raw(message, key=@key)
     begin
diff --git a/logstash.gemspec b/logstash.gemspec
index d22e074d3d6..01dc1b38299 100644
--- a/logstash.gemspec
+++ b/logstash.gemspec
@@ -23,6 +23,7 @@ Gem::Specification.new do |gem|
   gem.add_runtime_dependency "pry"
   gem.add_runtime_dependency "stud"
   gem.add_runtime_dependency "sys-uname" # for platform detection
+  gem.add_runtime_dependency "msgpack-jruby"
 
   # Web dependencies
   gem.add_runtime_dependency "ftw", ["~> 0.0.26"]
@@ -35,7 +36,7 @@ Gem::Specification.new do |gem|
   #TODO Can these be optional?
   gem.add_runtime_dependency "aws-sdk"
   gem.add_runtime_dependency "heroku"
-  gem.add_runtime_dependency "addressable", ["~> 2.2.6"]
+  gem.add_runtime_dependency "addressable", [">= 2.2.6"]
   gem.add_runtime_dependency "bunny"
   gem.add_runtime_dependency "ffi"
   gem.add_runtime_dependency "ffi-rzmq", ["0.9.3"]
