diff --git a/logstash-core/build.gradle b/logstash-core/build.gradle
index 6b921972dd9..aab347ff7dc 100644
--- a/logstash-core/build.gradle
+++ b/logstash-core/build.gradle
@@ -120,7 +120,6 @@ dependencies {
     compile 'org.codehaus.janino:janino:3.0.8'
     compile "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:${jacksonVersion}"
     compile "org.jruby:jruby-complete:${jrubyVersion}"
-    compile 'com.google.googlejavaformat:google-java-format:1.5'
     testCompile 'org.apache.logging.log4j:log4j-core:2.9.1:tests'
     testCompile 'junit:junit:4.12'
     testCompile 'net.javacrumbs.json-unit:json-unit:1.9.0'
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/compiler/ComputeStepSyntaxElement.java b/logstash-core/src/main/java/org/logstash/config/ir/compiler/ComputeStepSyntaxElement.java
index faecd1e18fd..b54d2380208 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/compiler/ComputeStepSyntaxElement.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/compiler/ComputeStepSyntaxElement.java
@@ -1,7 +1,5 @@
 package org.logstash.config.ir.compiler;
 
-import com.google.googlejavaformat.java.Formatter;
-import com.google.googlejavaformat.java.FormatterException;
 import java.io.IOException;
 import java.lang.reflect.InvocationTargetException;
 import java.nio.charset.StandardCharsets;
@@ -37,8 +35,7 @@ public final class ComputeStepSyntaxElement<T extends Dataset> {
         = new HashMap<>();
 
     /**
-     * Pattern to remove redundant {@code ;} from formatted code since {@link Formatter} does not
-     * remove those.
+     * Pattern to remove redundant {@code ;} from formatted code
      */
     private static final Pattern REDUNDANT_SEMICOLON = Pattern.compile("\n[ ]*;\n");
 
@@ -103,24 +100,20 @@ public boolean equals(final Object other) {
     }
 
     private String generateCode(final String name) {
-        try {
-            return REDUNDANT_SEMICOLON.matcher(new Formatter().formatSource(
-                String.format(
-                    "package org.logstash.generated;\npublic final class %s implements %s { %s }",
-                    name,
-                    type.getName(),
-                    SyntaxFactory.join(
-                        fields.inlineAssigned().generateCode(), fieldsAndCtor(name),
-                        combine(
-                            StreamSupport.stream(methods.spliterator(), false)
-                                .toArray(SyntaxElement[]::new)
-                        )
+        return REDUNDANT_SEMICOLON.matcher(
+            String.format(
+                "package org.logstash.generated;\npublic final class %s implements %s { %s }",
+                name,
+                type.getName(),
+                SyntaxFactory.join(
+                    fields.inlineAssigned().generateCode(), fieldsAndCtor(name),
+                    combine(
+                        StreamSupport.stream(methods.spliterator(), false)
+                            .toArray(SyntaxElement[]::new)
                     )
                 )
-            )).replaceAll("\n");
-        } catch (final FormatterException ex) {
-            throw new IllegalStateException(ex);
-        }
+            )
+        ).replaceAll("\n");
     }
 
     private static Path debugDir() {
