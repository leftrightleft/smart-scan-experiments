diff --git a/logstash-core/lib/logstash/settings.rb b/logstash-core/lib/logstash/settings.rb
index 4288d882c31..ecdac5885d4 100644
--- a/logstash-core/lib/logstash/settings.rb
+++ b/logstash-core/lib/logstash/settings.rb
@@ -598,11 +598,7 @@ def initialize(name, guidance='please remove the setting from your configuration
       end
 
       def set(value)
-        fail(RuntimeError, "The setting `#{name}` has been deprecated and removed from Logstash; #{@guidance}")
-      end
-
-      def value
-        fail(ArgumentError, "The setting `#{name}` has been deprecated and removed from Logstash")
+        fail(ArgumentError, "The setting `#{name}` has been deprecated and removed from Logstash; #{@guidance}")
       end
     end
 
diff --git a/logstash-core/spec/logstash/settings/deprecated_and_renamed_spec.rb b/logstash-core/spec/logstash/settings/deprecated_and_renamed_spec.rb
index 74ce828ee86..fd9faf3510f 100644
--- a/logstash-core/spec/logstash/settings/deprecated_and_renamed_spec.rb
+++ b/logstash-core/spec/logstash/settings/deprecated_and_renamed_spec.rb
@@ -9,22 +9,11 @@
   describe '#set' do
     it 'fails with deprecation runtime error and helpful guidance' do
       expect { setting.set(value) }.to raise_exception do |exception|
-        expect(exception).to be_a_kind_of(RuntimeError)
-        expect(exception.message).to match(/deprecated and removed/)
-        expect(exception.message).to include("option.deprecated")
-        expect(exception.message).to include("option.current")
-      end
-    end
-  end
-
-  describe '#value' do
-    it 'fails with deprecation argument error' do
-      expect { setting.value }.to raise_exception do |exception|
         expect(exception).to be_a_kind_of(ArgumentError)
         expect(exception.message).to match(/deprecated and removed/)
         expect(exception.message).to include("option.deprecated")
+        expect(exception.message).to include("option.current")
       end
     end
   end
-
-end
\ No newline at end of file
+end
