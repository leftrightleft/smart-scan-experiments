diff --git a/logstash-core/lib/logstash/api/lib/app/modules/node.rb b/logstash-core/lib/logstash/api/lib/app/modules/node.rb
index 661cac9cb32..21d877f1164 100644
--- a/logstash-core/lib/logstash/api/lib/app/modules/node.rb
+++ b/logstash-core/lib/logstash/api/lib/app/modules/node.rb
@@ -15,8 +15,8 @@ class Node < BaseApp
         :human => params.has_key?("human")
       }
       command = factory.build(:hot_threads_command)
-      type    = options[:human] ? :string : :json
-      respond_with(command.run(options), type)
+      as    = options[:human] ? :string : :json
+      respond_with(command.run(options), {:as => as})
     end
 
   end
diff --git a/logstash-core/lib/logstash/api/lib/helpers/app_helpers.rb b/logstash-core/lib/logstash/api/lib/helpers/app_helpers.rb
index c8900233e51..cd872edc51d 100644
--- a/logstash-core/lib/logstash/api/lib/helpers/app_helpers.rb
+++ b/logstash-core/lib/logstash/api/lib/helpers/app_helpers.rb
@@ -3,10 +3,12 @@
 
 module LogStash::Api::AppHelpers
 
-  def respond_with(data, as=:json)
+  def respond_with(data, options={})
+    as     = options.fetch(:as, :json)
+    pretty = params.has_key?("pretty")
     if as == :json
       content_type "application/json"
-      LogStash::Json.dump(data)
+      LogStash::Json.dump(data, {:pretty => pretty})
     else
       content_type "text/plain"
       data.to_s
diff --git a/logstash-core/lib/logstash/json.rb b/logstash-core/lib/logstash/json.rb
index adbabff18c5..7380b630463 100644
--- a/logstash-core/lib/logstash/json.rb
+++ b/logstash-core/lib/logstash/json.rb
@@ -41,13 +41,12 @@ def jruby_load(data, options = {})
       raise LogStash::Json::ParserError.new(e.message)
     end
 
-    def jruby_dump(o)
+    def jruby_dump(o, options={})
       # TODO [guyboertje] remove these comments in 5.0
       # test for enumerable here to work around an omission in JrJackson::Json.dump to
       # also look for Java::JavaUtil::ArrayList, see TODO submit issue
       # o.is_a?(Enumerable) ? JrJackson::Raw.generate(o) : JrJackson::Json.dump(o)
-
-      JrJackson::Base.generate(o, {})
+      JrJackson::Base.generate(o, options)
 
     rescue => e
       raise LogStash::Json::GeneratorError.new(e.message)
diff --git a/logstash-core/spec/logstash/json_spec.rb b/logstash-core/spec/logstash/json_spec.rb
index f0304f219c8..0b6cea93e3a 100644
--- a/logstash-core/spec/logstash/json_spec.rb
+++ b/logstash-core/spec/logstash/json_spec.rb
@@ -56,6 +56,20 @@
         expect(LogStash::Json.dump(array)).to eql(json_array)
       end
 
+      context "pretty print" do
+
+        let(:hash) { { "foo" => "bar", :zoo => 2 } }
+
+        it "should serialize with pretty print" do
+          pprint_json = LogStash::Json.dump(hash, :pretty => true)
+          expect(pprint_json).to include("\n")
+        end
+
+        it "should by default do no pretty print" do
+          pprint_json = LogStash::Json.dump(hash)
+          expect(pprint_json).not_to include("\n")
+        end
+      end
     end
 
   else
