diff --git a/qa/Rakefile b/qa/Rakefile
index ffcde89f07a..b432a79f91d 100644
--- a/qa/Rakefile
+++ b/qa/Rakefile
@@ -13,6 +13,12 @@ namespace :qa do
 
   namespace :vm do
 
+    def user_feedback_string_for(action, platform, machines, options={})
+      experimental_string = options["experimental"] ? "experimental" : "non experimental"
+      message  = "#{action} all #{experimental_string} VM's defined in acceptance/Vagrantfile"
+      "#{message} for #{platform}: #{machines}" if !platform.nil?
+    end
+
     desc "Generate a valid ssh-config"
     task :ssh_config do
       require "json"
@@ -24,10 +30,10 @@ namespace :qa do
     desc "Bootstrap all the VM's used for this tests"
     task :setup, :platform do |t, args|
       config   = PlatformConfig.new
-      machines = config.select_names_for(args[:platform])
+      experimental = (ENV['LS_QA_EXPERIMENTAL_OS'].to_s.downcase || "false") == "true"
+      machines = config.select_names_for(args[:platform], {"experimental" => experimental})
 
-      message  = "bootstraping all VM's defined in acceptance/Vagrantfile"
-      message  = "#{message} for #{args[:platform]}: #{machines}" if !args[:platform].nil?
+      puts user_feedback_string_for("bootstraping", args[:platform], machines, {"experimental" => experimental})
 
       LogStash::VagrantHelpers.destroy(machines)
       LogStash::VagrantHelpers.bootstrap(machines)
@@ -36,10 +42,10 @@ namespace :qa do
     desc "Halt all VM's involved in the acceptance test round"
     task :halt, :platform do |t, args|
       config   = PlatformConfig.new
-      machines = config.select_names_for(args[:platform])
-      message = "halting all VM's defined inside Vagrantfile"
-      message  = "#{message} for #{args[:platform]}: #{machines}" if !args[:platform].nil?
-      puts message
+      experimental = (ENV['LS_QA_EXPERIMENTAL_OS'].to_s.downcase || "false") == "true"
+      machines = config.select_names_for(args[:platform], {"experimental" => experimental})
+
+      puts user_feedback_string_for("halting", args[:platform], machines, {"experimental" => experimental})
 
       LogStash::VagrantHelpers.halt(machines)
     end
diff --git a/qa/acceptance/spec/spec_helper.rb b/qa/acceptance/spec/spec_helper.rb
index 8cceefd5c13..99d6bb9a141 100644
--- a/qa/acceptance/spec/spec_helper.rb
+++ b/qa/acceptance/spec/spec_helper.rb
@@ -15,11 +15,12 @@
 end
 
 platform = ENV['LS_TEST_PLATFORM'] || 'all'
+experimental = (ENV['LS_QA_EXPERIMENTAL_OS'].to_s.downcase || "false") == "true"
 
 config                  = PlatformConfig.new
 LOGSTASH_LATEST_VERSION = config.latest
 
-default_vagrant_boxes = ( platform == 'all' ? config.platforms : config.filter_type(platform) )
+default_vagrant_boxes = ( platform == 'all' ? config.platforms : config.filter_type(platform, {"experimental" => experimental}) )
 
 selected_boxes = if ENV.include?('LS_VAGRANT_HOST') then
                    config.platforms.select { |p| p.name  == ENV['LS_VAGRANT_HOST'] }
diff --git a/qa/config/platforms.json b/qa/config/platforms.json
index 3556b418cb2..52f8223644e 100644
--- a/qa/config/platforms.json
+++ b/qa/config/platforms.json
@@ -3,11 +3,13 @@
   "platforms" : {
     "ubuntu-1204": { "box": "elastic/ubuntu-12.04-x86_64", "type": "debian" },
     "ubuntu-1404": { "box": "elastic/ubuntu-14.04-x86_64", "type": "debian", "specific": true },
-    "ubuntu-1604": { "box": "elastic/ubuntu-16.04-x86_64", "type": "debian" },
+    "ubuntu-1604": { "box": "elastic/ubuntu-16.04-x86_64", "type": "debian", "experimental": true },
     "centos-6": { "box": "elastic/centos-6-x86_64", "type": "redhat" },
     "centos-7": { "box": "elastic/centos-7-x86_64", "type": "redhat" },
     "oel-6": { "box": "elastic/oraclelinux-6-x86_64", "type": "redhat" },
     "oel-7": { "box": "elastic/oraclelinux-7-x86_64", "type": "redhat" },
+    "fedora-22": { "box": "elastic/fedora-22-x86_64", "type": "redhat", "experimental": true },
+    "fedora-23": { "box": "elastic/fedora-23-x86_64", "type": "redhat", "experimental": true },
     "debian-8": { "box": "elastic/debian-8-x86_64", "type": "debian", "specific":  true },
     "opensuse-13": { "box": "elastic/opensuse-13-x86_64", "type": "suse" },
     "sles-11": { "box": "elastic/sles-11-x86_64", "type": "suse", "specific": true },
diff --git a/qa/platform_config.rb b/qa/platform_config.rb
index 42e4b197404..37073b2bb50 100644
--- a/qa/platform_config.rb
+++ b/qa/platform_config.rb
@@ -11,12 +11,13 @@ class PlatformConfig
   # Abstract the idea of a platform, aka an OS
   class Platform
 
-    attr_reader :name, :box, :type, :bootstrap
+    attr_reader :name, :box, :type, :bootstrap, :experimental
 
     def initialize(name, data)
       @name = name
       @box  = data["box"]
       @type = data["type"]
+      @experimental = data["experimental"] || false
       configure_bootstrap_scripts(data)
     end
 
@@ -63,12 +64,14 @@ def each(&block)
     @platforms.each(&block)
   end
 
-  def filter_type(type_name)
-    @platforms.select { |platform| platform.type == type_name }
+  def filter_type(type_name, options={})
+    experimental = options.fetch("experimental", false)
+    @platforms.select { |platform| platform.type == type_name && platform.experimental == experimental }
   end
 
-  def select_names_for(platform=nil)
-    !platform.nil? ? filter_type(platform).map{ |p| p.name } : ""
+  def select_names_for(platform, options={})
+    filter_options = { "experimental" => options.fetch("experimental", false) }
+    !platform.nil? ? filter_type(platform, filter_options).map{ |p| p.name } : ""
   end
 
   def types
