diff --git a/.rubocop.yml b/.rubocop.yml
index 2807b1e224e..ffbd03ecaaf 100644
--- a/.rubocop.yml
+++ b/.rubocop.yml
@@ -24,6 +24,8 @@ AllCops:
 ##### Enabled Cops #####
 Layout/TrailingWhitespace:
   Enabled: true
+Layout/TrailingEmptyLines:
+  Enabled: true
 
 ##### Need review #####
 Layout/AccessModifierIndentation:
@@ -220,5 +222,3 @@ Layout/SpaceInsideReferenceBrackets:
   Enabled: false
 Layout/SpaceInsideStringInterpolation:
   Enabled: false
-Layout/TrailingEmptyLines:
-  Enabled: false
diff --git a/logstash-core/lib/logstash/compiler/lscl/lscl_grammar.rb b/logstash-core/lib/logstash/compiler/lscl/lscl_grammar.rb
index da90b24f63e..20b1c881365 100644
--- a/logstash-core/lib/logstash/compiler/lscl/lscl_grammar.rb
+++ b/logstash-core/lib/logstash/compiler/lscl/lscl_grammar.rb
@@ -3553,4 +3553,3 @@ def _nt_selector_element
 class LogStashCompilerLSCLGrammarParser < Treetop::Runtime::CompiledParser
   include LogStashCompilerLSCLGrammar
 end
-
diff --git a/logstash-core/lib/logstash/config/grammar.rb b/logstash-core/lib/logstash/config/grammar.rb
index 008878c8ca6..5a0ae08a1e7 100644
--- a/logstash-core/lib/logstash/config/grammar.rb
+++ b/logstash-core/lib/logstash/config/grammar.rb
@@ -3577,4 +3577,3 @@ def _nt_selector_element
 class LogStashConfigParser < Treetop::Runtime::CompiledParser
   include LogStashConfig
 end
-
diff --git a/logstash-core/lib/logstash/config/pipeline_config.rb b/logstash-core/lib/logstash/config/pipeline_config.rb
index 32194bf895a..6981162ff98 100644
--- a/logstash-core/lib/logstash/config/pipeline_config.rb
+++ b/logstash-core/lib/logstash/config/pipeline_config.rb
@@ -17,4 +17,4 @@
 
 module LogStash::Config
   java_import org.logstash.config.ir.PipelineConfig
-end
\ No newline at end of file
+end
diff --git a/logstash-core/lib/logstash/deprecation_message.rb b/logstash-core/lib/logstash/deprecation_message.rb
index d3bf6abcd68..59a61da32cd 100644
--- a/logstash-core/lib/logstash/deprecation_message.rb
+++ b/logstash-core/lib/logstash/deprecation_message.rb
@@ -28,4 +28,4 @@ def self.instance
       @@instance ||= Array.new
     end
   end
-end
\ No newline at end of file
+end
diff --git a/logstash-core/lib/logstash/instrument/periodic_poller/flow_rate.rb b/logstash-core/lib/logstash/instrument/periodic_poller/flow_rate.rb
index de867ade672..2ead1de78dc 100644
--- a/logstash-core/lib/logstash/instrument/periodic_poller/flow_rate.rb
+++ b/logstash-core/lib/logstash/instrument/periodic_poller/flow_rate.rb
@@ -32,4 +32,4 @@ def collect
       pipelines.values.compact.each(&:collect_flow_metrics)
     end
   end
-end end end
\ No newline at end of file
+end end end
diff --git a/logstash-core/lib/logstash/logging/logger.rb b/logstash-core/lib/logstash/logging/logger.rb
index a019eb11688..dd005921231 100644
--- a/logstash-core/lib/logstash/logging/logger.rb
+++ b/logstash-core/lib/logstash/logging/logger.rb
@@ -15,4 +15,4 @@
 # specific language governing permissions and limitations
 # under the License.
 
-# Keeping this file for backwards compatibility with plugins that include it directly.
\ No newline at end of file
+# Keeping this file for backwards compatibility with plugins that include it directly.
diff --git a/logstash-core/lib/logstash/patches/manticore/trust_strategies.rb b/logstash-core/lib/logstash/patches/manticore/trust_strategies.rb
index 831e8f5265c..20eecebb3a8 100644
--- a/logstash-core/lib/logstash/patches/manticore/trust_strategies.rb
+++ b/logstash-core/lib/logstash/patches/manticore/trust_strategies.rb
@@ -40,4 +40,4 @@ def trusted?(x509_certificate_chain, auth_type)
     end
   end
   ::Manticore::Client.send(:prepend, ManticoreTrustStrategiesBackport)
-end
\ No newline at end of file
+end
diff --git a/logstash-core/lib/logstash/persisted_queue_config_validator.rb b/logstash-core/lib/logstash/persisted_queue_config_validator.rb
index dda5b6c246b..6918d88fbab 100644
--- a/logstash-core/lib/logstash/persisted_queue_config_validator.rb
+++ b/logstash-core/lib/logstash/persisted_queue_config_validator.rb
@@ -139,4 +139,4 @@ def create_dirs(queue_path)
       Files.createDirectories(path)
     end
   end
-end
\ No newline at end of file
+end
diff --git a/logstash-core/lib/logstash/pipeline.rb b/logstash-core/lib/logstash/pipeline.rb
index b557fbbd9d0..98429b9c44c 100644
--- a/logstash-core/lib/logstash/pipeline.rb
+++ b/logstash-core/lib/logstash/pipeline.rb
@@ -20,4 +20,4 @@
 require 'logstash/java_pipeline'
 module LogStash
   Pipeline = JavaPipeline
-end
\ No newline at end of file
+end
diff --git a/logstash-core/lib/logstash/plugin_metadata.rb b/logstash-core/lib/logstash/plugin_metadata.rb
index edd4ceebbe7..90182d1455c 100644
--- a/logstash-core/lib/logstash/plugin_metadata.rb
+++ b/logstash-core/lib/logstash/plugin_metadata.rb
@@ -149,4 +149,4 @@ def clear
       @datastore.clear
     end
   end
-end
\ No newline at end of file
+end
diff --git a/logstash-core/lib/logstash/plugins.rb b/logstash-core/lib/logstash/plugins.rb
index 990cae80696..6d90a1afc12 100644
--- a/logstash-core/lib/logstash/plugins.rb
+++ b/logstash-core/lib/logstash/plugins.rb
@@ -16,4 +16,4 @@
 # under the License.
 
 require "logstash/plugins/registry"
-require 'logstash/plugins/builtin'
\ No newline at end of file
+require 'logstash/plugins/builtin'
diff --git a/logstash-core/lib/logstash/plugins/builtin.rb b/logstash-core/lib/logstash/plugins/builtin.rb
index 1fb4c9fcbe6..1375d35f45c 100644
--- a/logstash-core/lib/logstash/plugins/builtin.rb
+++ b/logstash-core/lib/logstash/plugins/builtin.rb
@@ -21,4 +21,4 @@ module ::LogStash::Plugins::Builtin
 
   LogStash::PLUGIN_REGISTRY.add(:input, "pipeline", LogStash::Plugins::Builtin::Pipeline::Input)
   LogStash::PLUGIN_REGISTRY.add(:output, "pipeline", LogStash::Plugins::Builtin::Pipeline::Output)
-end
\ No newline at end of file
+end
diff --git a/logstash-core/lib/logstash/plugins/builtin/pipeline/input.rb b/logstash-core/lib/logstash/plugins/builtin/pipeline/input.rb
index 595f4536b6d..fc0cc629e5d 100644
--- a/logstash-core/lib/logstash/plugins/builtin/pipeline/input.rb
+++ b/logstash-core/lib/logstash/plugins/builtin/pipeline/input.rb
@@ -86,4 +86,4 @@ def isRunning
     @running.get
   end
 
-end; end; end; end; end
\ No newline at end of file
+end; end; end; end; end
diff --git a/logstash-core/lib/logstash/plugins/builtin/pipeline/output.rb b/logstash-core/lib/logstash/plugins/builtin/pipeline/output.rb
index 07107cb602d..f3660d48520 100644
--- a/logstash-core/lib/logstash/plugins/builtin/pipeline/output.rb
+++ b/logstash-core/lib/logstash/plugins/builtin/pipeline/output.rb
@@ -42,4 +42,4 @@ def multi_receive(events)
   def close
     pipeline_bus.unregisterSender(self, @send_to)
   end
-end; end; end; end; end
\ No newline at end of file
+end; end; end; end; end
diff --git a/logstash-core/lib/logstash/util/settings_helper.rb b/logstash-core/lib/logstash/util/settings_helper.rb
index 1c0dbd6c75a..59fe9ab6b4d 100644
--- a/logstash-core/lib/logstash/util/settings_helper.rb
+++ b/logstash-core/lib/logstash/util/settings_helper.rb
@@ -94,4 +94,4 @@ def self.cli_help?(args)
     !(["--help", "-h"] & args).empty?
   end
 
-end
\ No newline at end of file
+end
diff --git a/logstash-core/lib/logstash/util/thread_safe_attributes.rb b/logstash-core/lib/logstash/util/thread_safe_attributes.rb
index cbd0963ed12..fddd3bc71c8 100644
--- a/logstash-core/lib/logstash/util/thread_safe_attributes.rb
+++ b/logstash-core/lib/logstash/util/thread_safe_attributes.rb
@@ -41,4 +41,4 @@ def lazy_init_attr(attribute, variable: "@#{attribute}".to_sym, &block)
 
     end
   end
-end
\ No newline at end of file
+end
diff --git a/logstash-core/spec/logstash/codecs/base_spec.rb b/logstash-core/spec/logstash/codecs/base_spec.rb
index ca4eb8fd357..4a9280b2b47 100644
--- a/logstash-core/spec/logstash/codecs/base_spec.rb
+++ b/logstash-core/spec/logstash/codecs/base_spec.rb
@@ -86,5 +86,3 @@ def encode_sync(event)
     include_examples("encoder types", LogStash::Codecs::NOOPMulti)
   end
 end
-
-
diff --git a/logstash-core/spec/logstash/codecs/delegator_spec.rb b/logstash-core/spec/logstash/codecs/delegator_spec.rb
index 7a7da19dc23..1dc771c6a7d 100644
--- a/logstash-core/spec/logstash/codecs/delegator_spec.rb
+++ b/logstash-core/spec/logstash/codecs/delegator_spec.rb
@@ -98,4 +98,4 @@ def decode(e)
       subject.plugin_type
     end
   end
-end
\ No newline at end of file
+end
diff --git a/logstash-core/spec/logstash/instrument/periodic_poller/cgroup_spec.rb b/logstash-core/spec/logstash/instrument/periodic_poller/cgroup_spec.rb
index 696050edcb6..0806ec59d1f 100644
--- a/logstash-core/spec/logstash/instrument/periodic_poller/cgroup_spec.rb
+++ b/logstash-core/spec/logstash/instrument/periodic_poller/cgroup_spec.rb
@@ -292,4 +292,4 @@ module LogStash module Instrument module PeriodicPoller
     end
   end
 end
-end end end
\ No newline at end of file
+end end end
diff --git a/logstash-core/spec/logstash/modules/settings_merger_spec.rb b/logstash-core/spec/logstash/modules/settings_merger_spec.rb
index 5612ac4191b..5c9429eab2a 100644
--- a/logstash-core/spec/logstash/modules/settings_merger_spec.rb
+++ b/logstash-core/spec/logstash/modules/settings_merger_spec.rb
@@ -155,4 +155,4 @@ def get(key) @hash[key]; end
       expect(results[4]).to eq("qux: '', was: 'pink'")
     end
   end
-end
\ No newline at end of file
+end
diff --git a/logstash-core/spec/logstash/patches/puma_spec.rb b/logstash-core/spec/logstash/patches/puma_spec.rb
index 4490d537663..04311c6c4ae 100644
--- a/logstash-core/spec/logstash/patches/puma_spec.rb
+++ b/logstash-core/spec/logstash/patches/puma_spec.rb
@@ -111,4 +111,4 @@ def self.backtrace
       subject.send(:debug_error, error, req, text)
     end
   end
-end
\ No newline at end of file
+end
diff --git a/logstash-core/spec/logstash/persisted_queue_config_validator_spec.rb b/logstash-core/spec/logstash/persisted_queue_config_validator_spec.rb
index eea28ba7446..d291904cef1 100644
--- a/logstash-core/spec/logstash/persisted_queue_config_validator_spec.rb
+++ b/logstash-core/spec/logstash/persisted_queue_config_validator_spec.rb
@@ -214,4 +214,4 @@
     end
 
   end
-end
\ No newline at end of file
+end
diff --git a/logstash-core/spec/logstash/settings/setting_with_deprecated_alias_spec.rb b/logstash-core/spec/logstash/settings/setting_with_deprecated_alias_spec.rb
index b5dee2c9aae..85dee75f88c 100644
--- a/logstash-core/spec/logstash/settings/setting_with_deprecated_alias_spec.rb
+++ b/logstash-core/spec/logstash/settings/setting_with_deprecated_alias_spec.rb
@@ -133,4 +133,4 @@
       settings.get(deprecated_setting_name)
     end
   end
-end
\ No newline at end of file
+end
diff --git a/logstash-core/spec/logstash/util/cloud_setting_id_spec.rb b/logstash-core/spec/logstash/util/cloud_setting_id_spec.rb
index 8217327dd7c..9f2d397cc3f 100644
--- a/logstash-core/spec/logstash/util/cloud_setting_id_spec.rb
+++ b/logstash-core/spec/logstash/util/cloud_setting_id_spec.rb
@@ -215,4 +215,4 @@
       expect(subject.to_s).to eq(subject.decoded)
     end
   end
-end
\ No newline at end of file
+end
diff --git a/logstash-core/spec/logstash/util/secretstore_spec.rb b/logstash-core/spec/logstash/util/secretstore_spec.rb
index 143602a028d..4283297ae4f 100644
--- a/logstash-core/spec/logstash/util/secretstore_spec.rb
+++ b/logstash-core/spec/logstash/util/secretstore_spec.rb
@@ -84,4 +84,4 @@
       end
     end
   end
-end
\ No newline at end of file
+end
diff --git a/logstash-core/spec/plugin_metadata_spec.rb b/logstash-core/spec/plugin_metadata_spec.rb
index b5f3af1fdba..16d66afa539 100644
--- a/logstash-core/spec/plugin_metadata_spec.rb
+++ b/logstash-core/spec/plugin_metadata_spec.rb
@@ -163,4 +163,4 @@
       end
     end
   end
-end
\ No newline at end of file
+end
diff --git a/logstash-core/spec/support/shared_contexts.rb b/logstash-core/spec/support/shared_contexts.rb
index c685313ac28..78d498faa3e 100644
--- a/logstash-core/spec/support/shared_contexts.rb
+++ b/logstash-core/spec/support/shared_contexts.rb
@@ -80,4 +80,4 @@ def block_until(limit_seconds, &condition)
   def app()
     described_class.new(nil, @agent)
   end
-end
\ No newline at end of file
+end
diff --git a/logstash-core/src/test/resources/shutdown_watcher_ext_pipeline_template.rb b/logstash-core/src/test/resources/shutdown_watcher_ext_pipeline_template.rb
index 68ca037a56b..07e7241bc37 100644
--- a/logstash-core/src/test/resources/shutdown_watcher_ext_pipeline_template.rb
+++ b/logstash-core/src/test/resources/shutdown_watcher_ext_pipeline_template.rb
@@ -30,4 +30,4 @@
 pipeline.define_singleton_method(:pipeline_id) do
   "fake_test_pipeline"
 end
-pipeline
\ No newline at end of file
+pipeline
diff --git a/qa/acceptance/spec/lib/artifact_composition_spec.rb b/qa/acceptance/spec/lib/artifact_composition_spec.rb
index 6fcf3900370..ef174460f3a 100644
--- a/qa/acceptance/spec/lib/artifact_composition_spec.rb
+++ b/qa/acceptance/spec/lib/artifact_composition_spec.rb
@@ -42,4 +42,4 @@
       end
     end
   end
-end
\ No newline at end of file
+end
diff --git a/qa/docker/patches/excon/unix_socket.rb b/qa/docker/patches/excon/unix_socket.rb
index 7dfa2a19adc..63d97311439 100644
--- a/qa/docker/patches/excon/unix_socket.rb
+++ b/qa/docker/patches/excon/unix_socket.rb
@@ -6,4 +6,4 @@ def connect
       @socket = ::UNIXSocket.new(@data[:socket])
     end
   end
-end
\ No newline at end of file
+end
diff --git a/qa/docker/shared_examples/container.rb b/qa/docker/shared_examples/container.rb
index fc85e6445dc..68658755f9c 100644
--- a/qa/docker/shared_examples/container.rb
+++ b/qa/docker/shared_examples/container.rb
@@ -95,4 +95,4 @@
       expect(java_process(@container, "pid")).to eql '1'
     end
   end
-end
\ No newline at end of file
+end
diff --git a/qa/docker/shared_examples/container_config.rb b/qa/docker/shared_examples/container_config.rb
index d3c79446e5a..8b090a20e12 100644
--- a/qa/docker/shared_examples/container_config.rb
+++ b/qa/docker/shared_examples/container_config.rb
@@ -38,4 +38,4 @@
       expect(get_pipeline_setting(@container, 'batch_size')).to eq 200
     end
   end
-end
\ No newline at end of file
+end
diff --git a/qa/docker/shared_examples/image_metadata.rb b/qa/docker/shared_examples/image_metadata.rb
index 5839a6e8d13..77a995258b9 100644
--- a/qa/docker/shared_examples/image_metadata.rb
+++ b/qa/docker/shared_examples/image_metadata.rb
@@ -38,4 +38,4 @@
       expect(@labels[label]).to eql qualified_version
     end
   end
-end
\ No newline at end of file
+end
diff --git a/qa/docker/shared_examples/xpack.rb b/qa/docker/shared_examples/xpack.rb
index c0e0f52f778..7950c7af968 100644
--- a/qa/docker/shared_examples/xpack.rb
+++ b/qa/docker/shared_examples/xpack.rb
@@ -36,4 +36,3 @@
     end
   end
 end
-
diff --git a/qa/docker/spec/full/container_spec.rb b/qa/docker/spec/full/container_spec.rb
index dfd35e7574a..81a004a39c3 100644
--- a/qa/docker/spec/full/container_spec.rb
+++ b/qa/docker/spec/full/container_spec.rb
@@ -24,4 +24,4 @@
       expect(exec_in_container(@container, 'cat /etc/os-release').chomp).to match /Ubuntu 20.04/
     end
   end
-end
\ No newline at end of file
+end
diff --git a/qa/docker/spec/full/image_spec.rb b/qa/docker/spec/full/image_spec.rb
index e222d59d35d..ca07971ad00 100644
--- a/qa/docker/spec/full/image_spec.rb
+++ b/qa/docker/spec/full/image_spec.rb
@@ -3,4 +3,4 @@
 
 describe 'An image with the full distribution' do
   it_behaves_like 'the metadata is set correctly', 'full'
-end
\ No newline at end of file
+end
diff --git a/qa/docker/spec/oss/container_spec.rb b/qa/docker/spec/oss/container_spec.rb
index fd956c80d23..ceff09510f3 100644
--- a/qa/docker/spec/oss/container_spec.rb
+++ b/qa/docker/spec/oss/container_spec.rb
@@ -22,4 +22,4 @@
       expect(exec_in_container(@container, 'cat /etc/os-release').chomp).to match /Ubuntu 20.04/
     end
   end
-end
\ No newline at end of file
+end
diff --git a/qa/docker/spec/oss/image_spec.rb b/qa/docker/spec/oss/image_spec.rb
index 18e228452d9..52b71cca929 100644
--- a/qa/docker/spec/oss/image_spec.rb
+++ b/qa/docker/spec/oss/image_spec.rb
@@ -3,4 +3,4 @@
 
 describe 'An image with the oss distribution' do
   it_behaves_like 'the metadata is set correctly', 'oss'
-end
\ No newline at end of file
+end
diff --git a/qa/docker/spec/ubi8/container_spec.rb b/qa/docker/spec/ubi8/container_spec.rb
index 704fe35db75..19e69db1199 100644
--- a/qa/docker/spec/ubi8/container_spec.rb
+++ b/qa/docker/spec/ubi8/container_spec.rb
@@ -24,4 +24,4 @@
       expect(exec_in_container(@container, 'cat /etc/redhat-release')).to match /Red Hat Enterprise Linux/
     end
   end
-end
\ No newline at end of file
+end
diff --git a/qa/docker/spec/ubi8/image_spec.rb b/qa/docker/spec/ubi8/image_spec.rb
index 3f880c29b87..de47bc7daf0 100644
--- a/qa/docker/spec/ubi8/image_spec.rb
+++ b/qa/docker/spec/ubi8/image_spec.rb
@@ -35,4 +35,4 @@
       expect(@labels["vendor"]).to eql "Elastic"
     end
   end
-end
\ No newline at end of file
+end
diff --git a/qa/integration/services/elasticsearch_service.rb b/qa/integration/services/elasticsearch_service.rb
index 99804f2f12c..9aa536909de 100644
--- a/qa/integration/services/elasticsearch_service.rb
+++ b/qa/integration/services/elasticsearch_service.rb
@@ -25,4 +25,4 @@ def initialize(settings)
   def get_client
     @client ||= Elasticsearch::Client.new(:hosts => "localhost:9200")
   end
-end
\ No newline at end of file
+end
diff --git a/qa/integration/specs/env_variables_condition_spec.rb b/qa/integration/specs/env_variables_condition_spec.rb
index e708d76ae33..141812432cf 100644
--- a/qa/integration/specs/env_variables_condition_spec.rb
+++ b/qa/integration/specs/env_variables_condition_spec.rb
@@ -95,4 +95,4 @@
     expect(logstash.stderr_and_stdout).to match(/Cannot evaluate `\$\{NOT_EXIST\}`/)
     expect(logstash.exit_code).to be(1)
   end
-end
\ No newline at end of file
+end
diff --git a/qa/integration/specs/env_variables_config_spec.rb b/qa/integration/specs/env_variables_config_spec.rb
index 1ff5917bc15..c49591deaca 100644
--- a/qa/integration/specs/env_variables_config_spec.rb
+++ b/qa/integration/specs/env_variables_config_spec.rb
@@ -62,4 +62,4 @@
       expect(IO.read(output_file).gsub("\n", "")).to eq("#{sample_data} blah,environment_variables_are_evil")
     end
   end
-end
\ No newline at end of file
+end
diff --git a/qa/integration/specs/mixed_codec_spec.rb b/qa/integration/specs/mixed_codec_spec.rb
index 07e3732166b..10a2f999407 100644
--- a/qa/integration/specs/mixed_codec_spec.rb
+++ b/qa/integration/specs/mixed_codec_spec.rb
@@ -117,4 +117,4 @@
       expect(logs).to_not include("ERROR")
     end
   end
-end
\ No newline at end of file
+end
diff --git a/qa/integration/specs/reserved_tags_field_spec.rb b/qa/integration/specs/reserved_tags_field_spec.rb
index c480f1ba9e1..afd6be71f5f 100644
--- a/qa/integration/specs/reserved_tags_field_spec.rb
+++ b/qa/integration/specs/reserved_tags_field_spec.rb
@@ -80,4 +80,4 @@
       expect(logstash.stderr_and_stdout).to match(/Ruby exception occurred/)
     end
   end
-end
\ No newline at end of file
+end
diff --git a/qa/integration/specs/webserver_spec.rb b/qa/integration/specs/webserver_spec.rb
index da087a2a31f..d3440d28961 100644
--- a/qa/integration/specs/webserver_spec.rb
+++ b/qa/integration/specs/webserver_spec.rb
@@ -141,4 +141,4 @@
       end
     end
   end
-end
\ No newline at end of file
+end
diff --git a/qa/rspec/matchers/be_running.rb b/qa/rspec/matchers/be_running.rb
index 9de9d7bda61..c0277769313 100644
--- a/qa/rspec/matchers/be_running.rb
+++ b/qa/rspec/matchers/be_running.rb
@@ -22,4 +22,4 @@
   match do |subject|
     subject.running?(subject.hosts, subject.name)
   end
-end
\ No newline at end of file
+end
diff --git a/qa/support/logstash-filter-qatest/logstash-filter-qatest-newer.gemspec b/qa/support/logstash-filter-qatest/logstash-filter-qatest-newer.gemspec
index 1e9fe168abe..e0aaf15a910 100644
--- a/qa/support/logstash-filter-qatest/logstash-filter-qatest-newer.gemspec
+++ b/qa/support/logstash-filter-qatest/logstash-filter-qatest-newer.gemspec
@@ -22,4 +22,3 @@ Gem::Specification.new do |s|
   s.add_development_dependency 'logstash-devutils'
   s.add_runtime_dependency "logstash-core-plugin-api", "~> 2.0"
 end
-
diff --git a/tools/paquet/spec/support/Gemfile b/tools/paquet/spec/support/Gemfile
index 884cbedd8cc..2fe298fb496 100644
--- a/tools/paquet/spec/support/Gemfile
+++ b/tools/paquet/spec/support/Gemfile
@@ -1,4 +1,3 @@
 source "https://rubygems.org"
 gemspec
 gem "paquet", :path => "../../"
-
diff --git a/x-pack/lib/filters/geoip/database_manager.rb b/x-pack/lib/filters/geoip/database_manager.rb
index a09d76876f9..7ef4751e2e9 100644
--- a/x-pack/lib/filters/geoip/database_manager.rb
+++ b/x-pack/lib/filters/geoip/database_manager.rb
@@ -317,4 +317,4 @@ def initialize(is_eula, plugins, database_path, cc_database_path)
       @is_expired = false
     end
   end
-end end end end
\ No newline at end of file
+end end end end
diff --git a/x-pack/lib/filters/geoip/database_metadata.rb b/x-pack/lib/filters/geoip/database_metadata.rb
index d397d98337d..3e037de0506 100644
--- a/x-pack/lib/filters/geoip/database_metadata.rb
+++ b/x-pack/lib/filters/geoip/database_metadata.rb
@@ -106,4 +106,4 @@ class Column
     IS_EULA       = 4
   end
 
-end end end end
\ No newline at end of file
+end end end end
diff --git a/x-pack/lib/filters/geoip/database_metric.rb b/x-pack/lib/filters/geoip/database_metric.rb
index 1afd0c6b510..6a720095f5c 100644
--- a/x-pack/lib/filters/geoip/database_metric.rb
+++ b/x-pack/lib/filters/geoip/database_metric.rb
@@ -71,4 +71,4 @@ def update_database_status(database_type, database_status, metadata, days_withou
     end
   end
 
-end end end end
\ No newline at end of file
+end end end end
diff --git a/x-pack/lib/filters/geoip/extension.rb b/x-pack/lib/filters/geoip/extension.rb
index 778195f77c6..859760d5d23 100644
--- a/x-pack/lib/filters/geoip/extension.rb
+++ b/x-pack/lib/filters/geoip/extension.rb
@@ -18,4 +18,4 @@ def additionals_settings(settings)
       raise e
     end
   end
-end end end
\ No newline at end of file
+end end end
diff --git a/x-pack/lib/filters/geoip/util.rb b/x-pack/lib/filters/geoip/util.rb
index bdf8386bb1a..eecbbdfbbcb 100644
--- a/x-pack/lib/filters/geoip/util.rb
+++ b/x-pack/lib/filters/geoip/util.rb
@@ -59,4 +59,4 @@ def unix_time_to_iso8601(timestamp)
       end
     end
   end
-end end
\ No newline at end of file
+end end
diff --git a/x-pack/lib/helpers/loggable_try.rb b/x-pack/lib/helpers/loggable_try.rb
index 26acec0c566..eab294a534f 100644
--- a/x-pack/lib/helpers/loggable_try.rb
+++ b/x-pack/lib/helpers/loggable_try.rb
@@ -15,4 +15,4 @@ def log_failure(exception, fail_count, message)
       @logger.warn("Attempt to #{@name} failed. #{message}", fail_count: fail_count, exception: exception.message)
     end
   end
-end end
\ No newline at end of file
+end end
diff --git a/x-pack/lib/license_checker/licensed.rb b/x-pack/lib/license_checker/licensed.rb
index 7f5e7c57f43..e9ed04a7e73 100644
--- a/x-pack/lib/license_checker/licensed.rb
+++ b/x-pack/lib/license_checker/licensed.rb
@@ -87,4 +87,4 @@ def get_current_license_state
 
     end
   end
-end
\ No newline at end of file
+end
diff --git a/x-pack/lib/modules/xpack_scaffold.rb b/x-pack/lib/modules/xpack_scaffold.rb
index a46c4a75bf8..9e6f2198165 100644
--- a/x-pack/lib/modules/xpack_scaffold.rb
+++ b/x-pack/lib/modules/xpack_scaffold.rb
@@ -19,4 +19,4 @@ def is_enabled?(settings)
       end
     end
   end
-end
\ No newline at end of file
+end
diff --git a/x-pack/qa/integration/monitoring/es_documents_structure_validation_spec.rb b/x-pack/qa/integration/monitoring/es_documents_structure_validation_spec.rb
index 5f2d7312e11..782e1ecef2d 100644
--- a/x-pack/qa/integration/monitoring/es_documents_structure_validation_spec.rb
+++ b/x-pack/qa/integration/monitoring/es_documents_structure_validation_spec.rb
@@ -120,4 +120,4 @@ def flatten_keys(hash, prefix = "")
     end
   end
   flattened_keys
-end
\ No newline at end of file
+end
diff --git a/x-pack/qa/integration/support/helpers.rb b/x-pack/qa/integration/support/helpers.rb
index ec1a118a543..d0052236879 100644
--- a/x-pack/qa/integration/support/helpers.rb
+++ b/x-pack/qa/integration/support/helpers.rb
@@ -169,4 +169,4 @@ def verify_response!(cmd, response)
   unless response.successful?
     raise "Something went wrong when installing xpack,\ncmd: #{cmd}\nresponse: #{response}"
   end
-end
\ No newline at end of file
+end
diff --git a/x-pack/spec/filters/geoip/database_manager_spec.rb b/x-pack/spec/filters/geoip/database_manager_spec.rb
index 019a138799f..2d460b7e0ad 100644
--- a/x-pack/spec/filters/geoip/database_manager_spec.rb
+++ b/x-pack/spec/filters/geoip/database_manager_spec.rb
@@ -460,4 +460,4 @@ def metric_collector(db_manager)
       db_manager.instance_variable_get(:@database_metric).instance_variable_get(:@metric).collector
     end
   end
-end
\ No newline at end of file
+end
diff --git a/x-pack/spec/filters/geoip/database_metadata_spec.rb b/x-pack/spec/filters/geoip/database_metadata_spec.rb
index dbb9a3512ae..5fda47f28c0 100644
--- a/x-pack/spec/filters/geoip/database_metadata_spec.rb
+++ b/x-pack/spec/filters/geoip/database_metadata_spec.rb
@@ -221,4 +221,4 @@
       end
     end
   end
-end
\ No newline at end of file
+end
diff --git a/x-pack/spec/filters/geoip/test_helper.rb b/x-pack/spec/filters/geoip/test_helper.rb
index 3d89bb966da..26fc3791144 100644
--- a/x-pack/spec/filters/geoip/test_helper.rb
+++ b/x-pack/spec/filters/geoip/test_helper.rb
@@ -132,4 +132,4 @@ def second_dirname_in_ymd
 
 RSpec.configure do |c|
   c.include GeoipHelper
-end
\ No newline at end of file
+end
diff --git a/x-pack/spec/modules/arcsight/arcsight_module_config_spec.rb b/x-pack/spec/modules/arcsight/arcsight_module_config_spec.rb
index 413d761004c..479be0ec295 100644
--- a/x-pack/spec/modules/arcsight/arcsight_module_config_spec.rb
+++ b/x-pack/spec/modules/arcsight/arcsight_module_config_spec.rb
@@ -17,5 +17,3 @@
     expect(subject.config_string).to include("index => \"arcsight-#{::LOGSTASH_VERSION}-%{+YYYY.MM.dd}\"")
   end
 end
-
-
diff --git a/x-pack/spec/modules/azure/azure_module_config_generator_spec.rb b/x-pack/spec/modules/azure/azure_module_config_generator_spec.rb
index 54c4132f342..dc489050649 100644
--- a/x-pack/spec/modules/azure/azure_module_config_generator_spec.rb
+++ b/x-pack/spec/modules/azure/azure_module_config_generator_spec.rb
@@ -143,4 +143,4 @@
 
   end
 
-end
\ No newline at end of file
+end
diff --git a/x-pack/spec/monitoring/inputs/metrics/state_event_factory_spec.rb b/x-pack/spec/monitoring/inputs/metrics/state_event_factory_spec.rb
index 98399fc6b09..4a3ed5720b1 100644
--- a/x-pack/spec/monitoring/inputs/metrics/state_event_factory_spec.rb
+++ b/x-pack/spec/monitoring/inputs/metrics/state_event_factory_spec.rb
@@ -76,4 +76,4 @@
       expect(JSON::Validator.fully_validate(schema_file, state_evt.to_json)).to be_empty
     end
   end
-end
\ No newline at end of file
+end
diff --git a/x-pack/spec/monitoring/inputs/metrics/stats_event_factory_spec.rb b/x-pack/spec/monitoring/inputs/metrics/stats_event_factory_spec.rb
index 35b6ddb19ed..c563306fc01 100644
--- a/x-pack/spec/monitoring/inputs/metrics/stats_event_factory_spec.rb
+++ b/x-pack/spec/monitoring/inputs/metrics/stats_event_factory_spec.rb
@@ -104,4 +104,4 @@
       let(:webserver_enabled) {true}
     end
   end
-end
\ No newline at end of file
+end
