diff --git a/docs/static/breaking-changes.asciidoc b/docs/static/breaking-changes.asciidoc
index 61b4aed17ec..07920e78861 100644
--- a/docs/static/breaking-changes.asciidoc
+++ b/docs/static/breaking-changes.asciidoc
@@ -1,43 +1,56 @@
 [[breaking-changes]]
 == Breaking changes
 
-**Breaking changes in 5.0**
-
-Application Settings: Introduced a new way to configure application settings for Logstash through a `settings.yml` file. This file 
-is typically located in `LS_HOME/config`, or `/etc/logstash` when installed via packages. Logstash will not be able 
-to start without this file, so please make sure to pass in `--path.settings` if you are starting Logstash manually 
-after installing it via a package (RPM or DEB).
-
-Release Packages: When Logstash is installed via DEB or RPM packages, it uses `/usr/share/logstash` and `/var/lib/logstash` to install binaries and config files 
-respectively. Previously it used the `/opt` directory. This change was done to make the user experience 
-consistent with other Elastic products. The full directory layout is described https://www.elastic.co/guide/en/logstash/5.0/dir-layout.html[here].
-
-Command Line Interface: Most of the long form https://www.elastic.co/guide/en/logstash/5.0/command-line-flags.html[options] have been renamed 
-to adhere to the YAML dot notation used in the settings file. Short form options have not been changed.
-
-Plugin Developers: The Event class has a https://github.com/elastic/logstash/issues/5141[new API] to access its data. You will no longer be able to directly use 
-the Event class through the Ruby hash paradigm. All the plugins packaged with Logstash has been updated 
-to use the new API, and their versions bumped to the next major.
-
-The command `bin/plugin` has been renamed to `bin/logstash-plugin`. `bin/plugin <plugin>`, which is the current 
-way of install packs/plugins, is problematic because it pollutes the global namespace if it is put in the path. 
-This command can now install both plugins and "Packs" - a single zip that contains 0 or 1 plugin for each system 
-in the Elastic stack.
-
-**Environment Variables Support in Configuration**
-You can set environment variable references in the configuration for Logstash plugins by using either the `${var}` or `$var` syntax.
-Previously if you used `${var}` or `$var` as a value in the configuration, 5.0 would try to resolve the value assuming 
-it was an environment variable.
-
-[float]
-== Kafka Input and Output Plugins
-
-Kafka version 0.9 brings in new security features (SSL, client based auth, access control), 
-an improved consumer and producer API, and much more. To bring in these features, Logstash 
-had to use the new 0.9 version of the consumer, which is not compatible with previous versions of the broker.
-To use these new features, users have to first upgrade Kafka Brokers from 0.8.x to 0.9 and then use the 
-input plugins. Please note that several configurations have changed in the Logstash configuration.
-
-Configuration Changes:
-* <<plugins-inputs-kafka,Kafka Input Plugin>>
-* <<plugins-outputs-kafka,Kafka Output Plugin>>
\ No newline at end of file
+This section discusses the changes that you need to be aware of when migrating your application to Logstash {version}.
+
+**Application Settings:** Introduced a new way to configure application settings for Logstash through a settings.yml file. This file
+is typically located in `LS_HOME/config`, or `/etc/logstash` when installed via packages. Logstash will not be able
+to start without this file, so please make sure to pass in `--path.settings` if you are starting Logstash manually
+after installing it via a package (RPM, DEB).
+
+**Release Packages:** When Logstash is installed via DEB, RPM packages, it uses `/usr/share/logstash` and `/var/lib/logstash` to install binaries and config files
+respectively. Previously it used to install in `/opt` directory. This change was done to make the user experience
+consistent with other Elastic products. Full directory layout is described in <<dir-layout>>.
+
+**Command Line Interface:** Most of the long form <<command-line-flags,options>> have been renamed
+to adhere to the yml dot notation to be used in the settings file. Short form options have not been changed.
+
+**Plugin Manager Renamed:** `bin/plugin` has been renamed to `bin/logstash-plugin`. This change was to mainly prevent `PATH` being polluted when
+other components of the Elastic stack are installed on the same instance. Also, this provides a foundation
+for future change which will allow Elastic Stack packs to be installed via this script.
+
+**Kafka Input/Output Configuration Changes:** This release added support for the new 0.9 consumer/producer API which supports security features introduced by Kafka.
+A few Configuration options were renamed to make it consistent with Kafka consumer and producer settings.
+Also, this plugin version will not work with Kafka 0.8 broker.
+
+Please see the following specific plugin documentation for new configuration options:
+
+* <<plugins-inputs-kafka,Kafka Input>>
+* <<plugins-outputs-kafka, Kafka Output>>
+
+**Ruby Filter and Custom Plugin Developers:** With the migration to the Java Event (https://github.com/elastic/logstash/issues/4191[Issue 4191]), we have changed
+how you can access internal data. The Event object no longer returns a reference to the data. Instead, it returns a
+copy. This might change how you do manipulation of your data, especially when working with nested hashes.
+When working with nested hashes, itâ€™s recommended that you use the `fieldref` syntax instead of using multiple brackets.
+Also note that we have introduced new Getter/Setter APIs for accessing information in the Event object.
+
+**Examples:**
+
+[source, js]
+----------------------------------
+filter {
+  ruby {
+    codec => "event.set('uuid', event.get('uuid').gsub(/b/, ''))" # instead of using event['uuid'].gsub!(/b/, '')
+  }
+}
+----------------------------------
+
+[source, js]
+----------------------------------
+filter {
+  ruby {
+    codec => "event.set('[product][price]', 10)" # instead of using event['product']['price'] = 10
+  }
+}
+----------------------------------
+
diff --git a/docs/static/deploying.asciidoc b/docs/static/deploying.asciidoc
index e4d7cce4f79..1cf0b82da2b 100644
--- a/docs/static/deploying.asciidoc
+++ b/docs/static/deploying.asciidoc
@@ -63,7 +63,7 @@ nodes. By default, Logstash uses the HTTP protocol to move data into the cluster
 You can use the Elasticsearch HTTP REST APIs to index data into the Elasticsearch cluster. These APIs represent the
 indexed data in JSON. Using the REST APIs does not require the Java client classes or any additional JAR
 files and has no performance disadvantages compared to the transport or node protocols. You can secure communications
-that use the HTTP REST APIs by using {shield}[{security}], which supports SSL and HTTP basic authentication.
+that use the HTTP REST APIs by using {xpack}/xpack-security.html[{security}], which supports SSL and HTTP basic authentication.
 
 When you use the HTTP protocol, you can configure the Logstash Elasticsearch output plugin to automatically
 load-balance indexing requests across a
