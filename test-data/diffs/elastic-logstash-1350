diff --git a/Makefile b/Makefile
index f8b63897d66..99d02ccc18d 100644
--- a/Makefile
+++ b/Makefile
@@ -19,6 +19,8 @@ GEOIP=vendor/geoip/GeoLiteCity.dat
 GEOIP_URL=http://logstash.objects.dreamhost.com/maxmind/GeoLiteCity-2013-01-18.dat.gz
 GEOIP_ASN=vendor/geoip/GeoIPASNum.dat
 GEOIP_ASN_URL=http://logstash.objects.dreamhost.com/maxmind/GeoIPASNum-2014-02-12.dat.gz
+GEOIPV6=vendor/geoip/GeoLiteCityv6.dat
+GEOIPV6_URL=http://geolite.maxmind.com/download/geoip/database/GeoLiteCityv6-beta/GeoLiteCityv6.dat.gz
 KIBANA_URL=https://download.elasticsearch.org/kibana/kibana/kibana-3.0.1.tar.gz
 PLUGIN_FILES=$(shell find lib -type f| egrep '^lib/logstash/(inputs|outputs|filters|codecs)/[^/]+$$' | egrep -v '/(base|threadable).rb$$|/inputs/ganglia/')
 QUIET=@
@@ -160,7 +162,7 @@ vendor/geoip: | vendor
 	$(QUIET)mkdir $@
 
 .PHONY: vendor-geoip
-vendor-geoip: $(GEOIP) $(GEOIP_ASN)
+vendor-geoip: $(GEOIP) $(GEOIP_ASN) $(GEOIPV6)
 $(GEOIP): | vendor/geoip
 	$(QUIET)$(DOWNLOAD_COMMAND) $@.tmp.gz $(GEOIP_URL)
 	$(QUIET)gzip -dc $@.tmp.gz > $@.tmp
@@ -173,6 +175,12 @@ $(GEOIP_ASN): | vendor/geoip
 	$(QUIET)rm "$@.tmp.gz"
 	$(QUIET)mv $@.tmp $@
 
+$(GEOIPV6): | vendor/geoip
+	$(QUIET)$(DOWNLOAD_COMMAND) $@.tmp.gz $(GEOIPV6_URL)
+	$(QUIET)gzip -dc $@.tmp.gz > $@.tmp
+	$(QUIET)rm "$@.tmp.gz"
+	$(QUIET)mv $@.tmp $@
+
 vendor/collectd: | vendor
 	$(QUIET)mkdir $@
 
diff --git a/lib/logstash/filters/geoip.rb b/lib/logstash/filters/geoip.rb
index b70f89c9498..cc032d2607d 100644
--- a/lib/logstash/filters/geoip.rb
+++ b/lib/logstash/filters/geoip.rb
@@ -77,9 +77,9 @@ def register
     geoip_initialize = ::GeoIP.new(@database)
 
     @geoip_type = case geoip_initialize.database_type
-    when GeoIP::GEOIP_CITY_EDITION_REV0, GeoIP::GEOIP_CITY_EDITION_REV1
+    when GeoIP::GEOIP_CITY_EDITION_REV0, GeoIP::GEOIP_CITY_EDITION_REV1, GeoIP::GEOIP_CITY_EDITION_REV1_V6
       :city
-    when GeoIP::GEOIP_COUNTRY_EDITION
+    when GeoIP::GEOIP_COUNTRY_EDITION, GeoIP::GEOIP_COUNTRY_EDITION_V6
       :country
     when GeoIP::GEOIP_ASNUM_EDITION
       :asn
diff --git a/spec/filters/geoip.rb b/spec/filters/geoip.rb
index b1864de6e3e..eafbac546f5 100644
--- a/spec/filters/geoip.rb
+++ b/spec/filters/geoip.rb
@@ -117,4 +117,94 @@
       insist { subject["geoip"]["asn"].encoding } == Encoding::UTF_8
     end
   end
+
+  describe "defaults ipv6" do
+    config <<-CONFIG
+      filter {
+        geoip { 
+          source => "ip"
+          database => "vendor/geoip/GeoLiteCityv6.dat"
+        }
+      }
+    CONFIG
+
+    sample("ip" => "2001:4860:4860::8888") do
+      insist { subject }.include?("geoip")
+      expected_fields = %w(ip country_code2 country_code3 country_name
+                           continent_code latitude longitude )
+      expected_fields.each do |f|
+        insist { subject["geoip"] }.include?(f)
+      end
+    end
+
+    sample("ip" => "fe80::1") do
+      # assume geoip fails on localhost lookups
+      reject { subject }.include?("geoip")
+    end
+  end
+
+  describe "Specify the target ipv6" do
+    config <<-CONFIG
+      filter {
+        geoip { 
+          source => "ip"
+          database => "vendor/geoip/GeoLiteCityv6.dat"
+          target => src_ip
+        }
+      }
+    CONFIG
+
+    sample("ip" => "2001:4860:4860::8888") do
+      insist { subject }.include?("src_ip")
+
+      expected_fields = %w(ip country_code2 country_code3 country_name
+                           continent_code latitude longitude)
+      expected_fields.each do |f|
+        insist { subject["src_ip"] }.include?(f)
+      end
+    end
+
+    sample("ip" => "fe80::1") do
+      # assume geoip fails on localhost lookups
+      reject { subject }.include?("src_ip")
+    end
+  end
+
+  describe "correct encodings with ipv6 db" do
+    config <<-CONFIG
+      filter {
+        geoip {
+          source => "ip"
+	  database => "vendor/geoip/GeoLiteCityv6.dat"
+        }
+      }
+    CONFIG
+    expected_fields = %w(ip country_code2 country_code3 country_name
+                           continent_code)
+
+    sample("ip" => "2a03:2880:2110:df07:face:b00c:0:1") do
+      checked = 0
+      expected_fields.each do |f|
+        next unless subject["geoip"][f]
+        checked += 1
+        insist { subject["geoip"][f].encoding } == Encoding::UTF_8
+      end
+      insist { checked } > 0
+    end
+    sample("ip" => "2001:200:dff:fff1:216:3eff:feb1:44d7") do
+      checked = 0
+      expected_fields.each do |f|
+        next unless subject["geoip"][f]
+        checked += 1
+        insist { subject["geoip"][f].encoding } == Encoding::UTF_8
+      end
+      insist { checked } > 0
+    end
+
+  end
+
+
+
+
+
 end
