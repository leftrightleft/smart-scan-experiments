diff --git a/lib/logstash/filters/maths.rb b/lib/logstash/filters/maths.rb
new file mode 100644
index 00000000000..13dde7c535b
--- /dev/null
+++ b/lib/logstash/filters/maths.rb
@@ -0,0 +1,96 @@
+# encoding: utf-8
+
+require "logstash/filters/base"
+require "logstash/namespace"
+
+# The maths filter allows you to perform general operations on fields. You
+# can add, subtract, multiply, and divide fields in your events.
+
+class LogStash::Filters::Maths < LogStash::Filters::Base
+
+  config_name "maths"
+
+  milestone 1
+
+  # filter {
+  #   math {
+  #     multiplication => ["fieldname", 2]
+  #   }
+  # }
+  config :multiplication, :validate => :hash
+
+  #   math {
+  #     addition => ["fieldname", 5]
+  #   }
+  # }
+  config :addition, :validate => :hash
+
+  # math {
+  #     subtraction => ["fieldname", 5]
+  #   }
+  # }
+  config :subtraction, :validate => :hash
+
+  # math {
+  #     division => ["fieldname", 3]
+  #   }
+  # }
+  config :division, :validate => :hash
+
+
+  public
+  def register
+    # nothing to do
+  end
+
+
+  public
+  def filter(event)
+    return unless filter?(event)
+    multiplication(event) if @multiplication
+    addition(event) if @addition
+    subtraction(event) if @subtraction
+    division(event) if @division
+    filter_matched(event)
+  end
+
+
+  private
+  def multiplication(event)
+    @multiplication.each do |field, coefficient|
+      if event[field].instance_of? Fixnum
+        event[field] = event[field] * coefficient
+      end
+    end
+  end
+
+  private
+  def addition(event)
+    @addition.each do |field, coefficient|
+      if event[field].instance_of? Fixnum
+        event[field] = event[field] + coefficient
+      end
+    end
+  end
+
+  private
+  def subtraction(event)
+    @subtraction.each do |field, coefficient|
+      if event[field].instance_of? Fixnum
+        event[field] = event[field] - coefficient
+      end
+    end
+  end
+
+  private
+  def division(event)
+    @division.each do |field, coefficient|
+      if event[field].instance_of? Fixnum
+        event[field] = event[field] / coefficient
+      end
+    end
+  end
+
+
+end
+
diff --git a/spec/filters/maths.rb b/spec/filters/maths.rb
new file mode 100644
index 00000000000..d102e69cfba
--- /dev/null
+++ b/spec/filters/maths.rb
@@ -0,0 +1,94 @@
+# encoding: utf-8
+
+require "test_utils"
+require "logstash/filters/maths"
+
+describe LogStash::Filters::Maths do
+  extend LogStash::RSpec
+
+
+  describe 'multiply numeric amount with numeric coefficient must multiply' do
+    config <<-CONFIG
+      filter {
+        grok {
+          match => [ "message",  "amount=%{NUMBER:amount}" ]
+        }
+         mutate {
+           convert => [ "amount", "integer" ]
+         }
+        maths {
+          multiplication => ["amount", 2]
+        }
+      }
+    CONFIG
+
+    sample "amount=20" do
+      insist { subject["amount"] } == 40
+    end
+  end
+
+
+  describe 'addition amount with numeric value must add both' do
+    config <<-CONFIG
+      filter {
+        grok {
+          match => [ "message",  "amount=%{WORD:amount}" ]
+        }
+        mutate {
+           convert => [ "amount", "integer" ]
+         }
+        maths {
+          addition => ["amount", 2]
+        }
+      }
+    CONFIG
+
+    sample "amount=40" do
+      insist { subject["amount"] } == 42
+    end
+  end
+
+
+  describe 'subtraction amount with numeric must subtract' do
+    config <<-CONFIG
+      filter {
+        grok {
+          match => [ "message",  "amount=%{WORD:amount}" ]
+        }
+        mutate {
+           convert => [ "amount", "integer" ]
+         }
+        maths {
+          subtraction => ["amount", 2]
+        }
+      }
+    CONFIG
+
+    sample "amount=9" do
+      insist { subject["amount"] } == 7
+    end
+  end
+
+
+  describe 'division amount with numeric must divide' do
+    config <<-CONFIG
+      filter {
+        grok {
+          match => [ "message",  "amount=%{WORD:amount}" ]
+        }
+        mutate {
+           convert => [ "amount", "integer" ]
+         }
+        maths {
+          division => ["amount", 3]
+        }
+      }
+    CONFIG
+
+    sample "amount=9" do
+      insist { subject["amount"] } == 3
+    end
+  end
+
+
+end
\ No newline at end of file
