diff --git a/logstash-core/spec/logstash/legacy_ruby_event_spec.rb b/logstash-core/spec/logstash/legacy_ruby_event_spec.rb
index f57d7f01de8..0c4432ede2a 100644
--- a/logstash-core/spec/logstash/legacy_ruby_event_spec.rb
+++ b/logstash-core/spec/logstash/legacy_ruby_event_spec.rb
@@ -590,15 +590,6 @@
   describe "#to_s" do
     let(:timestamp) { LogStash::Timestamp.new }
     let(:event1) { LogStash::Event.new({ "@timestamp" => timestamp, "host" => "foo", "message" => "bar"}) }
-    let(:event2) { LogStash::Event.new({ "host" => "bar", "message" => "foo"}) }
-
-    it "should cache only one template" do
-      Java::OrgLogstash::StringInterpolation.clear_cache
-      expect {
-        event1.to_s
-        event2.to_s
-      }.to change { Java::OrgLogstash::StringInterpolation.cache_size }.by(1)
-    end
 
     it "return the string containing the timestamp, the host and the message" do
       expect(event1.to_s).to eq("#{timestamp.to_iso8601} #{event1.get("host")} #{event1.get("message")}")
diff --git a/logstash-core/src/main/java/org/logstash/Event.java b/logstash-core/src/main/java/org/logstash/Event.java
index c592ac44246..689d27ab66b 100644
--- a/logstash-core/src/main/java/org/logstash/Event.java
+++ b/logstash-core/src/main/java/org/logstash/Event.java
@@ -264,17 +264,15 @@ public Event clone() throws CloneNotSupportedException {
     }
 
     public String toString() {
-        // TODO: (colin) clean this IOException handling, not sure why we bubble IOException here
+        Object hostField = this.getField("host");
+        Object messageField = this.getField("message");
+        String hostMessageString = (hostField != null ? hostField.toString() : "%{host}") + " " + (messageField != null ? messageField.toString() : "%{message}");
+
         try {
-            return (getTimestamp().toIso8601() + " " + this.sprintf("%{host} %{message}"));
+            // getTimestamp throws an IOException if there is no @timestamp field, see #7613
+            return getTimestamp().toIso8601() + " " + hostMessageString;
         } catch (IOException e) {
-            String host = (String)this.data.get("host");
-            host = (host != null ? host : "%{host}");
-
-            String message = (String)this.data.get("message");
-            message = (message != null ? message : "%{message}");
-
-            return (host + " " + message);
+            return hostMessageString;
         }
     }
 
diff --git a/logstash-core/src/test/java/org/logstash/EventTest.java b/logstash-core/src/test/java/org/logstash/EventTest.java
index 58d95c59068..1913b6f3165 100644
--- a/logstash-core/src/test/java/org/logstash/EventTest.java
+++ b/logstash-core/src/test/java/org/logstash/EventTest.java
@@ -285,6 +285,28 @@ public void testTagOnExistingTagsField() throws Exception {
         assertEquals(tags.size(), 2);
         assertEquals(tags.get(0), "foo");
         assertEquals(tags.get(1), "bar");
-      }
+    }
+
+    @Test
+    public void toStringwithTimestamp() throws Exception {
+        Map data = new HashMap();
+        data.put("host", "foo");
+        data.put("message", "bar");
+        Event e = new Event(data);
+        assertEquals(e.toString(), e.getTimestamp().toIso8601() + " foo bar");
+    }
 
+    @Test
+    public void toStringwithoutTimestamp() throws Exception {
+        Map data = new HashMap();
+        data.put("host", "foo");
+        data.put("message", "bar");
+        Event e = new Event(data);
+        e.remove("@timestamp");
+        assertEquals(e.toString(), "foo bar");
+
+        e = new Event();
+        e.remove("@timestamp");
+        assertEquals(e.toString(), "%{host} %{message}");
+    }
 }
