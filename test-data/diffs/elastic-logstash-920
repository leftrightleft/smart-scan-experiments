diff --git a/lib/logstash/codecs/json.rb b/lib/logstash/codecs/json.rb
index 0ec81002b78..10b62adc8ed 100644
--- a/lib/logstash/codecs/json.rb
+++ b/lib/logstash/codecs/json.rb
@@ -22,9 +22,16 @@ class LogStash::Codecs::JSON < LogStash::Codecs::Base
   #
   # For nxlog users, you'll want to set this to "CP1252"
   config :charset, :validate => ::Encoding.name_list, :default => "UTF-8"
+
+  public
+  def register
+    @converter = LogStash::Util::Charset.new(@charset)
+    @converter.logger = @logger
+  end
   
   public
   def decode(data)
+    data = @converter.convert(data)
     begin
       yield LogStash::Event.new(JSON.parse(data))
     rescue JSON::ParserError => e
diff --git a/lib/logstash/codecs/json_lines.rb b/lib/logstash/codecs/json_lines.rb
index b054937a7e1..5ea37c5fdc1 100644
--- a/lib/logstash/codecs/json_lines.rb
+++ b/lib/logstash/codecs/json_lines.rb
@@ -37,7 +37,7 @@ def decode(data)
         yield LogStash::Event.new(JSON.parse(event["message"]))
       rescue JSON::ParserError => e
         @logger.info("JSON parse failure. Falling back to plain-text", :error => e, :data => data)
-        yield LogStash::Event.new("message" => data)
+        yield LogStash::Event.new("message" => event["message"])
       end
     end
   end # def decode
diff --git a/spec/codecs/json.rb b/spec/codecs/json.rb
index d08e5e0b43b..41edbac8495 100644
--- a/spec/codecs/json.rb
+++ b/spec/codecs/json.rb
@@ -18,7 +18,7 @@
       end
     end
 
-    it "should be fast" do
+    it "should be fast", :if => ENV["SPEEDTEST"] do
       json = '{"message":"Hello world!","@timestamp":"2013-12-21T07:01:25.616Z","@version":"1","host":"Macintosh.local","sequence":1572456}'
       iterations = 500000
       count = 0
@@ -36,6 +36,31 @@
       insist { count } == iterations
       puts "codecs/json speed: #{iterations/duration}/sec"
     end
+    
+    context "processing plain text" do
+      it "falls back to plain text" do
+        decoded = false
+        subject.decode("something that isn't json") do |event|
+          decoded = true
+          insist { event.is_a?(LogStash::Event) }
+          insist { event["message"] } == "something that isn't json"
+        end
+        insist { decoded } == true
+      end
+    end
+
+    context "processing weird binary blobs" do
+      it "falls back to plain text and doesn't crash (LOGSTASH-1595)" do
+        decoded = false
+        blob = (128..255).to_a.pack("C*").force_encoding("ASCII-8BIT")
+        subject.decode(blob) do |event|
+          decoded = true
+          insist { event.is_a?(LogStash::Event) }
+          insist { event["message"].encoding.to_s } == "UTF-8"
+        end
+        insist { decoded } == true
+      end
+    end
   end
 
   context "#encode" do
diff --git a/spec/codecs/json_lines.rb b/spec/codecs/json_lines.rb
index 92d28e92e05..40cdcba52a5 100644
--- a/spec/codecs/json_lines.rb
+++ b/spec/codecs/json_lines.rb
@@ -30,6 +30,32 @@
         insist { event["bah"] } == data["bah"]
       end
     end
+
+    context "processing plain text" do
+      it "falls back to plain text" do
+        decoded = false
+        subject.decode("something that isn't json\n") do |event|
+          decoded = true
+          insist { event.is_a?(LogStash::Event) }
+          insist { event["message"] } == "something that isn't json"
+        end
+        insist { decoded } == true
+      end
+    end
+
+    context "processing weird binary blobs" do
+      it "falls back to plain text and doesn't crash (LOGSTASH-1595)" do
+        decoded = false
+        blob = (128..255).to_a.pack("C*").force_encoding("ASCII-8BIT")
+        subject.decode(blob)
+        subject.decode("\n") do |event|
+          decoded = true
+          insist { event.is_a?(LogStash::Event) }
+          insist { event["message"].encoding.to_s } == "UTF-8"
+        end
+        insist { decoded } == true
+      end
+    end
   end
 
   context "#encode" do
