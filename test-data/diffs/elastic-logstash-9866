diff --git a/config/logstash.yml b/config/logstash.yml
index 528d97d452a..57b19b47376 100644
--- a/config/logstash.yml
+++ b/config/logstash.yml
@@ -242,5 +242,6 @@
 #xpack.management.elasticsearch.ssl.truststore.password: password
 #xpack.management.elasticsearch.ssl.keystore.path: /path/to/file
 #xpack.management.elasticsearch.ssl.keystore.password: password
+#xpack.management.elasticsearch.ssl.verification_mode: certificate
 #xpack.management.elasticsearch.sniffing: false
 #xpack.management.logstash.poll_interval: 5s
diff --git a/x-pack/lib/config_management/extension.rb b/x-pack/lib/config_management/extension.rb
index 9760c0ba099..09f99e2cdf2 100644
--- a/x-pack/lib/config_management/extension.rb
+++ b/x-pack/lib/config_management/extension.rb
@@ -32,6 +32,7 @@ def additionals_settings(settings)
         settings.register(LogStash::Setting::NullableString.new("xpack.management.elasticsearch.ssl.truststore.password"))
         settings.register(LogStash::Setting::NullableString.new("xpack.management.elasticsearch.ssl.keystore.path"))
         settings.register(LogStash::Setting::NullableString.new("xpack.management.elasticsearch.ssl.keystore.password"))
+        settings.register(LogStash::Setting::String.new("xpack.management.elasticsearch.ssl.verification_mode", "certificate", true, ["none", "certificate"]))
         settings.register(LogStash::Setting::Boolean.new("xpack.management.elasticsearch.sniffing", false))
       rescue => e
         logger.error("Cannot register new settings", :message => e.message, :backtrace => e.backtrace)
diff --git a/x-pack/lib/helpers/elasticsearch_options.rb b/x-pack/lib/helpers/elasticsearch_options.rb
index 326c7d5141e..1b676f72732 100644
--- a/x-pack/lib/helpers/elasticsearch_options.rb
+++ b/x-pack/lib/helpers/elasticsearch_options.rb
@@ -23,6 +23,7 @@ def es_options_from_settings(feature, settings)
       opts['user'] = settings.get("xpack.#{feature}.elasticsearch.username")
       opts['password'] = settings.get("xpack.#{feature}.elasticsearch.password")
       opts['sniffing'] = settings.get("xpack.#{feature}.elasticsearch.sniffing")
+      opts['ssl_certificate_verification'] = settings.get("xpack.#{feature}.elasticsearch.ssl.verification_mode") == 'certificate'
 
       if cacert = settings.get("xpack.#{feature}.elasticsearch.ssl.ca")
         opts['cacert'] = cacert
diff --git a/x-pack/lib/monitoring/monitoring.rb b/x-pack/lib/monitoring/monitoring.rb
index a4696f1687f..f209539b3cd 100644
--- a/x-pack/lib/monitoring/monitoring.rb
+++ b/x-pack/lib/monitoring/monitoring.rb
@@ -35,6 +35,7 @@ def initialize(node_uuid,
         @keystore_path = es_settings['keystore']
         @keystore_password = es_settings['keystore_password']
         @sniffing = es_settings['sniffing']
+        @ssl_certificate_verification = (es_settings['verification_mode'] == 'certificate')
       end
 
       attr_accessor :system_api_version, :es_hosts, :user, :password, :node_uuid
diff --git a/x-pack/lib/template.cfg.erb b/x-pack/lib/template.cfg.erb
index 391dde94cbc..80e7b65f647 100644
--- a/x-pack/lib/template.cfg.erb
+++ b/x-pack/lib/template.cfg.erb
@@ -35,6 +35,7 @@ output {
         keystore => "<%= keystore_path %>"
         keystore_password => "<%= keystore_password %>"
     <% end %>
+    ssl_certificate_verification => <%= ssl_certificate_verification %>
   <% else %>
     # In the case where the user does not want SSL we don't set ssl => false
     # the reason being that the user can still turn ssl on by using https in their URL
