diff --git a/logstash-core/src/main/java/org/logstash/common/io/BufferedChecksumStreamInput.java b/logstash-core/src/main/java/org/logstash/common/io/BufferedChecksumStreamInput.java
index beed5238738..45bfe9a4751 100644
--- a/logstash-core/src/main/java/org/logstash/common/io/BufferedChecksumStreamInput.java
+++ b/logstash-core/src/main/java/org/logstash/common/io/BufferedChecksumStreamInput.java
@@ -19,17 +19,6 @@ public BufferedChecksumStreamInput(StreamInput in) {
         this.digest = new BufferedChecksum(new CRC32());
     }
 
-    public BufferedChecksumStreamInput(StreamInput in, BufferedChecksumStreamInput reuse) {
-        this.in = in;
-        if (reuse == null ) {
-            this.digest = new BufferedChecksum(new CRC32());
-        } else {
-            this.digest = reuse.digest;
-            digest.reset();
-            this.skipBuffer = reuse.skipBuffer;
-        }
-    }
-
     public long getChecksum() {
         return this.digest.getValue();
     }
diff --git a/logstash-core/src/main/java/org/logstash/common/io/ByteArrayStreamOutput.java b/logstash-core/src/main/java/org/logstash/common/io/ByteArrayStreamOutput.java
index 6f49581e9cc..a4517705286 100644
--- a/logstash-core/src/main/java/org/logstash/common/io/ByteArrayStreamOutput.java
+++ b/logstash-core/src/main/java/org/logstash/common/io/ByteArrayStreamOutput.java
@@ -1,7 +1,5 @@
 package org.logstash.common.io;
 
-import java.nio.ByteBuffer;
-
 public class ByteArrayStreamOutput extends StreamOutput {
     private byte[] bytes;
 
@@ -12,18 +10,6 @@ public ByteArrayStreamOutput(byte[] bytes) {
         reset(bytes);
     }
 
-    public ByteArrayStreamOutput(ByteBuffer bytebuffer) {
-        reset(bytebuffer.array());
-    }
-
-    public ByteArrayStreamOutput(ByteBuffer bytebuffer, int offset, int len) {
-        reset(bytebuffer.array(), offset, len);
-    }
-
-    public ByteArrayStreamOutput(byte[] bytes, int offset, int len) {
-        reset(bytes, offset, len);
-    }
-
     public void reset(byte[] bytes) {
         reset(bytes, 0, bytes.length);
     }
diff --git a/logstash-core/src/main/java/org/logstash/common/io/ByteBufferStreamInput.java b/logstash-core/src/main/java/org/logstash/common/io/ByteBufferStreamInput.java
index 3cd0764c679..9cadd186940 100644
--- a/logstash-core/src/main/java/org/logstash/common/io/ByteBufferStreamInput.java
+++ b/logstash-core/src/main/java/org/logstash/common/io/ByteBufferStreamInput.java
@@ -67,10 +67,6 @@ public void movePosition(int position) {
         buffer.position(position);
     }
 
-    public void rewind() {
-        buffer.rewind();
-    }
-
     @Override
     public int available() throws IOException {
         return buffer.remaining();
diff --git a/logstash-core/src/main/java/org/logstash/common/io/StreamInput.java b/logstash-core/src/main/java/org/logstash/common/io/StreamInput.java
index 2b8f22515d8..71d1803ad1a 100644
--- a/logstash-core/src/main/java/org/logstash/common/io/StreamInput.java
+++ b/logstash-core/src/main/java/org/logstash/common/io/StreamInput.java
@@ -31,41 +31,6 @@ public int readInt() throws IOException {
         return ((readByte() & 0xFF) << 24) | ((readByte() & 0xFF) << 16)
                 | ((readByte() & 0xFF) << 8) | (readByte() & 0xFF);
     }
-    
-    /**
-     * Reads an int stored in variable-length format.  Reads between one and
-     * five bytes.  Smaller values take fewer bytes.  Negative numbers
-     * will always use all 5 bytes and are therefore better serialized
-     * using {@link #readInt}
-     *
-     * @return integer value from var-int formatted bytes
-     * @throws IOException if an error occurs while reading content
-     */
-    public int readVInt() throws IOException {
-        byte b = readByte();
-        int i = b & 0x7F;
-        if ((b & 0x80) == 0) {
-            return i;
-        }
-        b = readByte();
-        i |= (b & 0x7F) << 7;
-        if ((b & 0x80) == 0) {
-            return i;
-        }
-        b = readByte();
-        i |= (b & 0x7F) << 14;
-        if ((b & 0x80) == 0) {
-            return i;
-        }
-        b = readByte();
-        i |= (b & 0x7F) << 21;
-        if ((b & 0x80) == 0) {
-            return i;
-        }
-        b = readByte();
-        assert (b & 0x80) == 0;
-        return i | ((b & 0x7F) << 28);
-    }
 
     /**
      * Reads two bytes and returns a short.
diff --git a/logstash-core/src/main/java/org/logstash/common/io/StreamOutput.java b/logstash-core/src/main/java/org/logstash/common/io/StreamOutput.java
index b0da079ac73..8e3e88cc3ca 100644
--- a/logstash-core/src/main/java/org/logstash/common/io/StreamOutput.java
+++ b/logstash-core/src/main/java/org/logstash/common/io/StreamOutput.java
@@ -15,34 +15,6 @@ public void write(int b) throws IOException {
 
     public abstract void reset() throws IOException;
 
-    /**
-     * Writes an int in a variable-length format.  Writes between one and
-     * five bytes.  Smaller values take fewer bytes.  Negative numbers
-     * will always use all 5 bytes and are therefore better serialized
-     * using {@link #writeInt}
-     *
-     * @param i The integer to write
-     * @throws IOException if an error occurs while writing content
-     */
-    public void writeVInt(int i) throws IOException {
-        while ((i & ~0x7F) != 0) {
-            writeByte((byte) ((i & 0x7f) | 0x80));
-            i >>>= 7;
-        }
-        writeByte((byte) i);
-    }
-
-    /**
-     * Writes a short as two bytes.
-     *
-     * @param i The short to write
-     * @throws IOException if an error occurs while writing content
-     */
-    public void writeShort(short i) throws IOException {
-        writeByte((byte)(i >>  8));
-        writeByte((byte) i);
-    }
-
     /**
      * Writes an int as four bytes.
      *
@@ -56,13 +28,6 @@ public void writeInt(int i) throws IOException {
         writeByte((byte) i);
     }
 
-    public void writeIntArray(int[] values) throws IOException {
-        writeVInt(values.length);
-        for (int value : values) {
-            writeInt(value);
-        }
-    }
-
     /**
      * Writes a long as eight bytes.
      *
