diff --git a/lib/logstash/inputs/base.rb b/lib/logstash/inputs/base.rb
index 9e1cfa79291..68afca36f30 100644
--- a/lib/logstash/inputs/base.rb
+++ b/lib/logstash/inputs/base.rb
@@ -30,7 +30,7 @@ class LogStash::Inputs::Base < LogStash::Plugin
   # The format of input data (plain, json, json_event)
   config :format, :validate => ["plain", "json", "json_event", "msgpack_event"], :deprecated => "You should use the newer 'codec' setting instead."
 
-  # The codec used for input data
+  # The codec used for input data. Input codecs are a convenient method for decoding your data before it enters the input, without needing a separate filter in your Logstash pipeline.
   config :codec, :validate => :codec, :default => "plain"
 
   # The character encoding used in this input. Examples include "UTF-8"
diff --git a/lib/logstash/outputs/base.rb b/lib/logstash/outputs/base.rb
index 6c6142851d9..9fedbf10818 100644
--- a/lib/logstash/outputs/base.rb
+++ b/lib/logstash/outputs/base.rb
@@ -26,7 +26,7 @@ class LogStash::Outputs::Base < LogStash::Plugin
   # Only handle events without any of these tags. Note this check is additional to type and tags.
   config :exclude_tags, :validate => :array, :default => [], :deprecated => "You can achieve similar behavior with the new conditionals, like: `if !(\"sometag\" in [tags]) { %PLUGIN% { ... } }`"
 
-  # The codec used for output data
+  # The codec used for output data. Output codecs are a convenient method for encoding your data before it leaves the output, without needing a separate filter in your Logstash pipeline.
   config :codec, :validate => :codec, :default => "plain"
 
   # The number of workers to use for this output.
