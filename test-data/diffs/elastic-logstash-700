diff --git a/lib/logstash/outputs/elasticsearch_http.rb b/lib/logstash/outputs/elasticsearch_http.rb
index 62204abddae..b2963b7f3a9 100644
--- a/lib/logstash/outputs/elasticsearch_http.rb
+++ b/lib/logstash/outputs/elasticsearch_http.rb
@@ -40,12 +40,25 @@ class LogStash::Outputs::ElasticSearchHTTP < LogStash::Outputs::Base
   # The amount of time since last flush before a flush is forced.
   config :idle_flush_time, :validate => :number, :default => 1
 
+  # Make replicated writes asynchronous. If true, this will cause
+  # the index request to elasticsearch to return after the primary
+  # shards have been written. If false (default), index requests
+  # will wait until the primary and the replica shards have been
+  # written.
+  config :asynchronous_replication, :validate => :boolean, :default => false
+
   public
   def register
     require "ftw" # gem ftw
     @agent = FTW::Agent.new
     @queue = []
 
+    if @asynchronous_replication
+      @bulk_url = "http://#{@host}:#{@port}/_bulk?replication=async"
+    else
+      @bulk_url = "http://#{@host}:#{@port}/_bulk"
+    end
+
     buffer_initialize(
       :max_items => @flush_size,
       :max_interval => @idle_flush_time,
@@ -82,7 +95,7 @@ def flush(events, teardown=false)
 
   def post(body)
     begin
-      response = @agent.post!("http://#{@host}:#{@port}/_bulk", :body => body)
+      response = @agent.post!(@bulk_url, :body => body)
     rescue EOFError
       @logger.warn("EOF while writing request or reading response header from elasticsearch",
                    :host => @host, :port => @port)
