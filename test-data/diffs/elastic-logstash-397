diff --git a/lib/logstash/filters/grok.rb b/lib/logstash/filters/grok.rb
index e2d468a1bc0..9869ebe3a1f 100644
--- a/lib/logstash/filters/grok.rb
+++ b/lib/logstash/filters/grok.rb
@@ -363,7 +363,7 @@ def filter(event)
           end
 
           # Special casing to skip captures that represent the entire log message.
-          if fieldvalue == value and field == "@message"
+          if fieldvalue == value and field == "@message" and key.nil?
             # Skip patterns that match the entire message
             @logger.debug? and @logger.debug("Skipping capture since it matches the whole line.", :field => key)
             next
diff --git a/spec/filters/grok.rb b/spec/filters/grok.rb
index 5215b7b87e5..81a633c1855 100644
--- a/spec/filters/grok.rb
+++ b/spec/filters/grok.rb
@@ -26,6 +26,21 @@
     end
   end
 
+  describe "create fields event if grok matches all messages and a key is specified" do
+    config <<-CONFIG
+      filter {
+        grok {
+          pattern => "%{DATE_EU:stimestamp}"
+        }
+      }
+    CONFIG
+
+    sample "2011/01/01" do
+      insist { subject["stimestamp"] } == "2011/01/01"
+    end
+  end
+
+
   describe "parsing an event with multiple messages (array of strings)" do 
     config <<-CONFIG
       filter {
