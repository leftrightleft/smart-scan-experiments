diff --git a/logstash-core/src/main/java/org/logstash/KeyNode.java b/logstash-core/src/main/java/org/logstash/KeyNode.java
index 415a043e458..a5774e85427 100644
--- a/logstash-core/src/main/java/org/logstash/KeyNode.java
+++ b/logstash-core/src/main/java/org/logstash/KeyNode.java
@@ -2,9 +2,6 @@
 
 import java.util.List;
 
-/**
- * Created by ph on 15-05-22.
- */
 public class KeyNode {
 
     private KeyNode() {
diff --git a/logstash-core/src/main/java/org/logstash/common/IncompleteSourceWithMetadataException.java b/logstash-core/src/main/java/org/logstash/common/IncompleteSourceWithMetadataException.java
index 61fb7f956b1..11f0d90995f 100644
--- a/logstash-core/src/main/java/org/logstash/common/IncompleteSourceWithMetadataException.java
+++ b/logstash-core/src/main/java/org/logstash/common/IncompleteSourceWithMetadataException.java
@@ -2,9 +2,6 @@
 
 import org.logstash.config.ir.InvalidIRException;
 
-/**
- * Created by andrewvc on 6/12/17.
- */
 public class IncompleteSourceWithMetadataException extends InvalidIRException {
     private static final long serialVersionUID = 456422097113787583L;
 
diff --git a/logstash-core/src/main/java/org/logstash/common/SourceWithMetadata.java b/logstash-core/src/main/java/org/logstash/common/SourceWithMetadata.java
index e2b3a94eb0a..9a76ef5e533 100644
--- a/logstash-core/src/main/java/org/logstash/common/SourceWithMetadata.java
+++ b/logstash-core/src/main/java/org/logstash/common/SourceWithMetadata.java
@@ -9,9 +9,6 @@
 import java.util.regex.Pattern;
 import java.util.stream.Collectors;
 
-/**
- * Created by andrewvc on 9/6/16.
- */
 public class SourceWithMetadata implements HashableWithSource {
     // Either 'file' or something else
     private final String protocol;
diff --git a/logstash-core/src/main/java/org/logstash/common/Util.java b/logstash-core/src/main/java/org/logstash/common/Util.java
index be0b73af01c..a832b1275f1 100644
--- a/logstash-core/src/main/java/org/logstash/common/Util.java
+++ b/logstash-core/src/main/java/org/logstash/common/Util.java
@@ -4,9 +4,6 @@
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
 
-/**
- * Created by andrewvc on 12/23/16.
- */
 public class Util {
     // Modified from http://stackoverflow.com/a/11009612/11105
 
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/BaseSourceComponent.java b/logstash-core/src/main/java/org/logstash/config/ir/BaseSourceComponent.java
index 0655365acd8..ac65a3d2bf9 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/BaseSourceComponent.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/BaseSourceComponent.java
@@ -3,11 +3,8 @@
 import org.logstash.common.SourceWithMetadata;
 
 /**
- * Created by andrewvc on 9/6/16.
- *
  * This class is useful to inherit from for things that need to be source components
  * since it handles storage of the meta property for you and reduces a lot of boilerplate.
- *
  */
 public abstract class BaseSourceComponent implements SourceComponent {
     private final SourceWithMetadata meta;
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/DSL.java b/logstash-core/src/main/java/org/logstash/config/ir/DSL.java
index 9ea11ba3a45..be5905a729e 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/DSL.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/DSL.java
@@ -35,9 +35,6 @@
 import org.logstash.config.ir.imperative.PluginStatement;
 import org.logstash.config.ir.imperative.Statement;
 
-/**
- * Created by andrewvc on 9/15/16.
- */
 public class DSL {
     public static EventValueExpression eEventValue(SourceWithMetadata meta, String fieldName) {
         return new EventValueExpression(meta, fieldName);
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/Hashable.java b/logstash-core/src/main/java/org/logstash/config/ir/Hashable.java
index 5c711bf66a4..b8da11f397f 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/Hashable.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/Hashable.java
@@ -1,8 +1,5 @@
 package org.logstash.config.ir;
 
-/**
- * Created by andrewvc on 12/23/16.
- */
 public interface Hashable {
     String uniqueHash();
 }
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/HashableWithSource.java b/logstash-core/src/main/java/org/logstash/config/ir/HashableWithSource.java
index ce49814fc05..c8ec08dbf2a 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/HashableWithSource.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/HashableWithSource.java
@@ -2,9 +2,6 @@
 
 import org.logstash.common.Util;
 
-/**
- * Created by andrewvc on 6/12/17.
- */
 public interface HashableWithSource extends Hashable {
     @Override
     default String uniqueHash() {
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/InvalidIRException.java b/logstash-core/src/main/java/org/logstash/config/ir/InvalidIRException.java
index acb6e7ac5b2..79e462bcaf2 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/InvalidIRException.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/InvalidIRException.java
@@ -1,8 +1,5 @@
 package org.logstash.config.ir;
 
-/**
- * Created by andrewvc on 9/6/16.
- */
 public class InvalidIRException extends Exception {
     public InvalidIRException(String s) {
         super(s);
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/PipelineIR.java b/logstash-core/src/main/java/org/logstash/config/ir/PipelineIR.java
index 8be172521b5..f227b3e96c3 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/PipelineIR.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/PipelineIR.java
@@ -9,9 +9,6 @@
 import org.logstash.config.ir.graph.QueueVertex;
 import org.logstash.config.ir.graph.Vertex;
 
-/**
- * Created by andrewvc on 9/20/16.
- */
 public final class PipelineIR implements Hashable {
 
     private final String uniqueHash;
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/PluginDefinition.java b/logstash-core/src/main/java/org/logstash/config/ir/PluginDefinition.java
index e4fb708e3a2..4c6e12baf4b 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/PluginDefinition.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/PluginDefinition.java
@@ -8,9 +8,6 @@
 import org.logstash.ObjectMappers;
 import org.logstash.common.SourceWithMetadata;
 
-/**
- * Created by andrewvc on 9/20/16.
- */
 public final class PluginDefinition implements SourceComponent, HashableWithSource {
 
     @Override
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/SourceComponent.java b/logstash-core/src/main/java/org/logstash/config/ir/SourceComponent.java
index 6b68d9a3092..9d0bd997bb6 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/SourceComponent.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/SourceComponent.java
@@ -2,9 +2,6 @@
 
 import org.logstash.common.SourceWithMetadata;
 
-/**
- * Created by andrewvc on 9/16/16.
- */
 public interface SourceComponent {
     boolean sourceComponentEquals(SourceComponent sourceComponent);
     SourceWithMetadata getSourceWithMetadata();
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/BinaryBooleanExpression.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/BinaryBooleanExpression.java
index 968c440ef0e..a64cceb1274 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/BinaryBooleanExpression.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/BinaryBooleanExpression.java
@@ -4,9 +4,6 @@
 import org.logstash.common.Util;
 import org.logstash.config.ir.SourceComponent;
 
-/**
- * Created by andrewvc on 9/6/16.
- */
 public abstract class BinaryBooleanExpression extends BooleanExpression {
     @Override
     public boolean sourceComponentEquals(SourceComponent sourceComponent) {
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/BooleanExpression.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/BooleanExpression.java
index aaaa4e6f4f4..4a0f62ffedd 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/BooleanExpression.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/BooleanExpression.java
@@ -2,9 +2,6 @@
 
 import org.logstash.common.SourceWithMetadata;
 
-/**
- * Created by andrewvc on 9/14/16.
- */
 public abstract class BooleanExpression extends Expression {
     public BooleanExpression(SourceWithMetadata meta) {
         super(meta);
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/EventValueExpression.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/EventValueExpression.java
index c9dd5cdb9d8..59376f05816 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/EventValueExpression.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/EventValueExpression.java
@@ -3,9 +3,6 @@
 import org.logstash.config.ir.SourceComponent;
 import org.logstash.common.SourceWithMetadata;
 
-/**
- * Created by andrewvc on 9/13/16.
- */
 public class EventValueExpression extends Expression {
     private final String fieldName;
 
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/Expression.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/Expression.java
index dca88ddac44..7c33f82a513 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/Expression.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/Expression.java
@@ -10,7 +10,6 @@
  *
  * if [foo]
  * notnull(eEventValue("foo"))
- * Created by andrewvc on 9/6/16.
  */
 public abstract class Expression extends BaseSourceComponent implements HashableWithSource {
 
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/RegexValueExpression.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/RegexValueExpression.java
index f0536c39a43..0d93310d812 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/RegexValueExpression.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/RegexValueExpression.java
@@ -4,9 +4,6 @@
 import org.logstash.config.ir.InvalidIRException;
 import org.logstash.config.ir.SourceComponent;
 
-/**
- * Created by andrewvc on 9/15/16.
- */
 public class RegexValueExpression extends ValueExpression {
     private final String regex;
 
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/UnaryBooleanExpression.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/UnaryBooleanExpression.java
index 6481dc65385..78018fa57e9 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/UnaryBooleanExpression.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/UnaryBooleanExpression.java
@@ -3,9 +3,6 @@
 import org.logstash.config.ir.InvalidIRException;
 import org.logstash.common.SourceWithMetadata;
 
-/**
- * Created by andrewvc on 9/13/16.
- */
 public abstract class UnaryBooleanExpression extends BooleanExpression {
     private final Expression expression;
 
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/ValueExpression.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/ValueExpression.java
index 3d4089a327b..760d7853c22 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/ValueExpression.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/ValueExpression.java
@@ -8,9 +8,6 @@
 import org.logstash.config.ir.InvalidIRException;
 import org.logstash.config.ir.SourceComponent;
 
-/**
- * Created by andrewvc on 9/13/16.
- */
 public class ValueExpression extends Expression {
     protected final Object value;
 
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/And.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/And.java
index 3a1e7a448ff..cd113433357 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/And.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/And.java
@@ -4,9 +4,6 @@
 import org.logstash.config.ir.expression.BinaryBooleanExpression;
 import org.logstash.config.ir.expression.Expression;
 
-/**
- * Created by andrewvc on 9/21/16.
- */
 public class And extends BinaryBooleanExpression {
     public And(SourceWithMetadata meta, Expression left, Expression right) {
         super(meta, left, right);
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Eq.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Eq.java
index 1addc385ee4..0af8e6e2c16 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Eq.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Eq.java
@@ -4,9 +4,6 @@
 import org.logstash.config.ir.expression.BinaryBooleanExpression;
 import org.logstash.config.ir.expression.Expression;
 
-/**
- * Created by andrewvc on 9/21/16.
- */
 public class Eq extends BinaryBooleanExpression {
     public Eq(SourceWithMetadata meta, Expression left, Expression right) {
         super(meta, left, right);
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Gt.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Gt.java
index d85ab1f7ca5..6d10434e44e 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Gt.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Gt.java
@@ -4,9 +4,6 @@
 import org.logstash.config.ir.expression.BinaryBooleanExpression;
 import org.logstash.config.ir.expression.Expression;
 
-/**
- * Created by andrewvc on 9/21/16.
- */
 public class Gt extends BinaryBooleanExpression {
     public Gt(SourceWithMetadata meta, Expression left, Expression right) {
         super(meta, left, right);
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Gte.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Gte.java
index 354ba7de70b..4961dc00ed8 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Gte.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Gte.java
@@ -4,9 +4,6 @@
 import org.logstash.config.ir.expression.BinaryBooleanExpression;
 import org.logstash.config.ir.expression.Expression;
 
-/**
- * Created by andrewvc on 9/21/16.
- */
 public class Gte extends BinaryBooleanExpression {
     public Gte(SourceWithMetadata meta, Expression left, Expression right) {
         super(meta, left, right);
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/In.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/In.java
index 8ad94e858b9..7c50efad8ea 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/In.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/In.java
@@ -4,9 +4,6 @@
 import org.logstash.config.ir.expression.BinaryBooleanExpression;
 import org.logstash.config.ir.expression.Expression;
 
-/**
- * Created by andrewvc on 9/21/16.
- */
 public class In extends BinaryBooleanExpression {
     public In(SourceWithMetadata meta, Expression left, Expression right) {
         super(meta, left, right);
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Lt.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Lt.java
index 9f421445938..becc96f6bd8 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Lt.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Lt.java
@@ -4,9 +4,6 @@
 import org.logstash.config.ir.expression.BinaryBooleanExpression;
 import org.logstash.config.ir.expression.Expression;
 
-/**
- * Created by andrewvc on 9/21/16.
- */
 public class Lt extends BinaryBooleanExpression {
     public Lt(SourceWithMetadata meta, Expression left, Expression right) {
         super(meta, left, right);
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Lte.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Lte.java
index f336d9b8a31..6d5814a1ccd 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Lte.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Lte.java
@@ -4,9 +4,6 @@
 import org.logstash.config.ir.expression.BinaryBooleanExpression;
 import org.logstash.config.ir.expression.Expression;
 
-/**
- * Created by andrewvc on 9/21/16.
- */
 public class Lte extends BinaryBooleanExpression {
     public Lte(SourceWithMetadata meta, Expression left, Expression right) {
         super(meta, left, right);
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Neq.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Neq.java
index 6f17ed1e138..9e23e53c7f8 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Neq.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Neq.java
@@ -4,9 +4,6 @@
 import org.logstash.config.ir.expression.BinaryBooleanExpression;
 import org.logstash.config.ir.expression.Expression;
 
-/**
- * Created by andrewvc on 9/21/16.
- */
 public class Neq extends BinaryBooleanExpression {
     public Neq(SourceWithMetadata meta, Expression left, Expression right) {
         super(meta, left, right);
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Or.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Or.java
index bed9d1561da..b4019975af4 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Or.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/Or.java
@@ -4,9 +4,6 @@
 import org.logstash.config.ir.expression.BinaryBooleanExpression;
 import org.logstash.config.ir.expression.Expression;
 
-/**
- * Created by andrewvc on 9/21/16.
- */
 public class Or extends BinaryBooleanExpression {
     public Or(SourceWithMetadata meta, Expression left, Expression right) {
         super(meta, left, right);
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/RegexEq.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/RegexEq.java
index 3ddf123d508..b6a5d9c2c59 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/RegexEq.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/binary/RegexEq.java
@@ -6,9 +6,6 @@
 import org.logstash.config.ir.expression.Expression;
 import org.logstash.config.ir.expression.RegexValueExpression;
 
-/**
- * Created by andrewvc on 9/21/16.
- */
 public class RegexEq extends BinaryBooleanExpression {
     public RegexEq(SourceWithMetadata meta, Expression left, Expression right) throws InvalidIRException {
         super(meta, left, right);
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/unary/Not.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/unary/Not.java
index d1c8f0471b5..04dd3ccb73a 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/unary/Not.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/unary/Not.java
@@ -6,9 +6,6 @@
 import org.logstash.config.ir.expression.Expression;
 import org.logstash.config.ir.expression.UnaryBooleanExpression;
 
-/**
- * Created by andrewvc on 9/21/16.
- */
 public class Not extends UnaryBooleanExpression {
     public Not(SourceWithMetadata meta, Expression expression) throws InvalidIRException {
         super(meta, expression);
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/expression/unary/Truthy.java b/logstash-core/src/main/java/org/logstash/config/ir/expression/unary/Truthy.java
index c5a0898a518..3f9d655a7ef 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/expression/unary/Truthy.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/expression/unary/Truthy.java
@@ -6,9 +6,6 @@
 import org.logstash.config.ir.expression.Expression;
 import org.logstash.config.ir.expression.UnaryBooleanExpression;
 
-/**
- * Created by andrewvc on 9/21/16.
- */
 public class Truthy extends UnaryBooleanExpression {
     public Truthy(SourceWithMetadata meta, Expression expression) throws InvalidIRException {
         super(meta, expression);
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/BooleanEdge.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/BooleanEdge.java
index b50e62fb30d..f1f6dbd0906 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/BooleanEdge.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/BooleanEdge.java
@@ -4,9 +4,6 @@
 import org.logstash.config.ir.SourceComponent;
 import org.logstash.config.ir.InvalidIRException;
 
-/**
- * Created by andrewvc on 9/15/16.
- */
 public final class BooleanEdge extends Edge {
     public static class BooleanEdgeFactory extends EdgeFactory {
         public Boolean getEdgeType() {
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/Edge.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/Edge.java
index 09c43213814..8efa7806a52 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/Edge.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/Edge.java
@@ -5,9 +5,6 @@
 import org.logstash.config.ir.InvalidIRException;
 import org.logstash.config.ir.SourceComponent;
 
-/**
- * Created by andrewvc on 9/15/16.
- */
 public abstract class Edge implements SourceComponent {
 
     private final Vertex from;
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/Graph.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/Graph.java
index eab6f857d53..38554f0223a 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/Graph.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/Graph.java
@@ -9,15 +9,11 @@
 import org.logstash.config.ir.graph.algorithms.GraphDiff;
 import org.logstash.config.ir.graph.algorithms.TopologicalSort;
 
-import java.security.MessageDigest;
 import java.util.*;
 import java.util.function.BiFunction;
 import java.util.stream.Collectors;
 import java.util.stream.Stream;
 
-/**
- * Created by andrewvc on 9/15/16.
- */
 public final class Graph implements SourceComponent, Hashable {
     private final Set<Vertex> vertices = new LinkedHashSet<>();
     private final Set<Edge> edges = new LinkedHashSet<>();
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/IfVertex.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/IfVertex.java
index 8636b1a99af..6163d51867a 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/IfVertex.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/IfVertex.java
@@ -8,9 +8,6 @@
 import org.logstash.config.ir.SourceComponent;
 import org.logstash.config.ir.expression.BooleanExpression;
 
-/**
- * Created by andrewvc on 9/15/16.
- */
 public class IfVertex extends Vertex {
 
     public BooleanExpression getBooleanExpression() {
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/PlainEdge.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/PlainEdge.java
index d96f58fe26b..519b1f06485 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/PlainEdge.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/PlainEdge.java
@@ -3,9 +3,6 @@
 import org.logstash.common.Util;
 import org.logstash.config.ir.InvalidIRException;
 
-/**
- * Created by andrewvc on 9/19/16.
- */
 public class PlainEdge extends Edge {
     public static class PlainEdgeFactory extends Edge.EdgeFactory {
         @Override
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/PluginVertex.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/PluginVertex.java
index 6bd4bff7306..4187c0ae942 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/PluginVertex.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/PluginVertex.java
@@ -1,15 +1,9 @@
 package org.logstash.config.ir.graph;
 
-import com.fasterxml.jackson.core.JsonProcessingException;
-import org.logstash.ObjectMappers;
 import org.logstash.common.SourceWithMetadata;
-import org.logstash.common.Util;
 import org.logstash.config.ir.PluginDefinition;
 import org.logstash.config.ir.SourceComponent;
 
-/**
- * Created by andrewvc on 9/15/16.
- */
 public class PluginVertex extends Vertex {
     private final PluginDefinition pluginDefinition;
 
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/QueueVertex.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/QueueVertex.java
index 0f433607273..ed66e79a3db 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/QueueVertex.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/QueueVertex.java
@@ -5,9 +5,6 @@
 import org.logstash.config.ir.SourceComponent;
 import org.logstash.common.SourceWithMetadata;
 
-/**
- * Created by andrewvc on 9/15/16.
- */
 public final class QueueVertex extends Vertex {
     public QueueVertex() throws IncompleteSourceWithMetadataException {
         super(new SourceWithMetadata("internal", "queue", 0,0,"queue"));
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/Vertex.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/Vertex.java
index 7fbbcf50477..15b7e604c3e 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/Vertex.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/Vertex.java
@@ -9,16 +9,11 @@
 import org.logstash.config.ir.InvalidIRException;
 import org.logstash.config.ir.graph.algorithms.DepthFirst;
 
-import java.nio.charset.StandardCharsets;
-import java.security.MessageDigest;
 import java.util.Collection;
 import java.util.Collections;
 import java.util.stream.Collectors;
 import java.util.stream.Stream;
 
-/**
- * Created by andrewvc on 9/15/16.
- */
 public abstract class Vertex implements SourceComponent, HashableWithSource {
 
     private static final AtomicInteger SEQUENCE = new AtomicInteger();
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/BreadthFirst.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/BreadthFirst.java
index e8206155599..8e878c66a5e 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/BreadthFirst.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/BreadthFirst.java
@@ -6,10 +6,6 @@
 import java.util.function.Consumer;
 import java.util.stream.Stream;
 
-/**
- * Created by andrewvc on 1/5/17.
- *
- */
 public class BreadthFirst {
     public static BfsResult breadthFirst(Collection<Vertex> roots) {
         return breadthFirst(roots, false, null);
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/DepthFirst.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/DepthFirst.java
index f6e7a583c52..40c7bc6ad88 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/DepthFirst.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/DepthFirst.java
@@ -7,9 +7,6 @@
 import java.util.stream.Stream;
 import java.util.stream.StreamSupport;
 
-/**
- * Created by andrewvc on 1/5/17.
- */
 public class DepthFirst {
     public static Stream<Vertex> depthFirst(Graph g) {
         return depthFirst(g.getRoots());
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/GraphDiff.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/GraphDiff.java
index 4651280b9b2..c6c973721fe 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/GraphDiff.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/GraphDiff.java
@@ -9,9 +9,6 @@
 import org.logstash.config.ir.graph.Graph;
 import org.logstash.config.ir.graph.Vertex;
 
-/**
- * Created by andrewvc on 1/5/17.
- */
 public class GraphDiff {
     public static DiffResult diff(Graph left, Graph right) {
         List<Edge> removedEdges = left.edges().filter(e -> !right.hasEquivalentEdge(e)).collect(Collectors.toList());
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/ShortestPath.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/ShortestPath.java
deleted file mode 100644
index c847560a2b6..00000000000
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/ShortestPath.java
+++ /dev/null
@@ -1,106 +0,0 @@
-package org.logstash.config.ir.graph.algorithms;
-
-import org.logstash.config.ir.graph.Vertex;
-
-import java.util.*;
-import java.util.stream.Collectors;
-import java.util.stream.Stream;
-
-/**
- * Created by andrewvc on 1/5/17.
- * This class isn't currently used anywhere, I wrote it for some code that is now removed, however, I'm sure it will be
- * useful shortly, so we should hold onto it for a while.
- */
-public class ShortestPath {
-    static class InvalidShortestPathArguments extends Exception {
-        private static final long serialVersionUID = -1493537067800744231L;
-        private final Collection<Vertex> invalidVertices;
-
-        public InvalidShortestPathArguments(Collection<Vertex> invalidVertices) {
-            super();
-            this.invalidVertices = invalidVertices;
-
-        }
-
-        @Override
-        public String getMessage() {
-            String verticesMessage = invalidVertices.stream().map(Vertex::toString).collect(Collectors.joining(", "));
-            return "Attempted to determine path for vertex that is not in the search space!" + verticesMessage;
-        }
-    }
-
-
-    public static List<Vertex> shortestPath(Vertex from, Vertex to) throws InvalidShortestPathArguments {
-        return shortestPath(from, Collections.singleton(to)).get(to);
-    }
-
-    public static Map<Vertex, List<Vertex>> shortestPath(Vertex from, Collection<Vertex> to) throws InvalidShortestPathArguments {
-        return shortestPath(from, to, false);
-    }
-
-    // Finds the shortest paths to the specified vertices traversing edges backward using Dijkstra's algorithm.
-    // The items in `to` must be ancestors of this Vertex!
-    public static Map<Vertex, List<Vertex>> shortestReversePath(Vertex from, Collection<Vertex> to) throws InvalidShortestPathArguments {
-        return shortestPath(from, to, true);
-    }
-
-    // Finds the shortest paths to the specified vertices using Dijkstra's algorithm.
-    // The items in `to` must be ancestors of this Vertex!
-    public static Map<Vertex, List<Vertex>> shortestPath(Vertex from, Collection<Vertex> to, boolean reverseSearch) throws InvalidShortestPathArguments {
-        Map<Vertex, Integer> vertexDistances = new HashMap<>();
-        Map<Vertex, Vertex> vertexPathPrevious = new HashMap<>();
-
-        List<Vertex> pending = new ArrayList<>();
-        Stream<Vertex> searchSpace = reverseSearch ? from.ancestors() : from.descendants();
-        searchSpace.forEach((vertex) -> {
-            pending.add(vertex);
-            // Max value is an unknown distance
-            // using this is more convenient and concise than null in later code
-            vertexDistances.put(vertex, Integer.MAX_VALUE);
-        });
-
-        pending.add(from);
-        vertexDistances.put(from, 0);
-
-        Collection<Vertex> invalidVertices = to.stream().filter(v -> !pending.contains(v)).collect(Collectors.toList());
-        if (!invalidVertices.isEmpty()) {
-            throw new InvalidShortestPathArguments(invalidVertices);
-        }
-
-        while (!pending.isEmpty()) {
-            Vertex current = pending.stream().min(Comparator.comparing(vertexDistances::get)).get();
-            int currentDistance = vertexDistances.get(current);
-            pending.remove(current);
-
-            Stream<Vertex> toProcess = reverseSearch ? current.incomingVertices() : current.outgoingVertices();
-
-            toProcess.forEach((v) -> {
-                Integer curDistance = vertexDistances.get(v);
-                int altDistance = currentDistance + 1; // Fixed cost per edge of 1
-                if (altDistance < curDistance) {
-                    vertexDistances.put(v, altDistance);
-                    vertexPathPrevious.put(v, current);
-                }
-            });
-        }
-
-        Map<Vertex, List<Vertex>> result = new HashMap<>(to.size());
-
-        for (Vertex toVertex : to) {
-            int toVertexDistance = vertexDistances.get(toVertex);
-
-            List<Vertex> path = new ArrayList<>(toVertexDistance+1);
-            Vertex pathCurrentVertex = toVertex;
-            while (pathCurrentVertex != from) {
-                path.add(pathCurrentVertex);
-                pathCurrentVertex = vertexPathPrevious.get(pathCurrentVertex);
-            }
-            path.add(from);
-            Collections.reverse(path);
-            result.put(toVertex, path);
-        }
-
-        return result;
-    }
-
-}
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/TopologicalSort.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/TopologicalSort.java
index 0e7be11959f..48b7405bda3 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/TopologicalSort.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/TopologicalSort.java
@@ -6,9 +6,6 @@
 
 import java.util.*;
 
-/**
- * Created by andrewvc on 1/7/17.
- */
 public class TopologicalSort {
     public static class UnexpectedGraphCycleError extends Exception {
         private static final long serialVersionUID = 1778155790783320839L;
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/imperative/ComposedParallelStatement.java b/logstash-core/src/main/java/org/logstash/config/ir/imperative/ComposedParallelStatement.java
index d8cbba53ed8..7b0a1e5c4e6 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/imperative/ComposedParallelStatement.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/imperative/ComposedParallelStatement.java
@@ -6,9 +6,6 @@
 
 import java.util.List;
 
-/**
- * Created by andrewvc on 9/22/16.
- */
 public class ComposedParallelStatement extends ComposedStatement {
     public ComposedParallelStatement(SourceWithMetadata meta, List<Statement> statements) throws InvalidIRException {
         super(meta, statements);
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/imperative/ComposedSequenceStatement.java b/logstash-core/src/main/java/org/logstash/config/ir/imperative/ComposedSequenceStatement.java
index 50fc83c9953..37d5b18ce21 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/imperative/ComposedSequenceStatement.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/imperative/ComposedSequenceStatement.java
@@ -6,9 +6,6 @@
 
 import java.util.List;
 
-/**
- * Created by andrewvc on 9/22/16.
- */
 public class ComposedSequenceStatement extends ComposedStatement {
     public ComposedSequenceStatement(SourceWithMetadata meta, List<Statement> statements) throws InvalidIRException {
         super(meta, statements);
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/imperative/ComposedStatement.java b/logstash-core/src/main/java/org/logstash/config/ir/imperative/ComposedStatement.java
index 1cdaa25724b..d4f838f350d 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/imperative/ComposedStatement.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/imperative/ComposedStatement.java
@@ -7,9 +7,6 @@
 import java.util.List;
 import java.util.stream.Collectors;
 
-/**
- * Created by andrewvc on 9/6/16.
- */
 public abstract class ComposedStatement extends Statement {
     public interface IFactory {
         ComposedStatement make(SourceWithMetadata meta, List<Statement> statements) throws InvalidIRException;
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/imperative/IfStatement.java b/logstash-core/src/main/java/org/logstash/config/ir/imperative/IfStatement.java
index 78aa4ed3467..35e3c7b834d 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/imperative/IfStatement.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/imperative/IfStatement.java
@@ -13,7 +13,6 @@
 import java.util.stream.Collectors;
 
 /**
- * Created by andrewvc on 9/6/16.
  * if 5 {
  *
  * }
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/imperative/NoopStatement.java b/logstash-core/src/main/java/org/logstash/config/ir/imperative/NoopStatement.java
index aac0a439cdb..b8290214e51 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/imperative/NoopStatement.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/imperative/NoopStatement.java
@@ -4,9 +4,6 @@
 import org.logstash.common.SourceWithMetadata;
 import org.logstash.config.ir.graph.Graph;
 
-/**
- * Created by andrewvc on 9/15/16.
- */
 public class NoopStatement extends Statement {
 
     public NoopStatement(SourceWithMetadata meta) {
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/imperative/PluginStatement.java b/logstash-core/src/main/java/org/logstash/config/ir/imperative/PluginStatement.java
index 47b677edd49..934ab536d43 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/imperative/PluginStatement.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/imperative/PluginStatement.java
@@ -8,9 +8,6 @@
 import org.logstash.config.ir.graph.PluginVertex;
 import org.logstash.config.ir.graph.Vertex;
 
-/**
- * Created by andrewvc on 9/6/16.
- */
 public class PluginStatement extends Statement {
     private final PluginDefinition pluginDefinition;
 
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/imperative/Statement.java b/logstash-core/src/main/java/org/logstash/config/ir/imperative/Statement.java
index 5f62f5e66b2..3152a0eb98b 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/imperative/Statement.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/imperative/Statement.java
@@ -5,9 +5,6 @@
 import org.logstash.common.SourceWithMetadata;
 import org.logstash.config.ir.graph.Graph;
 
-/**
- * Created by andrewvc on 9/6/16.
- */
 public abstract class Statement extends BaseSourceComponent {
     public Statement(SourceWithMetadata meta) {
         super(meta);
diff --git a/logstash-core/src/main/java/org/logstash/instrument/monitors/HotThreadsMonitor.java b/logstash-core/src/main/java/org/logstash/instrument/monitors/HotThreadsMonitor.java
index 9e2572de58a..1134d62e9cd 100644
--- a/logstash-core/src/main/java/org/logstash/instrument/monitors/HotThreadsMonitor.java
+++ b/logstash-core/src/main/java/org/logstash/instrument/monitors/HotThreadsMonitor.java
@@ -18,7 +18,6 @@
 /**
  * Hot threads monitoring class. This class pulls information out of the JVM #
  * provided beans and lest the different consumers query it.
- * Created by purbon on 12/12/15.
  */
 public final class HotThreadsMonitor {
 
diff --git a/logstash-core/src/main/java/org/logstash/instrument/monitors/MemoryMonitor.java b/logstash-core/src/main/java/org/logstash/instrument/monitors/MemoryMonitor.java
index 94977220ffc..d44e56f8f75 100644
--- a/logstash-core/src/main/java/org/logstash/instrument/monitors/MemoryMonitor.java
+++ b/logstash-core/src/main/java/org/logstash/instrument/monitors/MemoryMonitor.java
@@ -8,9 +8,6 @@
 import java.util.List;
 import java.util.Map;
 
-/**
- * Based on code created by purbon on 13/12/15.
- */
 public final class MemoryMonitor {
 
     private MemoryMonitor() {
diff --git a/logstash-core/src/main/java/org/logstash/instrument/monitors/ProcessMonitor.java b/logstash-core/src/main/java/org/logstash/instrument/monitors/ProcessMonitor.java
index a6cdd5e0746..e7de05f4631 100644
--- a/logstash-core/src/main/java/org/logstash/instrument/monitors/ProcessMonitor.java
+++ b/logstash-core/src/main/java/org/logstash/instrument/monitors/ProcessMonitor.java
@@ -8,9 +8,6 @@
 import java.util.concurrent.TimeUnit;
 import javax.management.MBeanServer;
 
-/**
- * Created by andrewvc on 5/12/16.
- */
 public class ProcessMonitor {
     private static final OperatingSystemMXBean osMxBean = ManagementFactory.getOperatingSystemMXBean();
     private static final MBeanServer platformMxBean = ManagementFactory.getPlatformMBeanServer();
diff --git a/logstash-core/src/main/java/org/logstash/instrument/monitors/SystemMonitor.java b/logstash-core/src/main/java/org/logstash/instrument/monitors/SystemMonitor.java
index e6f2319f366..209e94de7cd 100644
--- a/logstash-core/src/main/java/org/logstash/instrument/monitors/SystemMonitor.java
+++ b/logstash-core/src/main/java/org/logstash/instrument/monitors/SystemMonitor.java
@@ -7,7 +7,6 @@
 
 /**
  * System information as returned by the different JVM's MxBeans
- * Created by purbon on 13/12/15.
  */
 public class SystemMonitor {
 
diff --git a/logstash-core/src/main/java/org/logstash/instrument/reports/SystemReport.java b/logstash-core/src/main/java/org/logstash/instrument/reports/SystemReport.java
deleted file mode 100644
index 1f49494b64c..00000000000
--- a/logstash-core/src/main/java/org/logstash/instrument/reports/SystemReport.java
+++ /dev/null
@@ -1,21 +0,0 @@
-package org.logstash.instrument.reports;
-
-
-import org.logstash.instrument.monitors.SystemMonitor;
-
-import java.util.Map;
-
-/**
- * Created by purbon on 12/12/15.
- */
- public class SystemReport {
-
-    /**
-     * Build a report with current System information
-     * @return a Map with the current system report
-     */
-    public static Map<String, Object> generate() {
-        return SystemMonitor.detect().toMap();
-    }
-}
-
diff --git a/logstash-core/src/main/java/org/logstash/instrument/reports/ThreadsReport.java b/logstash-core/src/main/java/org/logstash/instrument/reports/ThreadsReport.java
index 25eac46ebc6..b7622270795 100644
--- a/logstash-core/src/main/java/org/logstash/instrument/reports/ThreadsReport.java
+++ b/logstash-core/src/main/java/org/logstash/instrument/reports/ThreadsReport.java
@@ -9,7 +9,6 @@
 
 /**
  * A ThreadsReport object used to hold the hot threads information
- * Created by purbon on 12/12/15.
  */
 public class ThreadsReport {
 
diff --git a/logstash-core/src/test/java/org/logstash/common/SourceWithMetadataTest.java b/logstash-core/src/test/java/org/logstash/common/SourceWithMetadataTest.java
index 76e078cfbb9..ae87850cb12 100644
--- a/logstash-core/src/test/java/org/logstash/common/SourceWithMetadataTest.java
+++ b/logstash-core/src/test/java/org/logstash/common/SourceWithMetadataTest.java
@@ -6,9 +6,6 @@
 
 import java.util.Arrays;
 
-/**
- * Created by andrewvc on 6/12/17.
- */
 @RunWith(Parameterized.class)
 public class SourceWithMetadataTest {
     private final ParameterGroup parameterGroup;
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/IRHelpers.java b/logstash-core/src/test/java/org/logstash/config/ir/IRHelpers.java
index dfa2e53d670..8d4b1cb48cb 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/IRHelpers.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/IRHelpers.java
@@ -10,22 +10,16 @@
 import org.logstash.config.ir.graph.Graph;
 import org.logstash.config.ir.graph.Vertex;
 import org.logstash.config.ir.graph.algorithms.GraphDiff;
-import org.logstash.config.ir.imperative.Statement;
 
-import javax.xml.transform.Source;
 import java.util.HashMap;
 import java.util.Objects;
 import java.util.Random;
 import java.util.UUID;
 import java.util.concurrent.Callable;
-import java.util.stream.IntStream;
 
 import static org.logstash.config.ir.DSL.*;
 import static org.logstash.config.ir.PluginDefinition.Type.*;
 
-/**
- * Created by andrewvc on 9/19/16.
- */
 public class IRHelpers {
     public static void assertSyntaxEquals(SourceComponent left, SourceComponent right) {
         String message = String.format("Expected '%s' to equal '%s'", left, right);
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/PipelineIRTest.java b/logstash-core/src/test/java/org/logstash/config/ir/PipelineIRTest.java
index f6a96d14067..653f4ccdaf3 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/PipelineIRTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/PipelineIRTest.java
@@ -9,9 +9,6 @@
 import static org.logstash.config.ir.PluginDefinition.Type.*;
 import static org.logstash.config.ir.IRHelpers.randMeta;
 
-/**
- * Created by andrewvc on 9/20/16.
- */
 public class PipelineIRTest {
     public Graph makeInputSection() throws InvalidIRException {
         return iComposeParallel(iPlugin(randMeta(), INPUT, "generator"), iPlugin(randMeta(), INPUT, "stdin")).toGraph();
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/graph/BooleanEdgeTest.java b/logstash-core/src/test/java/org/logstash/config/ir/graph/BooleanEdgeTest.java
index cb503ca9073..865412f4f5a 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/graph/BooleanEdgeTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/graph/BooleanEdgeTest.java
@@ -10,9 +10,6 @@
 import static org.junit.Assert.assertThat;
 import static org.logstash.config.ir.IRHelpers.*;
 
-/**
- * Created by andrewvc on 11/21/16.
- */
 @RunWith(Theories.class)
 public class BooleanEdgeTest {
     @DataPoint
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/graph/EdgeTest.java b/logstash-core/src/test/java/org/logstash/config/ir/graph/EdgeTest.java
index d9d32d8945a..2b55279f7d6 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/graph/EdgeTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/graph/EdgeTest.java
@@ -7,10 +7,6 @@
 import static org.junit.Assert.*;
 import static org.hamcrest.CoreMatchers.*;
 
-
-/**
- * Created by andrewvc on 11/21/16.
- */
 public class EdgeTest {
     @Test
     public void testBasicEdge() throws InvalidIRException {
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/graph/GraphTest.java b/logstash-core/src/test/java/org/logstash/config/ir/graph/GraphTest.java
index 0975bc97496..26737b8923b 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/graph/GraphTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/graph/GraphTest.java
@@ -2,15 +2,11 @@
 
 import org.junit.Test;
 import org.logstash.common.SourceWithMetadata;
-import org.logstash.config.ir.DSL;
 import org.logstash.config.ir.IRHelpers;
 import org.logstash.config.ir.InvalidIRException;
-import org.logstash.config.ir.PluginDefinition;
-import org.logstash.config.ir.imperative.IfStatement;
 
 import java.util.Collection;
 import java.util.Collections;
-import java.util.Random;
 
 import static org.hamcrest.CoreMatchers.instanceOf;
 import static org.hamcrest.CoreMatchers.is;
@@ -19,9 +15,6 @@
 import static org.logstash.config.ir.IRHelpers.createTestVertex;
 import static org.logstash.config.ir.IRHelpers.randMeta;
 
-/**
- * Created by andrewvc on 11/18/16.
- */
 public class GraphTest {
     @Test
     public void testGraphBasics() throws InvalidIRException {
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/graph/IfVertexTest.java b/logstash-core/src/test/java/org/logstash/config/ir/graph/IfVertexTest.java
index 043248f9574..9c9f77992f5 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/graph/IfVertexTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/graph/IfVertexTest.java
@@ -7,9 +7,6 @@
 import static org.junit.Assert.assertThat;
 import static org.logstash.config.ir.IRHelpers.*;
 
-/**
- * Created by andrewvc on 11/22/16.
- */
 public class IfVertexTest {
     @Test
     public void testIfVertexCreation() throws InvalidIRException {
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/graph/PlainEdgeTest.java b/logstash-core/src/test/java/org/logstash/config/ir/graph/PlainEdgeTest.java
index bbae087ef7b..b84d16d6baa 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/graph/PlainEdgeTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/graph/PlainEdgeTest.java
@@ -4,9 +4,6 @@
 import org.logstash.config.ir.IRHelpers;
 import org.logstash.config.ir.InvalidIRException;
 
-/**
- * Created by andrewvc on 11/22/16.
- */
 public class PlainEdgeTest {
     @Test
     public void creationDoesNotRaiseException() throws InvalidIRException {
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/graph/PluginVertexTest.java b/logstash-core/src/test/java/org/logstash/config/ir/graph/PluginVertexTest.java
index 78098a07b08..eb4a78a4ef3 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/graph/PluginVertexTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/graph/PluginVertexTest.java
@@ -12,9 +12,6 @@
 import static org.junit.Assert.assertThat;
 import static org.logstash.config.ir.IRHelpers.*;
 
-/**
- * Created by andrewvc on 11/22/16.
- */
 public class PluginVertexTest {
     @Test
     public void testConstructionIdHandlingWhenNoExplicitId() throws InvalidIRException {
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/graph/QueueVertexTest.java b/logstash-core/src/test/java/org/logstash/config/ir/graph/QueueVertexTest.java
index f446aaa3983..ca8fdad0dae 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/graph/QueueVertexTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/graph/QueueVertexTest.java
@@ -3,9 +3,6 @@
 import org.junit.Test;
 import org.logstash.common.IncompleteSourceWithMetadataException;
 
-/**
- * Created by andrewvc on 11/22/16.
- */
 public class QueueVertexTest {
     @Test
     public void testConstruction() {
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/graph/VertexTest.java b/logstash-core/src/test/java/org/logstash/config/ir/graph/VertexTest.java
index 8a16223ef20..05e5f3bb88b 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/graph/VertexTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/graph/VertexTest.java
@@ -6,9 +6,6 @@
 
 import static org.junit.Assert.*;
 
-/**
- * Created by andrewvc on 11/21/16.
- */
 public class VertexTest {
     @Test
     public void TestVertexBasics() throws InvalidIRException {
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/BreadthFirstTest.java b/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/BreadthFirstTest.java
index 96c0dc8ee19..3fa6dda6cf5 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/BreadthFirstTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/BreadthFirstTest.java
@@ -11,9 +11,6 @@
 import static org.hamcrest.CoreMatchers.is;
 import static org.hamcrest.MatcherAssert.assertThat;
 
-/**
- * Created by andrewvc on 1/5/17.
- */
 public class BreadthFirstTest {
     @Test
     public void testBFSBasic() throws InvalidIRException {
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/DepthFirstTest.java b/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/DepthFirstTest.java
index 42e26576c3c..80cad6584be 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/DepthFirstTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/DepthFirstTest.java
@@ -13,9 +13,6 @@
 
 import static junit.framework.TestCase.assertEquals;
 
-/**
- * Created by andrewvc on 1/5/17.
- */
 public class DepthFirstTest {
     Graph g = Graph.empty();
     final AtomicInteger visitCount = new AtomicInteger();
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/GraphDiffTest.java b/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/GraphDiffTest.java
index 4cfda61da99..576e416dc94 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/GraphDiffTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/GraphDiffTest.java
@@ -12,9 +12,6 @@
 import static org.junit.Assert.assertTrue;
 import static org.logstash.config.ir.IRHelpers.createTestVertex;
 
-/**
- * Created by andrewvc on 1/5/17.
- */
 public class GraphDiffTest {
     @Test
     public void testIdenticalGraphs() throws InvalidIRException {
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/ShortestPathTest.java b/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/ShortestPathTest.java
deleted file mode 100644
index f35111fe352..00000000000
--- a/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/ShortestPathTest.java
+++ /dev/null
@@ -1,38 +0,0 @@
-package org.logstash.config.ir.graph.algorithms;
-
-import org.junit.Test;
-import org.logstash.config.ir.InvalidIRException;
-import org.logstash.config.ir.graph.Graph;
-import org.logstash.config.ir.graph.Vertex;
-
-import java.util.Arrays;
-import java.util.List;
-
-import static org.hamcrest.CoreMatchers.is;
-import static org.hamcrest.MatcherAssert.assertThat;
-import static org.logstash.config.ir.IRHelpers.createTestVertex;
-
-/**
- * Created by andrewvc on 1/5/17.
- */
-public class ShortestPathTest {
-    @Test
-    public void testShortestPathBasic() throws InvalidIRException, ShortestPath.InvalidShortestPathArguments {
-        Graph g = Graph.empty();
-        Vertex v1 = createTestVertex("v1");
-        g.addVertex(v1);
-        Vertex v2 = createTestVertex("v2");
-        g.addVertex(v2);
-        Vertex v3 = createTestVertex("v3");
-        g.addVertex(v3);
-        Vertex v4 = createTestVertex("v4");
-        g.addVertex(v4);
-
-        g.chainVertices(v1, v2, v3, v4);
-        g.chainVertices(v2, v4);
-
-        List<Vertex> path = ShortestPath.shortestPath(v1, v4);
-        List<Vertex> expected = Arrays.asList(v1,v2,v4);
-        assertThat(path, is(expected));
-    }
-}
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/TopologicalSortTest.java b/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/TopologicalSortTest.java
index fc91eb21a9e..c1d9bd39642 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/TopologicalSortTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/graph/algorithms/TopologicalSortTest.java
@@ -12,9 +12,6 @@
 import static org.hamcrest.core.AnyOf.anyOf;
 import static org.hamcrest.core.Is.is;
 
-/**
- * Created by andrewvc on 1/7/17.
- */
 public class TopologicalSortTest {
     @Test(expected = InvalidIRException.class)
     public void testGraphCycleDetection() throws InvalidIRException {
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/imperative/DSLTest.java b/logstash-core/src/test/java/org/logstash/config/ir/imperative/DSLTest.java
index abd2b33ccbe..5131c873f1f 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/imperative/DSLTest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/imperative/DSLTest.java
@@ -10,9 +10,6 @@
 import static org.logstash.config.ir.PluginDefinition.Type.*;
 import static org.logstash.config.ir.IRHelpers.randMeta;
 
-/**
- * Created by andrewvc on 9/13/16.
- */
 public class DSLTest {
     @Test
     public void testDSLOnePluginEquality() throws IncompleteSourceWithMetadataException {
diff --git a/logstash-core/src/test/java/org/logstash/config/ir/imperative/ImperativeToGraphtest.java b/logstash-core/src/test/java/org/logstash/config/ir/imperative/ImperativeToGraphtest.java
index 9caea3ef901..109e2b003e0 100644
--- a/logstash-core/src/test/java/org/logstash/config/ir/imperative/ImperativeToGraphtest.java
+++ b/logstash-core/src/test/java/org/logstash/config/ir/imperative/ImperativeToGraphtest.java
@@ -11,9 +11,6 @@
 import static org.logstash.config.ir.IRHelpers.randMeta;
 import static org.logstash.config.ir.PluginDefinition.Type.*;
 
-/**
- * Created by andrewvc on 9/15/16.
- */
 public class ImperativeToGraphtest {
 
     @Test
