diff --git a/docsk8s/administering/ls-k8s-administering.asciidoc b/docsk8s/administering/ls-k8s-administering.asciidoc
new file mode 100644
index 00000000000..4ac2ad674ea
--- /dev/null
+++ b/docsk8s/administering/ls-k8s-administering.asciidoc
@@ -0,0 +1,9 @@
+[[ls-k8s-administering]]
+== Administering {ls} and Kubernetes
+++++
+<titleabbrev>Administering</titleabbrev>
+++++
+
+WARNING: This documentation is still in development and may be changed or removed in a future release.
+
+These pages describe the steps to take after you've gotten your system <<ls-k8s-setting-up,up and running>>. These include both routine tasks to manage and maintain your {ls} and Kubernetes resources, as well as recommended "hardening" steps, such as setting up security and external health monitoring, that prepare your environment for production.
diff --git a/docsk8s/administering/ls-k8s-logging.asciidoc b/docsk8s/administering/ls-k8s-logging.asciidoc
new file mode 100644
index 00000000000..010c464af71
--- /dev/null
+++ b/docsk8s/administering/ls-k8s-logging.asciidoc
@@ -0,0 +1,6 @@
+[[ls-k8s-logging]]
+=== {ls} logging
+
+WARNING: This documentation is still in development and may be changed or removed in a future release.
+
+Logging...
\ No newline at end of file
diff --git a/docsk8s/administering/ls-k8s-stack-monitoring.asciidoc b/docsk8s/administering/ls-k8s-stack-monitoring.asciidoc
new file mode 100644
index 00000000000..aa8c934451a
--- /dev/null
+++ b/docsk8s/administering/ls-k8s-stack-monitoring.asciidoc
@@ -0,0 +1,14 @@
+[[ls-k8s-stack-monitoring]]
+=== Set up stack monitoring
+
+WARNING: This documentation is still in development and may be changed or removed in a future release.
+
+In order to prepare your environment to be production ready, you'll need to set up secure communication between each of your Elastic resources.
+
+An important step to making your environment production ready is to configure stack monitoring. Monitoring logs and metrics data can be sent to an external resource, such as {ess} or {eck}, so that in the event that any components of your environment become unresponsive, your monitoring data is available.
+
+Follow these steps to configure monitoring:
+
+. Step 1
+. Step 2
+. Step 3
\ No newline at end of file
diff --git a/docsk8s/administering/ls-k8s-upgrade.asciidoc b/docsk8s/administering/ls-k8s-upgrade.asciidoc
new file mode 100644
index 00000000000..e16281e06f5
--- /dev/null
+++ b/docsk8s/administering/ls-k8s-upgrade.asciidoc
@@ -0,0 +1,6 @@
+[[ls-k8s-upgrade]]
+=== Upgrade {ls}
+
+WARNING: This documentation is still in development and may be changed or removed in a future release.
+
+We have a number of recommendations about how to upgrade {ls} in a production environment, so as to minimize and mitigate the impact of any potential downtime.
\ No newline at end of file
diff --git a/docsk8s/images/gs-cert-files.png b/docsk8s/images/gs-cert-files.png
new file mode 100644
index 00000000000..78dfae69250
Binary files /dev/null and b/docsk8s/images/gs-cert-files.png differ
diff --git a/docsk8s/images/gs-logstash-node-metrics.png b/docsk8s/images/gs-logstash-node-metrics.png
new file mode 100644
index 00000000000..71ab1db637f
Binary files /dev/null and b/docsk8s/images/gs-logstash-node-metrics.png differ
diff --git a/docsk8s/index.asciidoc b/docsk8s/index.asciidoc
new file mode 100644
index 00000000000..4fd13a893bb
--- /dev/null
+++ b/docsk8s/index.asciidoc
@@ -0,0 +1,64 @@
+[[logstash-and-kubernetes]]
+= Logstash and Kubernetes Reference
+
+include::{docs-root}/shared/versions/stack/{source_branch}.asciidoc[]
+include::{docs-root}/shared/attributes.asciidoc[]
+
+[[introduction]]
+== Introduction
+
+WARNING: This documentation is still in development and may be changed or removed in a future release.
+
+This guide helps you to run and work with {ls} in a Kubernetes environment.
+
+Are you trying out {ls} for the first time? We recommend beginning with our guide {logstash-ref}/getting-started-with-logstash.html[Getting Started with Logstash].
+
+If you're already familiar with Logstash, then it's time to try it out in Kubernetes. The <<ls-k8s-quick-start,Getting started with Logstash and Kubernetes>> demo guides you through the steps of configuring Logstash inside a running Kubernetes cluster.
+
+// Logstash and Kubernetes Quick start
+include::quick-start/ls-k8s-quick-start.asciidoc[]
+
+// List of sample configuration files and what they're used for
+include::quick-start/sample-configuration-files.asciidoc[]
+
+// Ship to an external resource
+include::quick-start/ls-k8s-external-resource.asciidoc[]
+
+// Setting up
+include::setting-up/ls-k8s-setting-up.asciidoc[]
+
+// Persistent storage requirements
+include::setting-up/ls-k8s-persistent-storage.asciidoc[]
+
+// Designing your installation based on plugin usage
+include::setting-up/ls-k8s-design-for-plugins.asciidoc[]
+
+// Sizing Logstash instances
+include::setting-up/ls-k8s-sizing.asciidoc[]
+
+// Secure your environment
+include::setting-up/ls-k8s-secure.asciidoc[]
+
+// Administering
+include::administering/ls-k8s-administering.asciidoc[]
+
+// Set up stack monitoring
+include::administering/ls-k8s-stack-monitoring.asciidoc[]
+
+// Upgrade Logstash
+include::administering/ls-k8s-upgrade.asciidoc[]
+
+// Logstash logging
+include::administering/ls-k8s-logging.asciidoc[]
+
+// Recipes
+include::ls-k8s-recipes.asciidoc[]
+
+// Troubleshooting
+include::troubleshooting/ls-k8s-troubleshooting.asciidoc[]
+
+// Common problems
+include::troubleshooting/ls-k8s-common-problems.asciidoc[]
+
+// Troubleshooting methods
+include::troubleshooting/ls-k8s-troubleshooting-methods.asciidoc[]
diff --git a/docsk8s/ls-k8s-recipes.asciidoc b/docsk8s/ls-k8s-recipes.asciidoc
new file mode 100644
index 00000000000..8a4c30d9191
--- /dev/null
+++ b/docsk8s/ls-k8s-recipes.asciidoc
@@ -0,0 +1,17 @@
+[[ls-k8s-recipes]]
+== Recipes
+
+WARNING: This documentation is still in development and may be changed or removed in a future release.
+
+We've compiled a number of recipes to support common use cases for running Logstash in Kubernetes.
+
+Refer to the following sections in the Logstash GitHub repo for sample files that you can use as templates. Details for each recipe can be found in the associated README files.
+
+link:https://www.google.com[Recipe name]::
+Brief description.
+
+link:https://www.google.com[Another recipe name]::
+Brief description.
+
+link:https://www.google.com[Yet another recipe name]::
+Brief description.
\ No newline at end of file
diff --git a/docsk8s/quick-start/ls-k8s-external-resource.asciidoc b/docsk8s/quick-start/ls-k8s-external-resource.asciidoc
new file mode 100644
index 00000000000..eb3f9cd3d56
--- /dev/null
+++ b/docsk8s/quick-start/ls-k8s-external-resource.asciidoc
@@ -0,0 +1,8 @@
+[[ls-k8s-external-resource]]
+=== Ship to an external resource
+
+WARNING: This documentation is still in development and may be changed or removed in a future release.
+
+The <<ls-k8s-quick-start,{ls} and Kubernetes quick start>> guide demonstrates how to send Kubernetes monitoring data into an Elasticsearch cluster in your Kubernetes environment.
+
+As a next step, this guide describes how to send your data from Logstash to an external resource, in this case an Elasticsearch cluster located either on your local system or on the Cloud, using {ess}.
\ No newline at end of file
diff --git a/docsk8s/quick-start/ls-k8s-quick-start.asciidoc b/docsk8s/quick-start/ls-k8s-quick-start.asciidoc
new file mode 100644
index 00000000000..b387f0dba71
--- /dev/null
+++ b/docsk8s/quick-start/ls-k8s-quick-start.asciidoc
@@ -0,0 +1,202 @@
+[[ls-k8s-quick-start]]
+== Quick start
+
+WARNING: This documentation is still in development and may be changed or removed in a future release.
+
+This guide describes how to set up {ls} to deliver Kubernetes logs to {es}. The logs will be monitored by Filebeat, processed through a Logstash pipeline, and then delivered into an {es} cluster in the Kubernetes environment.
+
+This section includes the following topics:
+
+* <<qs-prerequisites>>
+* <<qs-set-up>>
+* <<qs-generate-certificate>>
+* <<qs-create-elastic-stack>>
+* <<qs-view-monitoring-data>>
+* <<qs-tidy-up>>
+* <<qs-learn-more>>
+
+[float]
+[[qs-prerequisites]]
+=== Prerequisites
+
+Before you start, there are a few things you'll need:
+
+. A running Kubernetes cluster - For single node testing we recommend using link:https://minikube.sigs.k8s.io[Minikube], which allows you to easily run a single node Kubernetes cluster on your system. Check the `Getting Started` section for install and set up instructions.
+. A link:https://github.com/elastic/logstash/blob/feature/kubernetes/k8s/recipes/logstash-k8s-quickstart.zip[small zip file] of config files - Download and expand this archive into an empty directory on your local system. The files are described in <<sample-configuration-files,Sample configuration files>>.
+
+[float]
+[[qs-set-up]]
+=== Set up your environment
+
+Let's start by getting your Minikube Kubernetes cluster up and running:
+
+[source,sh]
+--
+minikube start
+--
+
+Install the Elastic custom resource definition (CRD) files, as well as the `elastic-operator` custom controller, which will be used to manage the Elastic resources in your cluster:
+
+[source,sh]
+--
+kubectl create -f https://download.elastic.co/downloads/eck/2.4.0/crds.yaml
+kubectl apply -f https://download.elastic.co/downloads/eck/2.4.0/operator.yaml
+--
+
+NOTE: The Elastic CRDs and ECK operator can also be set up using Elastic Helm charts, available at link:https://helm.elastic.co[https://helm.elastic.co].
+
+Check the Kubernetes pods status to confirm that the `elastic-operator` pod is running:
+
+[source,sh]
+--
+kubectl get pods
+--
+
+[source,sh]
+--
+NAME                 READY   STATUS    RESTARTS      AGE
+elastic-operator-0   1/1     Running   4 (12m ago)   13d
+--
+
+[float]
+[[qs-generate-certificate]]
+=== Generate certificate files
+
+To enable secure communication throughout your Kubernetes resources, run the sample script to generate the CA certificate files. Details about these files are in <<sample-configuration-files,Sample configuration files>>.
+
+[source,sh]
+--
+./cert/generate_cert.sh
+--
+
+.**Expand to view output**
+[%collapsible]
+====
+[source,sh]
+--
+Generating RSA private key, 2048 bit long modulus
+.......................+++
+...........................................................................+++
+e is 65537 (0x10001)
+Generating RSA private key, 2048 bit long modulus
+..............................................+++
+.............................................+++
+e is 65537 (0x10001)
+Signature ok
+subject=/C=EU/ST=NA/O=Elastic/CN=ServerHostName
+Getting CA Private Key
+Generating RSA private key, 2048 bit long modulus
+............+++
+.......................................................................................................................................+++
+e is 65537 (0x10001)
+Signature ok
+subject=/C=EU/ST=NA/O=Elastic/CN=ClientName
+Getting CA Private Key
+--
+====
+
+Your `logstash-k8s-gs/cert` folder should now contain a set of certificate files, including `client` certificates for Filebeat and Metricbeat, and `server` certificates for Logstash. 
+
+The parent `logstash-k8s-gs` directory also has a new `001-secret.yaml` resources file that stores a hash of the client and server certificates.
+
+image::./images/gs-cert-files.png[generated CA certificate files]
+
+[float]
+[[qs-create-elastic-stack]]
+=== Create an Elastic Stack
+
+Now that your environment and certificates are set up, it's time to create an Elastic Stack. Run the following command to deploy the example using the sample CRDs:
+
+[source,sh]
+--
+kubectl apply -f .
+--
+
+The resources are created:
+
+[source,sh]
+--
+elasticsearch.elasticsearch.k8s.elastic.co/demo created
+configmap/logstash-pipeline created
+configmap/logstash-config created
+secret/logstash-beats-tls created
+deployment.apps/logstash created
+service/logstash created
+horizontalpodautoscaler.autoscaling/logstash created
+beat.beat.k8s.elastic.co/demo created
+beat.beat.k8s.elastic.co/demo configured
+kibana.kibana.k8s.elastic.co/demo created
+--
+
+[source,sh]
+--
+kubectl get pods
+--
+
+The pods are starting up. You may need to wait a minute or two for all of them to be ready.
+
+[source,sh]
+--
+NAME                                    READY   STATUS    RESTARTS       AGE
+demo-beat-filebeat-7f4d97f69f-qkkbl     1/1     Running   0              42s
+demo-beat-metricbeat-59f4b68cc7-9zrrn   1/1     Running   0              39s
+demo-es-default-0                       1/1     Running   0              41s
+demo-kb-d7f585494-vbf6s                 1/1     Running   0              39s
+elastic-operator-0                      1/1     Running   4 (164m ago)   13d
+logstash-7974b9ccb9-jd5xl               1/1     Running   0              42s
+--
+
+[float]
+[[qs-view-monitoring-data]]
+=== View the stack monitoring data
+
+Now that your stack monitoring data is flowing, let's access it in {kib}. 
+
+First, enable port forwarding for the {kib} service on port `5601`. Open a second shell window and run the following:
+
+[source,sh]
+--
+kubectl port-forward service/demo-kb-http 5601
+--
+
+Then, open up a web browser at address `https://localhost:5601`. Depending on your browser you may need to accept the site certificate.
+
+Log in to {kib} using the `elastic` username and password. To obtain the password, run:
+
+[source,sh]
+--
+kubectl get secret demo-es-elastic-user -o=jsonpath='{.data.elastic}' | base64 --decode; echo
+--
+
+Open the {kib} main menu and select **Management**, then **Stack Monitoring**.
+
+Select the {ls} **Overview**, and under the **Nodes** tab select the link for the {ls} node.
+
+image::./images/gs-logstash-node-metrics.png[{ls} metrics data in {kib}]
+
+That's it! The Kubernetes API server metrics data is flowing through {ls} into {es} and {kib}. You can monitor the JVM Heap, CPU Utilization, and System Load data as it updates in real time.
+
+[float]
+[[qs-tidy-up]]
+=== Tidy up
+
+After finishing with this demo, you can run the following command to remove all of the created resources:
+ 
+[source,sh]
+--
+kubectl delete service,pods,deployment,hpa,configmap,secret,beat,elasticsearch,kibana -l app=logstash-demo
+--
+
+[float]
+[[qs-learn-more]]
+=== Learn more
+
+Now that you're familiar with how to get a {ls} monitoring setup running in your Kubernetes environment, here are a few suggested next steps:
+
+* <<ls-k8s-external-resource>>
+* <<ls-k8s-design-for-plugins>>
+* <<ls-k8s-sizing>>
+* <<ls-k8s-secure>>
+* <<ls-k8s-stack-monitoring>>
+
+As well, we have a variety of <<ls-k8s-recipes,recipes>> that you can use as templates to configure an environment to match your specific use case.
diff --git a/docsk8s/quick-start/sample-configuration-files.asciidoc b/docsk8s/quick-start/sample-configuration-files.asciidoc
new file mode 100644
index 00000000000..28ff1519c4e
--- /dev/null
+++ b/docsk8s/quick-start/sample-configuration-files.asciidoc
@@ -0,0 +1,102 @@
+[[sample-configuration-files]]
+=== Sample configuration files
+
+WARNING: This documentation is still in development and may be changed or removed in a future release.
+
+These configuration files are used in the <<ls-k8s-quick-start,{ls} and Kubernetes quick start>>. You can use them as templates when you configure Logstash together with the rest of the Elastic Stack in a Kubernetes environment.
+
+You can download the files together as a link:https://github.com/elastic/logstash/blob/main/docsk8s/sample-files/logstash-k8s-qs.zip[zip archive].
+
+`cert/generate_cert.sh`::
+Generates the `ca.crt`, `client.key`, `client.crt`, `server.key`, and `server.pkcs8.key` used to establish a secure connection between Filebeat and Logstash. The certificates and keys are all contained in the `001-secret.yaml` file that is generated when you run `generate_cert.sh`.
+
+`cert/openssl.conf`::
+The OpenSSL Generated Server Certificate used for TLS communication between resources.
+
+`000-elasticsearch.yaml`::
+Configures a single {es} instance to receive output data from {ls}. 
+
+`001-configmap.yaml`::
+This contains the Logstash settings and pipeline configuration:
++
+[source,yaml]
+--
+  logstash.conf: |
+    input {
+      beats {
+        port => "5044"
+        ssl => true
+        ssl_certificate_authorities => ["/usr/share/logstash/config/ca.crt"]
+        ssl_certificate => "/usr/share/logstash/config/server.crt"
+        ssl_key => "/usr/share/logstash/config/server.pkcs8.key"
+        ssl_verify_mode => "force_peer"
+      }
+    }
+    output {
+      elasticsearch { 
+        hosts => ["https://demo-es-http:9200"]
+        index => "kube-apiserver-%{+YYYY.MM.dd}"
+        cacert => "/usr/share/logstash/config/es_ca.crt"
+        user => 'elastic'
+        password => '${ELASTICSEARCH_PASSWORD}'
+      }
+    }
+--
+
+`002-deployment.yaml`::
+Contains the configuration definition for {ls}, including memory and CPU resources, the container ports, timeout settings, and similar. This file also includes the mount details for the secrets used in a secure setup:
++
+[source,yaml]
+--
+  volumes:
+    - name: es-certs
+      secret:
+        secretName: demo-es-http-certs-public
+    - name: es-user
+      secret:
+        secretName: demo-es-elastic-user
+    - name: logstash-beats-tls
+      secret:
+        secretName: logstash-beats-tls
+--
++
+* `logstash-beats-tls` is the secret containing the `ca.crt`, `server.crt` and `server.pkcs8.key` to input data from Filebeat and Metricbeat.
+* `demo-es-http-certs-public` contains the CA certificate to output data to {es}. Refer to link:https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-tls-certificates.html[TLS certificates] in the {eck} Guide for details.
+* The {es} password is taken from `demo-es-elastic-user` and passed to the Logstash pipeline as an `ELASTICSEARCH_PASSWORD` environment variable. Refer to link:https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-request-elasticsearch-endpoint.html[Access the {es} endpoint] in the {eck} Guide for details.
+
+`003-service.yaml`::
+Sets the TCP ports for the Filebeat and Metricbeat services.
+
+`004-hpa.yaml`::
+The Horizontal Pod Autoscaler is used to configure the horizontal scaling details for CPU and memory for the {ls} instance.
+
+`005-filebeat.yaml`::
+Includes the mount path for the generated certificate and key files, the secrets file `logstash-beats-tls`, and a {ls} output configuration as follows:
++
+[source,yaml]
+--
+    output.logstash:
+      hosts:
+        - "logstash:5044"
+      ssl.certificate_authorities: ["/usr/share/filebeat/ca.crt"]
+      ssl.certificate: "/usr/share/filebeat/client.crt"
+      ssl.key: "/usr/share/filebeat/client.key"
+--
+
+`006-metricbeat.yaml`::
+Enables the {metricbeat} {ls} module and sets it to collect metrics data from `logstash:9600`:
++
+[source,yaml]
+--
+  - module: logstash
+    metricsets:
+      - node
+      - node_stats
+    period: 10s
+    hosts:
+      - logstash:9600
+    xpack.enabled: true
+--
+
+`007-kibana`::
+Configures a single {kib} instance to visualize the logs and metrics data. 
diff --git a/docsk8s/sample-files/logstash-k8s-qs.zip b/docsk8s/sample-files/logstash-k8s-qs.zip
new file mode 100644
index 00000000000..38b1acc76ef
Binary files /dev/null and b/docsk8s/sample-files/logstash-k8s-qs.zip differ
diff --git a/docsk8s/setting-up/ls-k8s-design-for-plugins.asciidoc b/docsk8s/setting-up/ls-k8s-design-for-plugins.asciidoc
new file mode 100644
index 00000000000..34090955548
--- /dev/null
+++ b/docsk8s/setting-up/ls-k8s-design-for-plugins.asciidoc
@@ -0,0 +1,46 @@
+[[ls-k8s-design-for-plugins]]
+=== Design your installation based on plugin usage
+
+WARNING: This documentation is still in development and may be changed or removed in a future release.
+
+Our recommandations for your {ls} Kubernetes installation vary depending on the types of plugins that you plan to use, and their respective requirements.
+
+[[designing-pull-based]]
+==== Pull-based plugins
+
+Designing recommendations for pull-based plugins depend on whether or not the plugins support autoscaling.
+
+**Autoscaling**
+
+These plugins can autoscale by tracking work done externally to {ls}. Examples include Kafka, Azure Event Hubs in certain configurations, and others.
+
+Recipe link.
+
+**Non-autoscaling**
+
+Description.
+
+Recipe link.
+
+[[designing-push-based]]
+==== Push-based plugins
+
+Designing recommendations for push-based plugins depend on whether or not the plugins support autoscaling.
+
+**Autoscaling**
+
+These plugins support autoscaling. Examples include Beats, HTTP, and others.
+
+Recipe link.
+
+**Non-autoscaling**
+
+These plugins do not support autoscaling, either because they have a dependency on `sincedb`, or because ...
+
+Recipe link.
+
+**Other resources required**
+
+Certain plugins require additional resources to be available in order for them to run. Examples include the JDBC and JMS plugins, which require JARs to be available on on `classpath`.
+
+Recipe link.
\ No newline at end of file
diff --git a/docsk8s/setting-up/ls-k8s-persistent-storage.asciidoc b/docsk8s/setting-up/ls-k8s-persistent-storage.asciidoc
new file mode 100644
index 00000000000..fbdaee2ef33
--- /dev/null
+++ b/docsk8s/setting-up/ls-k8s-persistent-storage.asciidoc
@@ -0,0 +1,16 @@
+[[ls-k8s-persistent-storage]]
+=== Persistent storage requirements
+
+WARNING: This documentation is still in development and may be changed or removed in a future release.
+
+Some snazzy intro text...
+
+[[persistent-storage-pq-dlq]]
+==== PQ and DLQ for {ls} core
+
+There a few factors to help you decide whether to configure your {ls} core instance to use either a persistent queue {PQ} or a dead letter queue (DLQ).
+
+[[persistent-storage-plugins]]
+==== Plugins that require local storage to track work done
+
+Description...
diff --git a/docsk8s/setting-up/ls-k8s-secure.asciidoc b/docsk8s/setting-up/ls-k8s-secure.asciidoc
new file mode 100644
index 00000000000..f7f42bb7001
--- /dev/null
+++ b/docsk8s/setting-up/ls-k8s-secure.asciidoc
@@ -0,0 +1,23 @@
+[[ls-k8s-secure]]
+=== Secure your environment
+
+WARNING: This documentation is still in development and may be changed or removed in a future release.
+
+In order to prepare your environment to be production ready, you'll need to set up secure communication between each of your Elastic resources.
+
+[[security-set-up-tls]]
+==== Setting up TLS
+
+It's important to set up transport layer security (TLS) to ensure safe communication between the Elastic Stack components running in Kubernetes.
+
+[[security-eck-secrets]]
+
+==== Using secrets from an ECK installation
+Description.
+
+[[security-logstash-keystore]]
+
+==== Using the {ls} keystore
+Description.
+
+
diff --git a/docsk8s/setting-up/ls-k8s-setting-up.asciidoc b/docsk8s/setting-up/ls-k8s-setting-up.asciidoc
new file mode 100644
index 00000000000..17f664cf2e3
--- /dev/null
+++ b/docsk8s/setting-up/ls-k8s-setting-up.asciidoc
@@ -0,0 +1,11 @@
+[[ls-k8s-setting-up]]
+== Setting up {ls} and Kubernetes
+++++
+<titleabbrev>Setting up</titleabbrev>
+++++
+
+WARNING: This documentation is still in development and may be changed or removed in a future release.
+
+The following topics describe important design considerations for your {ls} setup, as well as the steps to get your {ls} and Kubernetes environment up and running.
+
+Note that before putting your environment into production, you should also follow our guidelines for <<ls-k8s-administering,administering your system>>.
diff --git a/docsk8s/setting-up/ls-k8s-sizing.asciidoc b/docsk8s/setting-up/ls-k8s-sizing.asciidoc
new file mode 100644
index 00000000000..194aed27273
--- /dev/null
+++ b/docsk8s/setting-up/ls-k8s-sizing.asciidoc
@@ -0,0 +1,16 @@
+[[ls-k8s-sizing]]
+=== Sizing {ls} instances
+
+WARNING: This documentation is still in development and may be changed or removed in a future release.
+
+We have a few recommended heuristics to help you determine the optimal memory and queue sizings for your {ls} instances.
+
+[[sizing-jvm-memory-pods]]
+==== Memory settings on JVMs and pods
+
+Description...
+
+[[sizing-pd-dlq]]
+==== Sizing your {ls} PQ and DLQ
+
+Description...
diff --git a/docsk8s/troubleshooting/ls-k8s-common-problems.asciidoc b/docsk8s/troubleshooting/ls-k8s-common-problems.asciidoc
new file mode 100644
index 00000000000..8052602e102
--- /dev/null
+++ b/docsk8s/troubleshooting/ls-k8s-common-problems.asciidoc
@@ -0,0 +1,25 @@
+[[ls-k8s-common-problems]]
+=== Common problems
+
+Following are some suggested resolutions to problems that you may encounter when running Logstash in a Kubernetes environment.
+
+* <<problem-01>>
+* <<problem-02>>
+
+[float]
+[[problem-01]]
+=== Logstash keeps restarting
+When you check the running Kubernetes pods status, {ls} shows continual restarts. 
+
+This can be caused by...
+
+To resolve the problem...
+
+[float]
+[[problem-02]]
+=== Logstash stops with an OOM errors
+The {ls} pod continues to stop running due to an out of memory (OOM) error.
+
+This can be caused by...
+
+To resolve the problem...
diff --git a/docsk8s/troubleshooting/ls-k8s-troubleshooting-methods.asciidoc b/docsk8s/troubleshooting/ls-k8s-troubleshooting-methods.asciidoc
new file mode 100644
index 00000000000..2517e3698ed
--- /dev/null
+++ b/docsk8s/troubleshooting/ls-k8s-troubleshooting-methods.asciidoc
@@ -0,0 +1,35 @@
+[[ls-k8s-troubleshooting-methods]]
+=== Troubleshooting methods
+
+There are a number of methods that you can use to diagnose the state of your Logstash and Kubernetes system, both in the event of any problems, and as part of a day-to-day approach to ensuring that everything is running as expected.
+
+<<ls-k8s-checking-resources>>
+<<ls-k8s-viewing-logs>>
+<<ls-k8s-connecting-to-a-container>>
+
+[float]
+[[ls-k8s-checking-resources]]
+=== Checking resources
+
+You can use the standard Kubernetes `get` and `describe` commands to quickly gather details about any resources in your Logstash and Kubernetes environment.
+
+Examples...
+
+
+[float]
+[[ls-k8s-viewing-logs]]
+=== Viewing logs
+
+Following is a list of logs and locations that can be useful to monitor the health of your environment.
+
+Log1::
+Description.
+
+Log2::
+Description.
+
+[float]
+[[ls-k8s-connecting-to-a-container]]
+=== Connecting to a container
+
+At times, you may need to connect directly from your command shell into Logstash and other Kubernetes resources.
diff --git a/docsk8s/troubleshooting/ls-k8s-troubleshooting.asciidoc b/docsk8s/troubleshooting/ls-k8s-troubleshooting.asciidoc
new file mode 100644
index 00000000000..ba05f526358
--- /dev/null
+++ b/docsk8s/troubleshooting/ls-k8s-troubleshooting.asciidoc
@@ -0,0 +1,12 @@
+[[ls-k8s-troubleshooting]]
+== Troubleshooting {ls} and Kubernetes
+++++
+<titleabbrev>Troubleshooting</titleabbrev>
+++++
+
+
+
+WARNING: This documentation is still in development and may be changed or removed in a future release.
+
+As you set up and run Logstash in Kubernetes you may at occasionally run into problems. The pages below describe how to resolve some of the more typical problems that may come up, as well as steps that you can use to diagnose issues and assess how your system is running in general.
+
