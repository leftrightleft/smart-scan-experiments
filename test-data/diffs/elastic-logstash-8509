diff --git a/logstash-core/lib/logstash/agent.rb b/logstash-core/lib/logstash/agent.rb
index d59a3127c77..6a8b98d0316 100644
--- a/logstash-core/lib/logstash/agent.rb
+++ b/logstash-core/lib/logstash/agent.rb
@@ -83,12 +83,12 @@ def execute
     @thread = Thread.current # this var is implicitly used by Stud.stop?
     logger.debug("starting agent")
 
-    start_webserver
-
     transition_to_running
 
     converge_state_and_update
 
+    start_webserver
+
     if auto_reload?
       # `sleep_then_run` instead of firing the interval right away
       Stud.interval(@reload_interval, :sleep_then_run => true) do
diff --git a/qa/integration/specs/01_logstash_bin_smoke_spec.rb b/qa/integration/specs/01_logstash_bin_smoke_spec.rb
index b3647f00ebd..26e85aa57df 100644
--- a/qa/integration/specs/01_logstash_bin_smoke_spec.rb
+++ b/qa/integration/specs/01_logstash_bin_smoke_spec.rb
@@ -53,7 +53,9 @@
       FileUtils.mkdir_p(tmp_data_path)
       @ls1.spawn_logstash("-f", config1, "--path.data", tmp_data_path)
       sleep(0.1) until File.exist?(file_config1) && File.size(file_config1) > 0 # Everything is started successfully at this point
-      expect(is_port_open?(9600)).to be true
+      try(num_retries) do
+        expect(is_port_open?(9600)).to be(true)
+      end
 
       @ls2.spawn_logstash("-f", config2, "--path.data", tmp_data_path)
       try(num_retries) do
@@ -71,7 +73,9 @@
       FileUtils.mkdir_p(tmp_data_path_2)
       @ls1.spawn_logstash("-f", config1, "--path.data", tmp_data_path_1)
       sleep(0.1) until File.exist?(file_config1) && File.size(file_config1) > 0 # Everything is started successfully at this point
-      expect(is_port_open?(9600)).to be true
+      try(num_retries) do
+        expect(is_port_open?(9600)).to be(true)
+      end
 
       @ls2.spawn_logstash("-f", config2, "--path.data", tmp_data_path_2)
       sleep(0.1) until File.exist?(file_config2) && File.size(file_config2) > 0 # Everything is started successfully at this point
@@ -82,7 +86,9 @@
       if @ls2.settings.feature_flag != "persistent_queues"
         @ls1.spawn_logstash("-f", config1)
         sleep(0.1) until File.exist?(file_config1) && File.size(file_config1) > 0 # Everything is started successfully at this point
-        expect(is_port_open?(9600)).to be true
+        try(num_retries) do
+          expect(is_port_open?(9600)).to be(true)
+        end
 
         puts "will try to start the second LS instance on 9601"
 
@@ -92,7 +98,9 @@
         FileUtils.mkdir_p(tmp_data_path)
         @ls2.spawn_logstash("-f", config2, "--path.data", tmp_data_path)
         sleep(0.1) until File.exist?(file_config2) && File.size(file_config2) > 0 # Everything is started successfully at this point
-        expect(is_port_open?(9601)).to be true
+        try(num_retries) do
+          expect(is_port_open?(9601)).to be(true)
+        end
         expect(@ls1.process_id).not_to eq(@ls2.process_id)
       else
         # Make sure that each instance use a different `path.data`
@@ -104,7 +112,9 @@
 
         @ls1.spawn_logstash("--path.settings", path, "-f", config1)
         sleep(0.1) until File.exist?(file_config1) && File.size(file_config1) > 0 # Everything is started successfully at this point
-        expect(is_port_open?(9600)).to be true
+        try(num_retries) do
+          expect(is_port_open?(9600)).to be(true)
+        end
 
         puts "will try to start the second LS instance on 9601"
 
@@ -116,7 +126,9 @@
         IO.write(File.join(path, "logstash.yml"), YAML.dump(settings))
         @ls2.spawn_logstash("--path.settings", path, "-f", config2)
         sleep(0.1) until File.exist?(file_config2) && File.size(file_config2) > 0 # Everything is started successfully at this point
-        expect(is_port_open?(9601)).to be true
+        try(num_retries) do
+          expect(is_port_open?(9601)).to be(true)
+        end
 
         expect(@ls1.process_id).not_to eq(@ls2.process_id)
       end
diff --git a/qa/integration/specs/reload_config_spec.rb b/qa/integration/specs/reload_config_spec.rb
index 3c88a5ee753..a3dabfa3287 100644
--- a/qa/integration/specs/reload_config_spec.rb
+++ b/qa/integration/specs/reload_config_spec.rb
@@ -39,9 +39,11 @@
     end
     
     # check metrics
-    result = logstash_service.monitoring_api.event_stats
-    expect(result["in"]).to eq(1)
-    expect(result["out"]).to eq(1)
+    try(retry_attempts) do
+      result = logstash_service.monitoring_api.event_stats
+      expect(result["in"]).to eq(1)
+      expect(result["out"]).to eq(1)
+    end
     
     # do a reload
     logstash_service.reload_config(initial_config_file, reload_config_file)
@@ -58,9 +60,11 @@
     end
     
     # check instance metrics. It should not be reset
-    instance_event_stats = logstash_service.monitoring_api.event_stats
-    expect(instance_event_stats["in"]).to eq(2)
-    expect(instance_event_stats["out"]).to eq(2)
+    try(retry_attempts) do
+      instance_event_stats = logstash_service.monitoring_api.event_stats
+      expect(instance_event_stats["in"]).to eq(2)
+      expect(instance_event_stats["out"]).to eq(2)
+    end
 
     # check pipeline metrics. It should be reset
     pipeline_event_stats = logstash_service.monitoring_api.pipeline_stats("main")["events"]
diff --git a/qa/integration/specs/settings_spec.rb b/qa/integration/specs/settings_spec.rb
index 959f968ad13..e622904cb4b 100644
--- a/qa/integration/specs/settings_spec.rb
+++ b/qa/integration/specs/settings_spec.rb
@@ -117,9 +117,11 @@ def overwrite_settings(settings)
     end
 
     # now check monitoring API to validate
-    node_info = @logstash_service.monitoring_api.node_info
-    expect(node_info["pipelines"]["main"]["workers"]).to eq(workers)
-    expect(node_info["pipelines"]["main"]["batch_size"]).to eq(batch_size)
+    try(num_retries) do
+      node_info = @logstash_service.monitoring_api.node_info
+      expect(node_info["pipelines"]["main"]["workers"]).to eq(workers)
+      expect(node_info["pipelines"]["main"]["batch_size"]).to eq(batch_size)
+    end
   end
 
   it "start on a different HTTP port" do
