diff --git a/CHANGELOG b/CHANGELOG
index 456711dc2f5..158e9d5f073 100644
--- a/CHANGELOG
+++ b/CHANGELOG
@@ -7,6 +7,8 @@
   ## filters
   - deprecation: the --grok-patterns-path flag is deprecated and will now
     warn you if you use it. (LOGSTASH-803)
+  - feature: grok: Adds tag_on_failure setting so you can prevent grok from
+    tagging events on failure. (#328, patch by Neil Prosser)
 
   ## outputs
   - fix bug in mongo output that would fail to load bson_java support
diff --git a/CONTRIBUTORS b/CONTRIBUTORS
index 718158ed903..d251fc56a9e 100644
--- a/CONTRIBUTORS
+++ b/CONTRIBUTORS
@@ -62,6 +62,7 @@ Contributors:
 * Louis Zuckerman (semiosis)
 * Richard Pijnenburg (electrical)
 * James Turnbull (jamesturnbull)
+* Neil Prosser (neilprosser)
 
 Note: If you've sent me patches, bug reports, or otherwise contributed to
 logstash, and you aren't on the list above and want to be, please let me know
diff --git a/lib/logstash/filters/grok.rb b/lib/logstash/filters/grok.rb
index d4284c86451..638219ba30a 100644
--- a/lib/logstash/filters/grok.rb
+++ b/lib/logstash/filters/grok.rb
@@ -202,6 +202,10 @@ class LogStash::Filters::Grok < LogStash::Filters::Base
   # containing that one value.
   config :singles, :validate => :boolean, :default => false
 
+  # If true, ensure the '_grokparsefailure' tag is present when there has been no
+  # successful match
+  config :tag_on_failure, :validate => :boolean, :default => true
+
   # TODO(sissel): Add this feature?
   # When disabled, any pattern that matches the entire string will not be set.
   # This is useful if you have named patterns like COMBINEDAPACHELOG that will
@@ -276,7 +280,7 @@ def register
       # Skip known config names
       next if (RESERVED + ["match", "patterns_dir",
                "drop_if_match", "named_captures_only", "pattern",
-               "keep_empty_captures", "break_on_match", "singles"]).include?(field)
+               "keep_empty_captures", "break_on_match", "singles", "tag_on_failure"]).include?(field)
       patterns = [patterns] if patterns.is_a?(String)
 
       if !@patterns.include?(field)
@@ -388,7 +392,7 @@ def filter(event)
       end # event[field]
     end # patterns.each
 
-    if !matched
+    if !matched && @tag_on_failure
       # Tag this event if we can't parse it. We can use this later to
       # reparse+reindex logs if we improve the patterns given .
       event.tags << "_grokparsefailure" unless event.tags.include?("_grokparsefailure")
diff --git a/spec/filters/grok.rb b/spec/filters/grok.rb
index b3548a794f9..5215b7b87e5 100644
--- a/spec/filters/grok.rb
+++ b/spec/filters/grok.rb
@@ -235,4 +235,23 @@
       insist { subject.tags }.include?("one_point_oh")
     end
   end
+
+  describe "tagging on failure" do
+    config <<-CONFIG
+      filter {
+        grok {
+          pattern => "matchme %{NUMBER:fancy}"
+          tag_on_failure => false
+        }
+      }
+    CONFIG
+
+    sample "matchme 1234" do
+      reject { subject["@tags"] }.include?("_grokparsefailure")
+    end
+
+    sample "this will not be matched" do
+      reject { subject["@tags"] }.include?("_grokparsefailure")
+    end
+  end
 end
