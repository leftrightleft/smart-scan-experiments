diff --git a/lib/logstash/inputs/xmpp.rb b/lib/logstash/inputs/xmpp.rb
index fee932dff90..03d67d25a98 100644
--- a/lib/logstash/inputs/xmpp.rb
+++ b/lib/logstash/inputs/xmpp.rb
@@ -8,7 +8,7 @@
 # XMPP, or you can use it for PubSub or general message passing for logstash to
 # logstash.
 class LogStash::Inputs::Xmpp < LogStash::Inputs::Base
-  
+
   config_name "xmpp"
   milestone 2
 
@@ -28,6 +28,10 @@ class LogStash::Inputs::Xmpp < LogStash::Inputs::Base
   # the host on the user/identity is used. (foo.com for user@foo.com)
   config :host, :validate => :string
 
+  # The xmpp server's port to connect to. This is optional. If you omit this setting,
+  # the default port (5222) is used.
+  config :port, :validate => :number, :default => 5222
+
   # Set to true to enable greater debugging in XMPP. Useful for debugging
   # network/authentication erros.
   config :debug, :validate => :boolean, :default => false, :deprecated => "Use the logstash --debug flag for this instead."
@@ -38,7 +42,7 @@ def register
     Jabber::debug = true if @debug || @logger.debug?
 
     @client = Jabber::Client.new(Jabber::JID.new(@user))
-    @client.connect(@host) # it is ok if host is nil
+    @client.connect(@host, @port) # it is ok if host is nil
     @client.auth(@password.value)
     @client.send(Jabber::Presence.new.set_type(:available))
 
@@ -68,7 +72,7 @@ def run(queue)
       if msg.body != nil
         @codec.decode(msg.body) do |event|
           decorate(event)
-          # Maybe "from" should just be a hash: 
+          # Maybe "from" should just be a hash:
           # { "node" => ..., "domain" => ..., "resource" => ... }
           event["from"] = "#{msg.from.node}@#{msg.from.domain}/#{msg.from.resource}"
           queue << event
diff --git a/lib/logstash/outputs/xmpp.rb b/lib/logstash/outputs/xmpp.rb
index 93040111892..0b7a78eeb8f 100644
--- a/lib/logstash/outputs/xmpp.rb
+++ b/lib/logstash/outputs/xmpp.rb
@@ -27,6 +27,10 @@ class LogStash::Outputs::Xmpp < LogStash::Outputs::Base
   # the host on the user/identity is used. (foo.com for user@foo.com)
   config :host, :validate => :string
 
+  # The xmpp server's port to connect to. This is optional. If you omit this setting,
+  # the default port (5222) is used.
+  config :port, :validate => :number, :default => 5222
+
   # The message to send. This supports dynamic strings like %{host}
   config :message, :validate => :string, :required => true
 
@@ -53,7 +57,7 @@ def register
   def connect
     Jabber::debug = true
     client = Jabber::Client.new(Jabber::JID.new(@user))
-    client.connect(@host)
+    client.connect(@host, @port)
     client.auth(@password.value)
     return client
   end # def connect
