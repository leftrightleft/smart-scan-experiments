diff --git a/logstash-core/benchmarks/src/main/java/org/logstash/benchmark/EventSerializationBenchmark.java b/logstash-core/benchmarks/src/main/java/org/logstash/benchmark/EventSerializationBenchmark.java
index 24359e7ca3b..182cbe07503 100644
--- a/logstash-core/benchmarks/src/main/java/org/logstash/benchmark/EventSerializationBenchmark.java
+++ b/logstash-core/benchmarks/src/main/java/org/logstash/benchmark/EventSerializationBenchmark.java
@@ -17,10 +17,6 @@
 import org.openjdk.jmh.annotations.Setup;
 import org.openjdk.jmh.annotations.State;
 import org.openjdk.jmh.annotations.Warmup;
-import org.openjdk.jmh.runner.Runner;
-import org.openjdk.jmh.runner.RunnerException;
-import org.openjdk.jmh.runner.options.Options;
-import org.openjdk.jmh.runner.options.OptionsBuilder;
 import org.openjdk.jmh.util.NullOutputStream;
 
 @Warmup(iterations = 3, time = 500, timeUnit = TimeUnit.MILLISECONDS)
@@ -67,12 +63,4 @@ public final void serializeJson() throws Exception {
             SINK.writeBytes(EVENT.toJson());
         }
     }
-
-    public static void main(final String... args) throws RunnerException {
-        Options opt = new OptionsBuilder()
-            .include(EventSerializationBenchmark.class.getSimpleName())
-            .forks(2)
-            .build();
-        new Runner(opt).run();
-    }
 }
diff --git a/logstash-core/benchmarks/src/main/java/org/logstash/benchmark/EventSprintfBenchmark.java b/logstash-core/benchmarks/src/main/java/org/logstash/benchmark/EventSprintfBenchmark.java
index e794dd07f97..a55e39230c5 100644
--- a/logstash-core/benchmarks/src/main/java/org/logstash/benchmark/EventSprintfBenchmark.java
+++ b/logstash-core/benchmarks/src/main/java/org/logstash/benchmark/EventSprintfBenchmark.java
@@ -15,10 +15,6 @@
 import org.openjdk.jmh.annotations.State;
 import org.openjdk.jmh.annotations.Warmup;
 import org.openjdk.jmh.infra.Blackhole;
-import org.openjdk.jmh.runner.Runner;
-import org.openjdk.jmh.runner.RunnerException;
-import org.openjdk.jmh.runner.options.Options;
-import org.openjdk.jmh.runner.options.OptionsBuilder;
 
 @Warmup(iterations = 3, time = 100, timeUnit = TimeUnit.MILLISECONDS)
 @Measurement(iterations = 10, time = 100, timeUnit = TimeUnit.MILLISECONDS)
@@ -49,12 +45,4 @@ public final void sprintfField(final Blackhole blackhole) throws Exception {
             blackhole.consume(EVENT.sprintf(i + "-%{[Foo]}"));
         }
     }
-
-    public static void main(final String... args) throws RunnerException {
-        Options opt = new OptionsBuilder()
-            .include(EventSprintfBenchmark.class.getSimpleName())
-            .forks(2)
-            .build();
-        new Runner(opt).run();
-    }
 }
diff --git a/logstash-core/benchmarks/src/main/java/org/logstash/benchmark/QueueRWBenchmark.java b/logstash-core/benchmarks/src/main/java/org/logstash/benchmark/QueueRWBenchmark.java
index 2c2ff08245c..6cccdd76437 100644
--- a/logstash-core/benchmarks/src/main/java/org/logstash/benchmark/QueueRWBenchmark.java
+++ b/logstash-core/benchmarks/src/main/java/org/logstash/benchmark/QueueRWBenchmark.java
@@ -34,10 +34,6 @@
 import org.openjdk.jmh.annotations.TearDown;
 import org.openjdk.jmh.annotations.Warmup;
 import org.openjdk.jmh.infra.Blackhole;
-import org.openjdk.jmh.runner.Runner;
-import org.openjdk.jmh.runner.RunnerException;
-import org.openjdk.jmh.runner.options.Options;
-import org.openjdk.jmh.runner.options.OptionsBuilder;
 
 @Warmup(iterations = 3, time = 100, timeUnit = TimeUnit.MILLISECONDS)
 @Measurement(iterations = 10, time = 100, timeUnit = TimeUnit.MILLISECONDS)
@@ -153,14 +149,6 @@ public final void readFromArrayBlockingQueue(final Blackhole blackhole) throws E
         future.get();
     }
 
-    public static void main(final String... args) throws RunnerException {
-        Options opt = new OptionsBuilder()
-            .include(QueueRWBenchmark.class.getSimpleName())
-            .forks(2)
-            .build();
-        new Runner(opt).run();
-    }
-
     private static Settings settings(final boolean persisted) {
         final PageIOFactory pageIOFactory;
         final CheckpointIOFactory checkpointIOFactory;
diff --git a/logstash-core/benchmarks/src/main/java/org/logstash/benchmark/QueueWriteBenchmark.java b/logstash-core/benchmarks/src/main/java/org/logstash/benchmark/QueueWriteBenchmark.java
index a81bf3429ae..610445d7b55 100644
--- a/logstash-core/benchmarks/src/main/java/org/logstash/benchmark/QueueWriteBenchmark.java
+++ b/logstash-core/benchmarks/src/main/java/org/logstash/benchmark/QueueWriteBenchmark.java
@@ -24,10 +24,6 @@
 import org.openjdk.jmh.annotations.State;
 import org.openjdk.jmh.annotations.TearDown;
 import org.openjdk.jmh.annotations.Warmup;
-import org.openjdk.jmh.runner.Runner;
-import org.openjdk.jmh.runner.RunnerException;
-import org.openjdk.jmh.runner.options.Options;
-import org.openjdk.jmh.runner.options.OptionsBuilder;
 
 @Warmup(iterations = 3, time = 100, timeUnit = TimeUnit.MILLISECONDS)
 @Measurement(iterations = 10, time = 100, timeUnit = TimeUnit.MILLISECONDS)
@@ -74,14 +70,6 @@ public final void pushToPersistedQueue() throws Exception {
         }
     }
 
-    public static void main(final String... args) throws RunnerException {
-        Options opt = new OptionsBuilder()
-            .include(QueueWriteBenchmark.class.getSimpleName())
-            .forks(2)
-            .build();
-        new Runner(opt).run();
-    }
-
     private static Settings settings() {
         return SettingsImpl.fileSettingsBuilder(Files.createTempDir().getPath())
             .capacity(256 * 1024 * 1024)
