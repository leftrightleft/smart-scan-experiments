diff --git a/lib/logstash/inputs/base.rb b/lib/logstash/inputs/base.rb
index 9cdc9773737..9e1cfa79291 100644
--- a/lib/logstash/inputs/base.rb
+++ b/lib/logstash/inputs/base.rb
@@ -25,8 +25,7 @@ class LogStash::Inputs::Base < LogStash::Plugin
   # when sent to another Logstash server.
   config :type, :validate => :string
 
-  # Set this to true to enable debugging on an input.
-  config :debug, :validate => :boolean, :default => false
+  config :debug, :validate => :boolean, :default => false, :deprecated => "This setting no longer has any effect. In past releases, it existed, but almost no plugin made use of it."
 
   # The format of input data (plain, json, json_event)
   config :format, :validate => ["plain", "json", "json_event", "msgpack_event"], :deprecated => "You should use the newer 'codec' setting instead."
diff --git a/lib/logstash/inputs/exec.rb b/lib/logstash/inputs/exec.rb
index 4ae1d483a23..f554b42e595 100644
--- a/lib/logstash/inputs/exec.rb
+++ b/lib/logstash/inputs/exec.rb
@@ -19,7 +19,7 @@ class LogStash::Inputs::Exec < LogStash::Inputs::Base
   default :codec, "plain"
   
   # Set this to true to enable debugging on an input.
-  config :debug, :validate => :boolean, :default => false
+  config :debug, :validate => :boolean, :default => false, :deprecated => "This setting was never used by this plugin. It will be removed soon."
   
   # Command to run. For example, "uptime"
   config :command, :validate => :string, :required => true
@@ -38,7 +38,7 @@ def run(queue)
     hostname = Socket.gethostname
     loop do
       start = Time.now
-      @logger.info("Running exec", :command => @command) if @debug
+      @logger.info? && @logger.info("Running exec", :command => @command)
       out = IO.popen(@command)
       # out.read will block until the process finishes.
       @codec.decode(out.read) do |event|
@@ -49,10 +49,8 @@ def run(queue)
       end
       
       duration = Time.now - start
-      if @debug
-        @logger.info("Command completed", :command => @command,
-                     :duration => duration)
-      end
+      @logger.info? && @logger.info("Command completed", :command => @command,
+                                    :duration => duration)
 
       # Sleep for the remainder of the interval, or 0 if the duration ran
       # longer than the interval.
diff --git a/lib/logstash/inputs/rabbitmq.rb b/lib/logstash/inputs/rabbitmq.rb
index e9eebfdb4e7..41924738874 100644
--- a/lib/logstash/inputs/rabbitmq.rb
+++ b/lib/logstash/inputs/rabbitmq.rb
@@ -44,7 +44,7 @@ class LogStash::Inputs::RabbitMQ < LogStash::Inputs::Threadable
   config :verify_ssl, :validate => :boolean, :default => false
 
   # Enable or disable logging
-  config :debug, :validate => :boolean, :default => false
+  config :debug, :validate => :boolean, :default => false, :deprecated => "Use the logstash --debug flag for this instead."
 
 
 
diff --git a/lib/logstash/inputs/rabbitmq/bunny.rb b/lib/logstash/inputs/rabbitmq/bunny.rb
index 2819a9113ca..cbf5d114e47 100644
--- a/lib/logstash/inputs/rabbitmq/bunny.rb
+++ b/lib/logstash/inputs/rabbitmq/bunny.rb
@@ -22,7 +22,7 @@ def register
                                 Bunny::DEFAULT_PASSWORD
                               end
 
-      @settings[:log_level] = if @debug
+      @settings[:log_level] = if @debug || @logger.debug?
                                 :debug
                               else
                                 :error
diff --git a/lib/logstash/inputs/stomp.rb b/lib/logstash/inputs/stomp.rb
index 4db7b542e86..5c33b588890 100644
--- a/lib/logstash/inputs/stomp.rb
+++ b/lib/logstash/inputs/stomp.rb
@@ -30,7 +30,7 @@ class LogStash::Inputs::Stomp < LogStash::Inputs::Base
   config :vhost, :validate => :string, :default => nil
 
   # Enable debugging output?
-  config :debug, :validate => :boolean, :default => false
+  config :debug, :validate => :boolean, :default => false, :deprecated => "This setting was never used by this plugin. It will be removed soon."
 
   private
   def connect
diff --git a/lib/logstash/inputs/xmpp.rb b/lib/logstash/inputs/xmpp.rb
index f87308477b1..fee932dff90 100644
--- a/lib/logstash/inputs/xmpp.rb
+++ b/lib/logstash/inputs/xmpp.rb
@@ -30,12 +30,12 @@ class LogStash::Inputs::Xmpp < LogStash::Inputs::Base
 
   # Set to true to enable greater debugging in XMPP. Useful for debugging
   # network/authentication erros.
-  config :debug, :validate => :boolean, :default => false
+  config :debug, :validate => :boolean, :default => false, :deprecated => "Use the logstash --debug flag for this instead."
 
   public
   def register
     require 'xmpp4r' # xmpp4r gem
-    Jabber::debug = true if @debug
+    Jabber::debug = true if @debug || @logger.debug?
 
     @client = Jabber::Client.new(Jabber::JID.new(@user))
     @client.connect(@host) # it is ok if host is nil
diff --git a/lib/logstash/outputs/elasticsearch_river.rb b/lib/logstash/outputs/elasticsearch_river.rb
index 34a6783d024..534316371e3 100644
--- a/lib/logstash/outputs/elasticsearch_river.rb
+++ b/lib/logstash/outputs/elasticsearch_river.rb
@@ -20,8 +20,6 @@ class LogStash::Outputs::ElasticSearchRiver < LogStash::Outputs::Base
   config_name "elasticsearch_river"
   milestone 2
 
-  config :debug, :validate => :boolean, :default => false
-
   # The index to write events to. This can be dynamic using the %{foo} syntax.
   # The default value will partition your indeces by day so you can more easily
   # delete old data or only search specific date ranges.
@@ -113,7 +111,7 @@ def prepare_river
       "vhost" => [@vhost],
       "durable" => [@durable.to_s],
       "persistent" => [@persistent.to_s],
-      "debug" => [@debug.to_s],
+      "debug" => [@logger.debug?.to_s],
     }.reject {|k,v| v.first.nil?}
     @mq = LogStash::Outputs::RabbitMQ.new(params)
     @mq.register
diff --git a/lib/logstash/outputs/graphite.rb b/lib/logstash/outputs/graphite.rb
index 14a920e0a72..5f5664c4017 100644
--- a/lib/logstash/outputs/graphite.rb
+++ b/lib/logstash/outputs/graphite.rb
@@ -50,7 +50,7 @@ class LogStash::Outputs::Graphite < LogStash::Outputs::Base
   config :exclude_metrics, :validate => :array, :default => [ "%\{[^}]+\}" ]
 
   # Enable debug output
-  config :debug, :validate => :boolean, :default => false
+  config :debug, :validate => :boolean, :default => false, :deprecated => "This setting was never used by this plugin. It will be removed soon."
 
   # Defines format of the metric string. The placeholder '*' will be
   # replaced with the name of the actual metric.
diff --git a/lib/logstash/outputs/opentsdb.rb b/lib/logstash/outputs/opentsdb.rb
index eb1d1a6c78f..cb7a16a2135 100644
--- a/lib/logstash/outputs/opentsdb.rb
+++ b/lib/logstash/outputs/opentsdb.rb
@@ -10,8 +10,8 @@ class LogStash::Outputs::Opentsdb < LogStash::Outputs::Base
   config_name "opentsdb"
   milestone 1
 
-  # Enable debugging. Tries to pretty-print the entire event object.
-  config :debug, :validate => :boolean
+  # Enable debugging.
+  config :debug, :validate => :boolean, :default => false, :deprecated => "This setting was never used by this plugin. It will be removed soon."
 
   # The address of the opentsdb server.
   config :host, :validate => :string, :default => "localhost"
diff --git a/lib/logstash/outputs/rabbitmq.rb b/lib/logstash/outputs/rabbitmq.rb
index 8789618c1a4..7b52baf2a7a 100644
--- a/lib/logstash/outputs/rabbitmq.rb
+++ b/lib/logstash/outputs/rabbitmq.rb
@@ -43,7 +43,7 @@ class LogStash::Outputs::RabbitMQ < LogStash::Outputs::Base
   config :verify_ssl, :validate => :boolean, :default => false
 
   # Enable or disable logging
-  config :debug, :validate => :boolean, :default => false
+  config :debug, :validate => :boolean, :default => false, :deprecated => "Use the logstash --debug flag for this instead."
 
 
 
diff --git a/lib/logstash/outputs/rabbitmq/bunny.rb b/lib/logstash/outputs/rabbitmq/bunny.rb
index 0a2b65098eb..3a59234d23b 100644
--- a/lib/logstash/outputs/rabbitmq/bunny.rb
+++ b/lib/logstash/outputs/rabbitmq/bunny.rb
@@ -88,7 +88,7 @@ def connect
                                 Bunny::DEFAULT_PASSWORD
                               end
 
-      @settings[:log_level] = if @debug
+      @settings[:log_level] = if @debug || @logger.debug?
                                 :debug
                               else
                                 :error
diff --git a/lib/logstash/outputs/riemann.rb b/lib/logstash/outputs/riemann.rb
index cb6fa32f707..899c0ec26eb 100644
--- a/lib/logstash/outputs/riemann.rb
+++ b/lib/logstash/outputs/riemann.rb
@@ -69,7 +69,7 @@ class LogStash::Outputs::Riemann < LogStash::Outputs::Base
 
   #
   # Enable debugging output?
-  config :debug, :validate => :boolean, :default => false
+  config :debug, :validate => :boolean, :default => false, :deprecated => "This setting was never used by this plugin. It will be removed soon."
 
   public
   def register
diff --git a/lib/logstash/outputs/statsd.rb b/lib/logstash/outputs/statsd.rb
index 638f6270d0c..9ef95f5c5cb 100644
--- a/lib/logstash/outputs/statsd.rb
+++ b/lib/logstash/outputs/statsd.rb
@@ -62,11 +62,8 @@ class LogStash::Outputs::Statsd < LogStash::Outputs::Base
   # The sample rate for the metric
   config :sample_rate, :validate => :number, :default => 1
 
-  # The final metric sent to statsd will look like the following (assuming defaults)
-  # logstash.sender.file_name
-  #
-  # Enable debugging output?
-  config :debug, :validate => :boolean, :default => false
+  # Enable debugging.
+  config :debug, :validate => :boolean, :default => false, :deprecated => "This setting was never used by this plugin. It will be removed soon."
 
   public
   def register
diff --git a/lib/logstash/outputs/stdout.rb b/lib/logstash/outputs/stdout.rb
index 34afbc5ec4e..7df70f5d872 100644
--- a/lib/logstash/outputs/stdout.rb
+++ b/lib/logstash/outputs/stdout.rb
@@ -13,29 +13,8 @@ class LogStash::Outputs::Stdout < LogStash::Outputs::Base
   
   default :codec, "line"
 
-  # Enable debugging. Tries to pretty-print the entire event object.
-  config :debug, :validate => :boolean, :default => false
-
-  # Debug output format: ruby (default), json
-  config :debug_format, :default => "ruby", :validate => ["ruby", "dots", "json"], :deprecated => true
-
-  # The message to emit to stdout.
-  config :message, :validate => :string, :deprecated => "You can use the 'line' codec instead. For example: output { stdout { codec => line { format => \"%{somefield} your message\" } } }"
-
   public
   def register
-    if @debug
-      require "logstash/codecs/rubydebug"
-      require "logstash/codecs/dots"
-      require "logstash/codecs/json"
-      case @debug_format
-        when "ruby"; @codec = LogStash::Codecs::RubyDebug.new
-        when "json"; @codec = LogStash::Codecs::JSON.new
-        when "dots"; @codec = LogStash::Codecs::Dots.new
-      end
-    elsif @message
-      @codec = LogStash::Codecs::Line.new("format" => @message)
-    end
     @codec.on_event do |event|
       $stdout.write(event)
     end
diff --git a/lib/logstash/outputs/stomp.rb b/lib/logstash/outputs/stomp.rb
index bf892663f99..32730c1dc8f 100644
--- a/lib/logstash/outputs/stomp.rb
+++ b/lib/logstash/outputs/stomp.rb
@@ -27,8 +27,8 @@ class LogStash::Outputs::Stomp < LogStash::Outputs::Base
   # The vhost to use
   config :vhost, :validate => :string, :default => nil
 
-  # Enable debugging output?
-  config :debug, :validate => :boolean, :default => false
+  # Enable debugging output.
+  config :debug, :validate => :boolean, :default => false, :deprecated => "This setting was never used by this plugin. It will be removed soon."
 
   private
   def connect
