diff --git a/lib/logstash/plugin.rb b/lib/logstash/plugin.rb
index 5723d7c3ddd..76d3eeb43fb 100644
--- a/lib/logstash/plugin.rb
+++ b/lib/logstash/plugin.rb
@@ -111,10 +111,10 @@ def clear_watchdog
 
   public
   def inspect
-    if !@config.nil?
-      description = @config \
-        .select { |k,v| !v.nil? && (v.respond_to?(:empty?) && !v.empty?) } \
-        .collect { |k,v| "#{k}=>#{v.inspect}" }
+    if !@params.nil?
+      description = @params
+        .reject { |k, v| v.nil? || (v.respond_to?(:empty?) && v.empty?) }
+        .collect { |k, v| "#{k}=>#{v.inspect}" }
       return "<#{self.class.name} #{description.join(", ")}>"
     else
       return "<#{self.class.name} --->"
diff --git a/spec/core/plugin_spec.rb b/spec/core/plugin_spec.rb
index 8c3089fcf81..432af8f5e58 100644
--- a/spec/core/plugin_spec.rb
+++ b/spec/core/plugin_spec.rb
@@ -29,6 +29,22 @@ class LogStash::Filters::LadyGaga < LogStash::Filters::Base
     expect(LogStash::Plugin.lookup("filter", "lady_gaga")).to eq(LogStash::Filters::LadyGaga)
   end
 
+  describe "#inspect" do
+    class LogStash::Filters::MyTestFilter < LogStash::Filters::Base
+      config_name "param1"
+      config :num, :validate => :number, :default => 20
+      config :str, :validate => :string, :default => "test"
+    end
+    subject { LogStash::Filters::MyTestFilter.new("num" => 1, "str" => "hello") }
+
+    it "should print the class of the filter" do
+      expect(subject.inspect).to match(/^<LogStash::Filters::MyTestFilter/)
+    end
+    it "should list config options and values" do
+      expect(subject.inspect).to match(/num=>1, str=>"hello"/)
+    end
+  end
+
   context "when validating the plugin version" do
     let(:plugin_name) { 'logstash-filter-stromae' }
     subject do
