diff --git a/logstash-core-event/lib/logstash/string_interpolation.rb b/logstash-core-event/lib/logstash/string_interpolation.rb
index 643160c27c3..13044e4c005 100644
--- a/logstash-core-event/lib/logstash/string_interpolation.rb
+++ b/logstash-core-event/lib/logstash/string_interpolation.rb
@@ -125,7 +125,9 @@ def evaluate(event)
       when Hash
         LogStash::Json.dump(value)
       else
-        value
+        # Make sure we dont work on the refence of the value
+        # The Java Event implementation was always returning a string.
+        "#{value}"
       end
     end
   end
diff --git a/logstash-core-event/spec/logstash/event_spec.rb b/logstash-core-event/spec/logstash/event_spec.rb
index 6d8181ed8f8..5b5079cafd9 100644
--- a/logstash-core-event/spec/logstash/event_spec.rb
+++ b/logstash-core-event/spec/logstash/event_spec.rb
@@ -1,5 +1,6 @@
 # encoding: utf-8
 require "spec_helper"
+require "logstash/util/decorators"
 require "json"
 
 describe LogStash::Event do
@@ -73,6 +74,22 @@
     end
 
     context "#sprintf" do
+      it "should not return a String reference" do
+        data = "NOT-A-REFERENCE"
+        event = LogStash::Event.new({ "reference" => data })
+        LogStash::Util::Decorators.add_fields({"reference_test" => "%{reference}"}, event, "dummy-plugin")
+        data.downcase!
+        expect(event["reference_test"]).not_to eq(data)
+      end
+
+      it "should not return a Fixnum reference" do
+        data = 1
+        event = LogStash::Event.new({ "reference" => data })
+        LogStash::Util::Decorators.add_fields({"reference_test" => "%{reference}"}, event, "dummy-plugin")
+        data += 41
+        expect(event["reference_test"]).to eq("1")
+      end
+
       it "should report a unix timestamp for %{+%s}" do
         expect(subject.sprintf("%{+%s}")).to eq("1356998400")
       end
