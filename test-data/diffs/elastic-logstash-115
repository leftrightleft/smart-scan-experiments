diff --git a/lib/logstash/outputs/amqp.rb b/lib/logstash/outputs/amqp.rb
index a33c62843c8..7b91bfb38d4 100644
--- a/lib/logstash/outputs/amqp.rb
+++ b/lib/logstash/outputs/amqp.rb
@@ -30,6 +30,9 @@ class LogStash::Outputs::Amqp < LogStash::Outputs::Base
   # The name of the exchange
   config :name, :validate => :string, :required => true
 
+  # The name of the queue
+  config :queue_name, :validate => :string, :default => nil 
+
   # Key to route to by default. Defaults to 'logstash'
   #
   # * Routing keys are ignored on topic exchanges.
@@ -95,7 +98,14 @@ def connect
                   :durable => @durable)
     @exchange = @bunny.exchange(@name, :type => @exchange_type.to_sym, :durable => @durable)
 
-    @logger.debug("Binding exchange", :name => @name, :key => @key)
+    # Queue name is optional
+    if !@queue_name.nil?
+        @logger.debug("Declaring queue", :queue_name => @queue_name)
+        @queue = @bunny.queue(@queue_name, :durable => @durable)
+
+        @logger.debug("Binding exchange", :name => @name, :key => @key)
+        @queue.bind(@exchange, :key => @key)
+    end
   end # def connect
 
   public
diff --git a/lib/logstash/outputs/elasticsearch_river.rb b/lib/logstash/outputs/elasticsearch_river.rb
index f63619a0360..e0d926bed98 100644
--- a/lib/logstash/outputs/elasticsearch_river.rb
+++ b/lib/logstash/outputs/elasticsearch_river.rb
@@ -76,6 +76,12 @@ class LogStash::Outputs::ElasticSearchRiver < LogStash::Outputs::Base
   # AMQP persistence setting
   config :persistent, :validate => :boolean, :default => true
 
+  # AMQP Enable or disable SSL
+  config :ssl, :validate => :boolean, :default => false
+
+  # AMQP Validate SSL certificate
+  config :verify_ssl, :validate => :boolean, :default => false
+
   public
   def register
     # TODO(sissel): find a better way of declaring where the elasticsearch
@@ -106,6 +112,8 @@ def prepare_river
       "durable" => [@durable.to_s],
       "persistent" => [@persistent.to_s],
       "debug" => [@debug.to_s],
+      "ssl" => [@ssl.to_s],
+      "verify_ssl" => [@verify_ssl.to_s],
     }.reject {|k,v| v.first.nil?}
     @mq = LogStash::Outputs::Amqp.new(params)
     @mq.register
