diff --git a/logstash-core/src/main/java/org/logstash/ConvertedList.java b/logstash-core/src/main/java/org/logstash/ConvertedList.java
index a3c4695243c..870528c88bf 100644
--- a/logstash-core/src/main/java/org/logstash/ConvertedList.java
+++ b/logstash-core/src/main/java/org/logstash/ConvertedList.java
@@ -9,6 +9,8 @@
 
 public final class ConvertedList extends ArrayList<Object> {
 
+    private static final long serialVersionUID = 1396291343595074238L;
+
     private ConvertedList(final int size) {
         super(size);
     }
diff --git a/logstash-core/src/main/java/org/logstash/ConvertedMap.java b/logstash-core/src/main/java/org/logstash/ConvertedMap.java
index 932273de179..66592bccc12 100644
--- a/logstash-core/src/main/java/org/logstash/ConvertedMap.java
+++ b/logstash-core/src/main/java/org/logstash/ConvertedMap.java
@@ -8,6 +8,8 @@
 
 public final class ConvertedMap extends HashMap<String, Object> {
 
+    private static final long serialVersionUID = -4651798808586901122L;
+
     private ConvertedMap(final int size) {
         super((size << 2) / 3 + 2);
     }
diff --git a/logstash-core/src/main/java/org/logstash/DLQEntry.java b/logstash-core/src/main/java/org/logstash/DLQEntry.java
index fd44dc53415..db524ab4e32 100644
--- a/logstash-core/src/main/java/org/logstash/DLQEntry.java
+++ b/logstash-core/src/main/java/org/logstash/DLQEntry.java
@@ -19,14 +19,12 @@
 
 package org.logstash;
 
-import org.logstash.ackedqueue.Queueable;
-
 import java.io.IOException;
-import java.io.Serializable;
 import java.nio.ByteBuffer;
+import org.logstash.ackedqueue.Queueable;
 
 
-public class DLQEntry implements Cloneable, Serializable, Queueable {
+public class DLQEntry implements Cloneable, Queueable {
 
     private final Event event;
     private final String pluginType;
diff --git a/logstash-core/src/main/java/org/logstash/LockException.java b/logstash-core/src/main/java/org/logstash/LockException.java
index fad548440d4..1da4469cd7e 100644
--- a/logstash-core/src/main/java/org/logstash/LockException.java
+++ b/logstash-core/src/main/java/org/logstash/LockException.java
@@ -3,6 +3,8 @@
 import java.io.IOException;
 
 public class LockException extends IOException {
+    private static final long serialVersionUID = 4924559998318165488L;
+
     public LockException(String message) {
         super(message);
     }
@@ -10,4 +12,4 @@ public LockException(String message) {
     public LockException(String message, Throwable cause) {
         super(message, cause);
     }
-}
\ No newline at end of file
+}
diff --git a/logstash-core/src/main/java/org/logstash/Rubyfier.java b/logstash-core/src/main/java/org/logstash/Rubyfier.java
index a23b65c314b..96e81e6aa55 100644
--- a/logstash-core/src/main/java/org/logstash/Rubyfier.java
+++ b/logstash-core/src/main/java/org/logstash/Rubyfier.java
@@ -34,7 +34,7 @@ public static IRubyObject deep(Ruby runtime, final Object input) {
         try {
             return BiValues.newBiValue(input).rubyValue(runtime);
         } catch (IllegalArgumentException e) {
-            Class cls = input.getClass();
+            Class<?> cls = input.getClass();
             throw new IllegalArgumentException(String.format(ERR_TEMPLATE, cls.getName(), cls.getSimpleName()));
         }
     }
@@ -50,7 +50,7 @@ private static RubyArray deepList(Ruby runtime, final List list) {
 
     private static RubyHash deepMap(Ruby runtime, final Map<?, ?> map) {
         RubyHash hash = RubyHash.newHash(runtime);
-        for (Map.Entry entry : map.entrySet()) {
+        for (Map.Entry<?, ?> entry : map.entrySet()) {
             // Note: RubyHash.put calls JavaUtil.convertJavaToUsableRubyObject on keys and values
             hash.put(entry.getKey(), deep(runtime, entry.getValue()));
         }
diff --git a/logstash-core/src/main/java/org/logstash/Valuefier.java b/logstash-core/src/main/java/org/logstash/Valuefier.java
index 2b47379c2ca..ae233be3d74 100644
--- a/logstash-core/src/main/java/org/logstash/Valuefier.java
+++ b/logstash-core/src/main/java/org/logstash/Valuefier.java
@@ -35,7 +35,7 @@ private static Object convertJavaProxy(JavaProxy jp) {
         try {
             return BiValues.newBiValue(jp);
         } catch (IllegalArgumentException e) {
-            Class cls = obj.getClass();
+            final Class<?> cls = obj.getClass();
             throw new IllegalArgumentException(String.format(PROXY_ERR_TEMPLATE, cls.getName(), cls.getSimpleName(), obj.getClass().getName()), e);
         }
     }
@@ -44,7 +44,7 @@ public static Object convertNonCollection(Object o) {
         try {
             return BiValues.newBiValue(o);
         } catch (IllegalArgumentException e) {
-            Class cls = o.getClass();
+            final Class<?> cls = o.getClass();
             throw new IllegalArgumentException(String.format(ERR_TEMPLATE, cls.getName(), cls.getSimpleName()), e);
         }
     }
diff --git a/logstash-core/src/main/java/org/logstash/ackedqueue/Queue.java b/logstash-core/src/main/java/org/logstash/ackedqueue/Queue.java
index 9a122d3d402..64ec027a1ae 100644
--- a/logstash-core/src/main/java/org/logstash/ackedqueue/Queue.java
+++ b/logstash-core/src/main/java/org/logstash/ackedqueue/Queue.java
@@ -114,7 +114,7 @@ private Queue(String dirPath, int pageCapacity, long maxBytes, CheckpointIO chec
 
         // retrieve the deserialize method
         try {
-            Class[] cArg = new Class[1];
+            final Class<?>[] cArg = new Class[1];
             cArg[0] = byte[].class;
             this.deserializeMethod = this.elementClass.getDeclaredMethod("deserialize", cArg);
         } catch (NoSuchMethodException e) {
diff --git a/logstash-core/src/main/java/org/logstash/ackedqueue/ext/JrubyAckedBatchExtLibrary.java b/logstash-core/src/main/java/org/logstash/ackedqueue/ext/JrubyAckedBatchExtLibrary.java
index c1a751d3c58..7565c89687f 100644
--- a/logstash-core/src/main/java/org/logstash/ackedqueue/ext/JrubyAckedBatchExtLibrary.java
+++ b/logstash-core/src/main/java/org/logstash/ackedqueue/ext/JrubyAckedBatchExtLibrary.java
@@ -33,8 +33,9 @@ public IRubyObject allocate(Ruby runtime, RubyClass rubyClass) {
         clazz.defineAnnotatedMethods(RubyAckedBatch.class);
     }
 
-    @JRubyClass(name = "AckedBatch", parent = "Object")
+    @JRubyClass(name = "AckedBatch")
     public static class RubyAckedBatch extends RubyObject {
+        private static final long serialVersionUID = -3118949118637372130L;
         private Batch batch;
 
         public RubyAckedBatch(Ruby runtime, RubyClass klass) {
diff --git a/logstash-core/src/main/java/org/logstash/ackedqueue/io/MemoryCheckpointIO.java b/logstash-core/src/main/java/org/logstash/ackedqueue/io/MemoryCheckpointIO.java
index fbcc7a22ac4..00e41efaace 100644
--- a/logstash-core/src/main/java/org/logstash/ackedqueue/io/MemoryCheckpointIO.java
+++ b/logstash-core/src/main/java/org/logstash/ackedqueue/io/MemoryCheckpointIO.java
@@ -28,7 +28,7 @@ public MemoryCheckpointIO(String dirPath) {
     public Checkpoint read(String fileName) throws IOException {
 
         Checkpoint cp = null;
-        Map<String, Checkpoint> ns = this.sources.get(dirPath);
+        Map<String, Checkpoint> ns = sources.get(dirPath);
         if (ns != null) {
            cp = ns.get(fileName);
         }
@@ -45,17 +45,17 @@ public Checkpoint write(String fileName, int pageNum, int firstUnackedPageNum, l
 
     @Override
     public void write(String fileName, Checkpoint checkpoint) throws IOException {
-        Map<String, Checkpoint> ns = this.sources.get(dirPath);
+        Map<String, Checkpoint> ns = sources.get(dirPath);
         if (ns == null) {
             ns = new HashMap<>();
-            this.sources.put(this.dirPath, ns);
+            sources.put(this.dirPath, ns);
         }
         ns.put(fileName, checkpoint);
     }
 
     @Override
     public void purge(String fileName) {
-        Map<String, Checkpoint> ns = this.sources.get(dirPath);
+        Map<String, Checkpoint> ns = sources.get(dirPath);
         if (ns != null) {
            ns.remove(fileName);
         }
@@ -63,7 +63,7 @@ public void purge(String fileName) {
 
     @Override
     public void purge() {
-        this.sources.remove(this.dirPath);
+        sources.remove(this.dirPath);
     }
 
     // @return the head page checkpoint file name
diff --git a/logstash-core/src/main/java/org/logstash/common/IncompleteSourceWithMetadataException.java b/logstash-core/src/main/java/org/logstash/common/IncompleteSourceWithMetadataException.java
index c6c0c895051..61fb7f956b1 100644
--- a/logstash-core/src/main/java/org/logstash/common/IncompleteSourceWithMetadataException.java
+++ b/logstash-core/src/main/java/org/logstash/common/IncompleteSourceWithMetadataException.java
@@ -6,6 +6,8 @@
  * Created by andrewvc on 6/12/17.
  */
 public class IncompleteSourceWithMetadataException extends InvalidIRException {
+    private static final long serialVersionUID = 456422097113787583L;
+
     public IncompleteSourceWithMetadataException(String message) {
         super(message);
     }
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/Vertex.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/Vertex.java
index c2a7b104527..4abd07f897c 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/Vertex.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/Vertex.java
@@ -42,6 +42,8 @@ public Vertex(SourceWithMetadata sourceWithMetadata, String explicitId) {
     public abstract Vertex copy();
 
     public static class InvalidEdgeTypeException extends InvalidIRException {
+        private static final long serialVersionUID = -2707379453144995223L;
+
         public InvalidEdgeTypeException(String s) {
             super(s);
         }
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/ShortestPath.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/ShortestPath.java
index eb56f181e14..c847560a2b6 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/ShortestPath.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/ShortestPath.java
@@ -13,6 +13,7 @@
  */
 public class ShortestPath {
     static class InvalidShortestPathArguments extends Exception {
+        private static final long serialVersionUID = -1493537067800744231L;
         private final Collection<Vertex> invalidVertices;
 
         public InvalidShortestPathArguments(Collection<Vertex> invalidVertices) {
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/TopologicalSort.java b/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/TopologicalSort.java
index a3fed642594..0e7be11959f 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/TopologicalSort.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/graph/algorithms/TopologicalSort.java
@@ -11,6 +11,8 @@
  */
 public class TopologicalSort {
     public static class UnexpectedGraphCycleError extends Exception {
+        private static final long serialVersionUID = 1778155790783320839L;
+
         UnexpectedGraphCycleError(Graph g) {
             super("Graph has cycles, is not a DAG! " + g);
         }
