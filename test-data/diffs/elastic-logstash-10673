diff --git a/logstash-core/src/main/java/org/logstash/plugins/outputs/Stdout.java b/logstash-core/src/main/java/org/logstash/plugins/outputs/Stdout.java
index 20e998d270b..c124fbf4c15 100644
--- a/logstash-core/src/main/java/org/logstash/plugins/outputs/Stdout.java
+++ b/logstash-core/src/main/java/org/logstash/plugins/outputs/Stdout.java
@@ -20,7 +20,7 @@
 public class Stdout implements Output {
 
     public static final PluginConfigSpec<Codec> CODEC_CONFIG =
-            PluginConfigSpec.codecSetting("codec", "java-line");
+            PluginConfigSpec.codecSetting("codec", "java_line");
 
     private Codec codec;
     private OutputStream outputStream;
@@ -57,7 +57,7 @@ public void output(final Collection<Event> events) {
                 do {
                     encodeCompleted = codec.encode(e, encodeBuffer);
                     outputStream.write(encodeBuffer.array(), encodeBuffer.position(), encodeBuffer.limit());
-                    encodeBuffer.flip();
+                    encodeBuffer.clear();
                 }
                 while (!encodeCompleted);
             }
diff --git a/logstash-core/src/test/java/org/logstash/plugins/outputs/StdoutTest.java b/logstash-core/src/test/java/org/logstash/plugins/outputs/StdoutTest.java
index 9744b6bb885..9f243c47483 100644
--- a/logstash-core/src/test/java/org/logstash/plugins/outputs/StdoutTest.java
+++ b/logstash-core/src/test/java/org/logstash/plugins/outputs/StdoutTest.java
@@ -2,6 +2,7 @@
 
 import co.elastic.logstash.api.Event;
 import com.fasterxml.jackson.core.JsonProcessingException;
+import org.junit.Assert;
 import org.junit.Test;
 import org.logstash.plugins.ConfigurationImpl;
 import org.logstash.plugins.TestContext;
@@ -69,4 +70,24 @@ private static Collection<Event> getTestEvents() {
         e3.setField("myField", "event3");
         return Arrays.asList(e1, e2, e3);
     }
+
+    @Test
+    public void testEventLargerThanBuffer() {
+        StringBuilder message = new StringBuilder();
+        String repeatedMessage = "foo";
+        for (int k = 0; k < (16 * 1024 / repeatedMessage.length()); k++) {
+            message.append("foo");
+        }
+
+        org.logstash.Event e = new org.logstash.Event();
+        e.setField("message", message.toString());
+
+        OutputStream dummyOutputStream = new ByteArrayOutputStream(17 * 1024);
+        Stdout stdout = new Stdout(ID, new ConfigurationImpl(Collections.emptyMap(), new TestPluginFactory()),
+                new TestContext(), dummyOutputStream);
+        stdout.output(Collections.singletonList(e));
+        stdout.stop();
+
+        Assert.assertTrue(dummyOutputStream.toString().contains(message.toString()));
+    }
 }
