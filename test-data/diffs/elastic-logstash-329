diff --git a/CONTRIBUTORS b/CONTRIBUTORS
index d251fc56a9e..99a13530597 100644
--- a/CONTRIBUTORS
+++ b/CONTRIBUTORS
@@ -63,6 +63,7 @@ Contributors:
 * Richard Pijnenburg (electrical)
 * James Turnbull (jamesturnbull)
 * Neil Prosser (neilprosser)
+* Alex Dean (alexdean)
 
 Note: If you've sent me patches, bug reports, or otherwise contributed to
 logstash, and you aren't on the list above and want to be, please let me know
diff --git a/lib/logstash/outputs/redis.rb b/lib/logstash/outputs/redis.rb
index 5394f28d3bd..70a576a8224 100644
--- a/lib/logstash/outputs/redis.rb
+++ b/lib/logstash/outputs/redis.rb
@@ -150,7 +150,9 @@ def receive(event)
     return unless output?(event)
 
     if @batch
-      @pending[event.sprintf(@key)] << event.to_json
+      @pending_mutex.synchronize do
+        @pending[event.sprintf(@key)] << event.to_json
+      end
       process_pending
       return
     end
diff --git a/spec/outputs/redis.rb b/spec/outputs/redis.rb
index 7f1bb88da65..2a3edf04064 100644
--- a/spec/outputs/redis.rb
+++ b/spec/outputs/redis.rb
@@ -76,6 +76,55 @@
     end # agent
   end
 
+  describe "batch mode" do
+    key = 10.times.collect { rand(10).to_s }.join("")
+    event_count = 200000
+
+    config <<-CONFIG
+      input {
+        generator {
+          message => "hello world"
+          count => #{event_count}
+          type => "generator"
+        }
+      }
+      output {
+        redis {
+          host => "127.0.0.1"
+          key => "#{key}"
+          data_type => list
+          batch => true
+          batch_timeout => 5
+          timeout => 5
+        }
+      }
+    CONFIG
+
+    agent do
+      # we have to wait for teardown to execute & flush the last batch.
+      # otherwise we might start doing assertions before everything has been
+      # sent out to redis.
+      sleep 2
+
+      redis = Redis.new(:host => "127.0.0.1")
+
+      # The list should contain the number of elements our agent pushed up.
+      insist { redis.llen(key) } == event_count
+
+      # Now check all events for order and correctness.
+      event_count.times do |value|
+        id, element = redis.blpop(key, 0)
+        event = LogStash::Event.new(JSON.parse(element))
+        insist { event["sequence"] } == value
+        insist { event.message } == "hello world"
+        insist { event.type } == "generator"
+      end
+
+      # The list should now be empty
+      insist { redis.llen(key) } == 0
+    end # agent
+  end
+
   describe "converts US-ASCII to utf-8 without failures" do
     key = 10.times.collect { rand(10).to_s }.join("")
 
