diff --git a/lib/logstash/outputs/redis.rb b/lib/logstash/outputs/redis.rb
index ef274591c64..d3f9bd4a35c 100644
--- a/lib/logstash/outputs/redis.rb
+++ b/lib/logstash/outputs/redis.rb
@@ -37,6 +37,9 @@ class LogStash::Outputs::Redis < LogStash::Outputs::Base
   # Shuffle the host list during Logstash startup.
   config :shuffle_hosts, :validate => :boolean, :default => true
 
+  # Allow to balance redis hosts by round-robin
+  config :balance_hosts, :validate => :boolean, :default => false
+
   # The default port to connect on. Can be overridden on any hostname.
   config :port, :validate => :number, :default => 6379
 
@@ -172,7 +175,7 @@ def receive(event)
         @redis.publish(key, payload)
       end
     rescue => e
-      @logger.warn("Failed to send event to Redis", :event => event,
+      @logger.warn("Failed to send event to Redis #{@current_host}:#{@current_port}", :event => event,
                    :identity => identity, :exception => e,
                    :backtrace => e.backtrace)
       sleep @reconnect_interval
@@ -199,10 +202,16 @@ def flush(events, key, teardown=false)
     # to support this Stud::Buffer#buffer_flush should pass here the :final boolean value.
     congestion_check(key) unless teardown
     @redis.rpush(key, events)
+
+    # Make sure to select another hosts in next flush round if @balance_hosts is true
+    if @balance_hosts
+      @redis.quit
+      @redis=nil
+    end
   end
   # called from Stud::Buffer#buffer_flush when an error occurs
   def on_flush_error(e)
-    @logger.warn("Failed to send backlog of events to Redis",
+    @logger.warn("Failed to send backlog of events to Redis on #{@current_host}:#{@current_port}",
       :identity => identity,
       :exception => e,
       :backtrace => e.backtrace
