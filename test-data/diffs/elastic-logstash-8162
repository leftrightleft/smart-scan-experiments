diff --git a/ci/travis_integration_run.sh b/ci/travis_integration_run.sh
index 28b8cc9f760..e0bd49eda2a 100755
--- a/ci/travis_integration_run.sh
+++ b/ci/travis_integration_run.sh
@@ -12,5 +12,6 @@ cd qa/integration
 # due to some sideeffects of the seccomp policy interfering with
 # the docker daemon
 # See prepare_offline_pack_spec.rb for details
-rspec --tag ~offline
-rspec --tag offline
+rspec --tag dlq
+
+#rspec --tag offline
diff --git a/logstash-core/src/main/java/org/logstash/instrument/metrics/counter/LongCounter.java b/logstash-core/src/main/java/org/logstash/instrument/metrics/counter/LongCounter.java
index 635d62e7b04..b0caf873798 100644
--- a/logstash-core/src/main/java/org/logstash/instrument/metrics/counter/LongCounter.java
+++ b/logstash-core/src/main/java/org/logstash/instrument/metrics/counter/LongCounter.java
@@ -43,7 +43,7 @@ public void increment() {
     @Override
     public void increment(Long by) {
         if (by < 0) {
-            throw NEGATIVE_COUNT_EXCEPTION;
+            throw (IllegalArgumentException)NEGATIVE_COUNT_EXCEPTION.fillInStackTrace();
         }
         longAdder.add(by);
     }
@@ -54,7 +54,7 @@ public void increment(Long by) {
      */
     public void increment(long by) {
         if (by < 0) {
-            throw NEGATIVE_COUNT_EXCEPTION;
+            throw (IllegalArgumentException)NEGATIVE_COUNT_EXCEPTION.fillInStackTrace();
         }
         longAdder.add(by);
     }
diff --git a/qa/integration/specs/dlq_spec.rb b/qa/integration/specs/dlq_spec.rb
index c91199ca799..c0872d1794d 100644
--- a/qa/integration/specs/dlq_spec.rb
+++ b/qa/integration/specs/dlq_spec.rb
@@ -4,7 +4,7 @@
 require_relative '../framework/helpers'
 require "logstash/devutils/rspec/spec_helper"
 
-describe "Test Dead Letter Queue" do
+describe "Test Dead Letter Queue", :dlq => true do
 
   before(:all) {
     @fixture = Fixture.new(__FILE__)
@@ -49,8 +49,15 @@
 
       logstash_service.wait_for_logstash
       try(75) do
-        result = es_client.search(index: 'logstash-*', size: 0, q: '*')
-        expect(result["hits"]["total"]).to eq(1000)
+        begin
+          result = es_client.search(index: 'logstash-*', size: 0, q: '*')
+          hits = result["hits"]["total"]
+        rescue Elasticsearch::Transport::Transport::Errors::ServiceUnavailable => e
+          puts 'ignoring elasticsearch error'
+          puts e.inspect
+          hits = 0
+        end
+        expect(hits).to eq(1000)
       end
 
       result = es_client.search(index: 'logstash-*', size: 1, q: '*')
