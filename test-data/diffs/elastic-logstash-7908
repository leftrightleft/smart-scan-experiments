diff --git a/logstash-core/lib/logstash/instrument/collector.rb b/logstash-core/lib/logstash/instrument/collector.rb
index 08e72599f3d..e8ae0ea1b1f 100644
--- a/logstash-core/lib/logstash/instrument/collector.rb
+++ b/logstash-core/lib/logstash/instrument/collector.rb
@@ -37,7 +37,22 @@ def push(namespaces_path, key, type, *metric_type_params)
           LogStash::Instrument::MetricType.create(type, namespaces_path, key)
         end
 
-        metric.execute(*metric_type_params)
+        unless metric_type_params.size.eql? 2
+          logger.error("Collector: Cannot record metric. Unexpected metric params: " + metric_type_params.to_s)
+          return
+        end
+
+        method = metric_type_params[0]
+        value = metric_type_params[1]
+        if (:gauge.eql? type) && (:set.eql? method)
+          metric.set(value)
+        elsif (:counter.eql? type) && (:increment.eql? method)
+          metric.increment(value)
+        else
+          logger.error("Collector: Cannot record metric. Unexpected metric method: " + method.to_s)
+          return
+        end
+
       rescue MetricStore::NamespacesExpectedError => e
         logger.error("Collector: Cannot record metric", :exception => e)
       rescue NameError => e
diff --git a/logstash-core/lib/logstash/instrument/metric_type/counter.rb b/logstash-core/lib/logstash/instrument/metric_type/counter.rb
index ae69effeb21..b7e60144f05 100644
--- a/logstash-core/lib/logstash/instrument/metric_type/counter.rb
+++ b/logstash-core/lib/logstash/instrument/metric_type/counter.rb
@@ -9,6 +9,7 @@ def initialize(namespaces, key)
 
     end
 
+    # deprecated - use increment
     def execute(action, value = 1)
       send(action, value)
     end
diff --git a/logstash-core/lib/logstash/instrument/metric_type/gauge.rb b/logstash-core/lib/logstash/instrument/metric_type/gauge.rb
index f7808053748..8b0d0b16d52 100644
--- a/logstash-core/lib/logstash/instrument/metric_type/gauge.rb
+++ b/logstash-core/lib/logstash/instrument/metric_type/gauge.rb
@@ -7,6 +7,7 @@ def initialize(namespaces, key)
       super(namespaces, key.to_s)
     end
 
+    # deprecated - use set
     def execute(action, value = nil)
       send(action, value)
     end
