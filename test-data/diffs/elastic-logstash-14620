diff --git a/ci/dra_aarch64.sh b/ci/dra_aarch64.sh
index 471f69dcea8..d571c788402 100755
--- a/ci/dra_aarch64.sh
+++ b/ci/dra_aarch64.sh
@@ -9,26 +9,49 @@ export JRUBY_OPTS="-J-Xmx1g"
 # Extract the version number from the version.yml file
 # e.g.: 8.6.0
 # The suffix part like alpha1 etc is managed by the optional VERSION_QUALIFIER_OPT environment variable
-STACK_VERSION=`cat versions.yml | sed -n 's/^logstash\:\s\([[:digit:]]*\.[[:digit:]]*\.[[:digit:]]*\)$/\1/p'`
+STACK_VERSION=`cat versions.yml | sed -n 's/^logstash\:[[:space:]]\([[:digit:]]*\.[[:digit:]]*\.[[:digit:]]*\)$/\1/p'`
 
-if [ -z "$VERSION_QUALIFIER_OPT" ]; then
-  RELEASE=1 rake artifact:docker
-  RELEASE=1 rake artifact:docker_oss
-  rake artifact:dockerfiles
+# WORKFLOW_TYPE is a CI externally configured environment variable where, if not an empty string,
+# it's assumed to be snapshot
+if [ -n "$WORKFLOW_TYPE" ]; then
+  STACK_VERSION=${STACK_VERSION}-SNAPSHOT
+fi
+
+if [ -z "$WORKFLOW_TYPE" ]; then
+  if [ -z "$VERSION_QUALIFIER_OPT" ]; then
+    RELEASE=1 rake artifact:docker
+    RELEASE=1 rake artifact:docker_oss
+    rake artifact:dockerfiles
+  else
+    VERSION_QUALIFIER="$VERSION_QUALIFIER_OPT" RELEASE=1 rake artifact:docker
+    VERSION_QUALIFIER="$VERSION_QUALIFIER_OPT" RELEASE=1 rake artifact:docker_oss
+    VERSION_QUALIFIER="$VERSION_QUALIFIER_OPT" rake artifact:dockerfiles
+    # Qualifier is passed from CI as optional field and specify the version postfix
+    # in case of alpha or beta releases:
+    # e.g: 8.0.0-alpha1
+    STACK_VERSION="${STACK_VERSION}-${VERSION_QUALIFIER_OPT}"
+  fi
 else
-  VERSION_QUALIFIER="$VERSION_QUALIFIER_OPT" RELEASE=1 rake artifact:docker
-  VERSION_QUALIFIER="$VERSION_QUALIFIER_OPT" RELEASE=1 rake artifact:docker_oss
-  VERSION_QUALIFIER="$VERSION_QUALIFIER_OPT" rake artifact:dockerfiles
-  # Qualifier is passed from CI as optional field and specify the version postfix
-  # in case of alpha or beta releases:
-  # e.g: 8.0.0-alpha1
-  STACK_VERSION="${STACK_VERSION}-${VERSION_QUALIFIER_OPT}"
+  # WORKFLOW_TYPE is set, it has value "SNAPSHOT"
+  if [ -z "$VERSION_QUALIFIER_OPT" ]; then
+    rake artifact:docker
+    rake artifact:docker_oss
+    rake artifact:dockerfiles
+  else
+    VERSION_QUALIFIER="$VERSION_QUALIFIER_OPT" rake artifact:docker
+    VERSION_QUALIFIER="$VERSION_QUALIFIER_OPT" rake artifact:docker_oss
+    VERSION_QUALIFIER="$VERSION_QUALIFIER_OPT" rake artifact:dockerfiles
+    # Qualifier is passed from CI as optional field and specify the version postfix
+    # in case of alpha or beta releases:
+    # e.g: 8.0.0-alpha1
+    STACK_VERSION="${STACK_VERSION}-${VERSION_QUALIFIER_OPT}"
+  fi
 fi
 
 echo "Saving tar.gz for docker images"
-docker save docker.elastic.co/logstash/logstash:${STACK_VERSION}-SNAPSHOT | gzip -c > build/logstash-${STACK_VERSION}-docker-image-aarch64.tar.gz
-docker save docker.elastic.co/logstash/logstash-oss:${STACK_VERSION}-SNAPSHOT | gzip -c > build/logstash-oss-${STACK_VERSION}-docker-image-aarch64.tar.gz
-docker save docker.elastic.co/logstash/logstash-ubi8:${STACK_VERSION}-SNAPSHOT | gzip -c > build/logstash-ubi8-${STACK_VERSION}-docker-image-aarch64.tar.gz
+docker save docker.elastic.co/logstash/logstash:${STACK_VERSION} | gzip -c > build/logstash-${STACK_VERSION}-docker-image-aarch64.tar.gz
+docker save docker.elastic.co/logstash/logstash-oss:${STACK_VERSION} | gzip -c > build/logstash-oss-${STACK_VERSION}-docker-image-aarch64.tar.gz
+docker save docker.elastic.co/logstash/logstash-ubi8:${STACK_VERSION} | gzip -c > build/logstash-ubi8-${STACK_VERSION}-docker-image-aarch64.tar.gz
 
 echo "GENERATED ARTIFACTS"
 for file in build/logstash-*; do shasum $file;done
diff --git a/ci/dra_upload.sh b/ci/dra_upload.sh
index e1ea5bcf525..2af10ca88db 100755
--- a/ci/dra_upload.sh
+++ b/ci/dra_upload.sh
@@ -9,7 +9,7 @@ export JRUBY_OPTS="-J-Xmx1g"
 # Extract the version number from the version.yml file
 # e.g.: 8.6.0
 # The suffix part like alpha1 etc is managed by the optional VERSION_QUALIFIER_OPT environment variable
-STACK_VERSION=`cat versions.yml | sed -n 's/^logstash\:\s\([[:digit:]]*\.[[:digit:]]*\.[[:digit:]]*\)$/\1/p'`
+STACK_VERSION=`cat versions.yml | sed -n 's/^logstash\:[[:space:]]\([[:digit:]]*\.[[:digit:]]*\.[[:digit:]]*\)$/\1/p'`
 RELEASE_BRANCH=`cat versions.yml | sed -n 's/^logstash\:[[:space:]]\([[:digit:]]*\.[[:digit:]]*\)\.[[:digit:]]*$/\1/p'`
 if [ -n "$VERSION_QUALIFIER_OPT" ]; then
   # Qualifier is passed from CI as optional field and specify the version postfix
@@ -18,6 +18,12 @@ if [ -n "$VERSION_QUALIFIER_OPT" ]; then
   STACK_VERSION="${STACK_VERSION}-${VERSION_QUALIFIER_OPT}"
 fi
 
+WORKFLOW="staging"
+if [ -n "$WORKFLOW_TYPE" ]; then
+  STACK_VERSION=${STACK_VERSION}-SNAPSHOT
+  WORKFLOW="snapshot"
+fi
+
 echo "Download all the artifacts for version ${STACK_VERSION}"
 mkdir build/
 gsutil cp gs://logstash-ci-artifacts/dra/${STACK_VERSION}/logstash-${STACK_VERSION}-no-jdk.deb build/
@@ -111,6 +117,6 @@ docker run --rm \
       --project logstash \
       --branch ${RELEASE_BRANCH} \
       --commit "$(git rev-parse HEAD)" \
-      --workflow "staging" \
+      --workflow "${WORKFLOW}" \
       --version "${STACK_VERSION}" \
       --artifact-set main
diff --git a/ci/dra_x86_64.sh b/ci/dra_x86_64.sh
index 8567d79c4c0..3ef9e813752 100755
--- a/ci/dra_x86_64.sh
+++ b/ci/dra_x86_64.sh
@@ -9,22 +9,41 @@ export JRUBY_OPTS="-J-Xmx1g"
 # Extract the version number from the version.yml file
 # e.g.: 8.6.0
 # The suffix part like alpha1 etc is managed by the optional VERSION_QUALIFIER_OPT environment variable
-STACK_VERSION=`cat versions.yml | sed -n 's/^logstash\:\s\([[:digit:]]*\.[[:digit:]]*\.[[:digit:]]*\)$/\1/p'`
+STACK_VERSION=`cat versions.yml | sed -n 's/^logstash\:[[:space:]]\([[:digit:]]*\.[[:digit:]]*\.[[:digit:]]*\)$/\1/p'`
 
-if [ -z "$VERSION_QUALIFIER_OPT" ]; then
-  RELEASE=1 rake artifact:all
+# WORKFLOW_TYPE is a CI externally configured environment variable where, if not an empty string,
+# it's assumed to be snapshot
+if [ -n "$WORKFLOW_TYPE" ]; then
+  STACK_VERSION=${STACK_VERSION}-SNAPSHOT
+fi
+
+if [ -z "$WORKFLOW_TYPE" ]; then
+  if [ -z "$VERSION_QUALIFIER_OPT" ]; then
+    RELEASE=1 rake artifact:all
+  else
+    # Qualifier is passed from CI as optional field and specify the version postfix
+    # in case of alpha or beta releases:
+    # e.g: 8.0.0-alpha1
+    VERSION_QUALIFIER="$VERSION_QUALIFIER_OPT" RELEASE=1 rake artifact:all
+    STACK_VERSION="${STACK_VERSION}-${VERSION_QUALIFIER_OPT}"
+  fi
 else
-  # Qualifier is passed from CI as optional field and specify the version postfix
-  # in case of alpha or beta releases:
-  # e.g: 8.0.0-alpha1
-  VERSION_QUALIFIER="$VERSION_QUALIFIER_OPT" RELEASE=1 rake artifact:all
-  STACK_VERSION="${STACK_VERSION}-${VERSION_QUALIFIER_OPT}"
+  # WORKFLOW_TYPE is set, it has value "SNAPSHOT"
+  if [ -z "$VERSION_QUALIFIER_OPT" ]; then
+    rake artifact:all
+  else
+    # Qualifier is passed from CI as optional field and specify the version postfix
+    # in case of alpha or beta releases:
+    # e.g: 8.0.0-alpha1
+    VERSION_QUALIFIER="$VERSION_QUALIFIER_OPT" rake artifact:all
+    STACK_VERSION="${STACK_VERSION}-${VERSION_QUALIFIER_OPT}"
+  fi
 fi
 
 echo "Saving tar.gz for docker images"
-docker save docker.elastic.co/logstash/logstash:${STACK_VERSION}-SNAPSHOT | gzip -c > build/logstash-${STACK_VERSION}-docker-image-x86_64.tar.gz
-docker save docker.elastic.co/logstash/logstash-oss:${STACK_VERSION}-SNAPSHOT | gzip -c > build/logstash-oss-${STACK_VERSION}-docker-image-x86_64.tar.gz
-docker save docker.elastic.co/logstash/logstash-ubi8:${STACK_VERSION}-SNAPSHOT | gzip -c > build/logstash-ubi8-${STACK_VERSION}-docker-image-x86_64.tar.gz
+docker save docker.elastic.co/logstash/logstash:${STACK_VERSION} | gzip -c > build/logstash-${STACK_VERSION}-docker-image-x86_64.tar.gz
+docker save docker.elastic.co/logstash/logstash-oss:${STACK_VERSION} | gzip -c > build/logstash-oss-${STACK_VERSION}-docker-image-x86_64.tar.gz
+docker save docker.elastic.co/logstash/logstash-ubi8:${STACK_VERSION} | gzip -c > build/logstash-ubi8-${STACK_VERSION}-docker-image-x86_64.tar.gz
 
 echo "GENERATED ARTIFACTS"
 for file in build/logstash-*; do shasum $file;done
