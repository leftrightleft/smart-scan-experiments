diff --git a/Makefile b/Makefile
index 0ec3da1f83b..99b6c8c2ed1 100644
--- a/Makefile
+++ b/Makefile
@@ -194,7 +194,7 @@ vendor-gems: | vendor/bundle
 .PHONY: vendor/bundle
 vendor/bundle: | vendor $(JRUBY)
 	@echo "=> Ensuring ruby gems dependencies are in $@..."
-	$(QUIET)USE_JRUBY=1 bin/logstash deps $(QUIET_OUTPUT)
+	$(QUIET)bin/logstash deps $(QUIET_OUTPUT)
 	@# Purge any junk that fattens our jar without need!
 	@# The riak gem includes previous gems in the 'pkg' dir. :(
 	-$(QUIET)rm -rf $@/jruby/1.9/gems/riak-client-1.0.3/pkg
@@ -220,7 +220,7 @@ vendor/ua-parser/regexes.yaml: | vendor/ua-parser/
 .PHONY: test
 test: QUIET_OUTPUT=
 test: | $(JRUBY) vendor-elasticsearch vendor-geoip vendor-collectd vendor-gems
-	$(SPEC_ENV) USE_JRUBY=1 bin/logstash rspec $(SPEC_OPTS) --order rand --fail-fast $(TESTS)
+	$(SPEC_ENV) bin/logstash rspec $(SPEC_OPTS) --order rand --fail-fast $(TESTS)
 
 .PHONY: reporting-test
 reporting-test: SPEC_ENV=JRUBY_OPTS=--debug
@@ -382,4 +382,4 @@ tarball-test: #build/logstash-$(VERSION).tar.gz
 	$(QUIET)-rm -rf build/test-tarball/
 	$(QUIET)mkdir -p build/test-tarball/
 	tar -C build/test-tarball --strip-components 1 -xf build/logstash-$(VERSION).tar.gz
-	(cd build/test-tarball; USE_JRUBY=1 bin/logstash rspec $(TESTS) --fail-fast)
+	(cd build/test-tarball; bin/logstash rspec $(TESTS) --fail-fast)
diff --git a/README.md b/README.md
index 347478df719..bc056afe142 100644
--- a/README.md
+++ b/README.md
@@ -29,11 +29,7 @@ You can also find documentation on the <http://logstash.net> site.
 
 ## Developing
 
-If you don't have JRuby already (or don't use rvm, rbenv, etc), you can have `bin/logstash` fetch it for you by setting `USE_JRUBY`:
-
-    USE_JRUBY=1 bin/logstash ...
-
-Otherwise, here's how to get started with rvm:
+Here's how to get started with rvm:
 
     # Install JRuby with rvm
     rvm install jruby-1.7.11
diff --git a/bin/logstash b/bin/logstash
index b4b28015a41..4dd48808b3d 100755
--- a/bin/logstash
+++ b/bin/logstash
@@ -10,10 +10,6 @@
 #
 # NOTE: One extra command is available 'deps'
 # The 'deps' command will install dependencies for logstash.
-#
-# If you do not have ruby installed, you can set "USE_JRUBY=1"
-# in your environment and this script will download and use
-# a release of JRuby for you.
 
 # Defaults you can override with environment variables
 LS_HEAP_SIZE="${LS_HEAP_SIZE:=500m}"
@@ -32,18 +28,16 @@ case $1 in
   env) env "$@" ;;
   -*)
     if [ -z "$VENDORED_JRUBY" ] ; then
-      exec "${RUBYCMD}" "-I${RUBYLIB}" "${basedir}/lib/logstash/runner.rb" "agent" "$@"
+      exec "${RUBYCMD}" "${basedir}/lib/logstash/runner.rb" "agent" "$@"
     else
-      exec "${JAVACMD}" $JAVA_OPTS "-jar" "$JRUBY_JAR" "-I${RUBYLIB}" "${basedir}/lib/logstash/runner.rb" "agent" "$@"
+      exec "${JAVACMD}" $JAVA_OPTS "-jar" "$JRUBY_JAR" "${basedir}/lib/logstash/runner.rb" "agent" "$@"
     fi
     ;;
   *)
     if [ -z "$VENDORED_JRUBY" ] ; then
-      exec "${RUBYCMD}" "-I${RUBYLIB}" "${basedir}/lib/logstash/runner.rb" "$@"
+      exec "${RUBYCMD}" "${basedir}/lib/logstash/runner.rb" "$@"
     else
-      exec "${JAVACMD}" $JAVA_OPTS "-jar" "$JRUBY_JAR" "-I${RUBYLIB}" "${basedir}/lib/logstash/runner.rb" "$@"
+      exec "${JAVACMD}" $JAVA_OPTS "-jar" "$JRUBY_JAR" "${basedir}/lib/logstash/runner.rb" "$@"
     fi
     ;;
-esac
-
-
+esac
\ No newline at end of file
diff --git a/bin/logstash.lib.sh b/bin/logstash.lib.sh
index fe49c8f6009..bd4b56824e7 100755
--- a/bin/logstash.lib.sh
+++ b/bin/logstash.lib.sh
@@ -1,24 +1,5 @@
 basedir=$(cd `dirname $0`/..; pwd)
 
-setup_ruby() {
-  export RUBYLIB="${basedir}/lib"
-
-  # Verify ruby works
-  if ! ruby -e 'puts "HURRAY"' 2> /dev/null | grep -q "HURRAY" ; then
-    echo "No ruby program found. Cannot start."
-    exit 1
-  fi
-
-  # set $RUBY and $RUBYVER
-  eval $(ruby -rrbconfig -e 'puts "RUBYVER=#{RbConfig::CONFIG["ruby_version"]}"; puts "RUBY=#{RUBY_ENGINE}"')
-
-  RUBYCMD="ruby"
-  VENDORED_JRUBY=
-
-  export GEM_HOME="${basedir}/vendor/bundle/${RUBY}/${RUBYVER}"
-  export GEM_PATH=
-}
-
 setup_java() {
   if [ -z "$JAVACMD" ] ; then
     if [ -n "$JAVA_HOME" ] ; then
@@ -38,11 +19,6 @@ setup_java() {
     exit 1
   fi
 
-  if [ "$(basename $JAVACMD)" = "drip" ] ; then
-    export DRIP_INIT_CLASS="org.jruby.main.DripMain"
-    export DRIP_INIT=
-  fi
-
   JAVA_OPTS="$JAVA_OPTS -Xmx${LS_HEAP_SIZE}"
   JAVA_OPTS="$JAVA_OPTS -XX:+UseParNewGC"
   JAVA_OPTS="$JAVA_OPTS -XX:+UseConcMarkSweepGC"
@@ -65,25 +41,64 @@ setup_java() {
   export JAVA_OPTS
 }
 
-setup_vendored_jruby() {
-  RUBYVER=1.9
-  RUBY=jruby
+setup_drip() {
+  if [ -z $DRIP_JAVACMD ] ; then
+    JAVACMD="drip"
+  fi
 
+  # resolve full path to the drip command.
+  if [ ! -f "$JAVACMD" ] ; then
+    JAVACMD=$(which $JAVACMD 2>/dev/null)
+  fi
+
+  if [ ! -x "$JAVACMD" ] ; then
+    echo "Could not find executable drip binary. Please install drip in your PATH"
+    exit 1
+  fi
+
+  # faster JRuby startup options https://github.com/jruby/jruby/wiki/Improving-startup-time
+  # since we are using drip to speed up, we may as well throw these in also
+  if [ "$USE_RUBY" = "1" ] ; then
+    export JRUBY_OPTS="-J-XX:+TieredCompilation -J-XX:TieredStopAtLevel=1 -J-noverify"
+  else
+    JAVA_OPTS="$JAVA_OPTS -XX:+TieredCompilation -XX:TieredStopAtLevel=1 -noverify"
+  fi
+  export JAVACMD
+  export DRIP_INIT_CLASS="org.jruby.main.DripMain"
+  export DRIP_INIT=""
+}
+
+setup_vendored_jruby() {
   JRUBY_JAR=$(ls "${basedir}"/vendor/jar/jruby-complete-*.jar)
   VENDORED_JRUBY=1
+}
 
-  export RUBYLIB="${basedir}/lib"
-  export GEM_HOME="${basedir}/vendor/bundle/${RUBY}/${RUBYVER}"
-  export GEM_PATH=
+setup_ruby() {
+  RUBYCMD="ruby"
+  VENDORED_JRUBY=
 }
 
 setup() {
-  setup_java
-  if [ -z "$USE_JRUBY" -a \( -d "$basedir/.git" -o ! -z "$USE_RUBY" \) ] ; then
+  # first check if we want to use drip, which can be used in vendored jruby mode
+  # and also when setting USE_RUBY=1 if the ruby interpretor is in fact jruby
+  if [ ! -z "$JAVACMD" ] ; then
+    if [ "$(basename $JAVACMD)" = "drip" ] ; then
+      DRIP_JAVACMD=1
+      USE_DRIP=1
+    fi
+  fi
+  if [ "$USE_DRIP" = "1" ] ; then
+    setup_drip
+  fi
+
+  if [ "$USE_RUBY" = "1" ] ; then
     setup_ruby
   else
+    setup_java
     setup_vendored_jruby
   fi
+
+  export RUBYLIB="${basedir}/lib"
 }
 
 install_deps() {
diff --git a/dripmain.rb b/dripmain.rb
new file mode 100644
index 00000000000..23426a5b063
--- /dev/null
+++ b/dripmain.rb
@@ -0,0 +1,29 @@
+# dripmain.rb is called by org.jruby.main.DripMain to further warm the JVM with any preloading
+# that we can do to speedup future startup using drip.
+
+# we are out of the application context here so setup the load path and gem paths
+lib_path = File.expand_path(File.join(File.dirname(__FILE__), "./lib"))
+$:.unshift(lib_path)
+
+require "logstash/environment"
+LogStash::Environment.set_gem_paths!
+
+# typical required gems and libs
+require "i18n"
+I18n.enforce_available_locales = true
+I18n.load_path << LogStash::Environment.locales_path("en.yml")
+require "cabin"
+require "stud/trap"
+require "stud/task"
+require "clamp"
+require "rspec"
+require "rspec/core/runner"
+
+require "logstash/namespace"
+require "logstash/program"
+require "logstash/agent"
+require "logstash/kibana"
+require "logstash/util"
+require "logstash/errors"
+require "logstash/pipeline"
+require "logstash/plugin"
diff --git a/gembag.rb b/gembag.rb
index 2962624404e..86218f6c3c5 100644
--- a/gembag.rb
+++ b/gembag.rb
@@ -1,12 +1,7 @@
 #!/usr/bin/env ruby
 
-require "rbconfig"
-
-rubyabi = RbConfig::CONFIG["ruby_version"]
-target = "#{Dir.pwd}/vendor/bundle"
-gemdir = "#{target}/#{RUBY_ENGINE}/#{rubyabi}/"
-ENV["GEM_HOME"] = gemdir
-ENV["GEM_PATH"] = ""
+require "logstash/environment"
+LogStash::Environment.set_gem_paths!
 
 require "rubygems/specification"
 require "rubygems/commands/install_command"
@@ -48,13 +43,13 @@ def install_gem(name, requirement, target)
 module Bundler
   module SharedHelpers
     def default_lockfile
-      ruby = "#{RUBY_ENGINE}-#{RbConfig::CONFIG["ruby_version"]}"
+      ruby = "#{LogStash::Environment.ruby_engine}-#{LogStash::Environment.ruby_abi_version}"
       return Pathname.new("#{default_gemfile}.#{ruby}.lock")
     end
   end
 end
 
-if RUBY_ENGINE == "rbx"
+if LogStash::Environment.ruby_engine == "rbx"
   begin
     gem("rubysl")
   rescue Gem::LoadError => e
@@ -65,7 +60,7 @@ def default_lockfile
 # Try installing a few times in case we hit the "bad_record_mac" ssl error during installation.
 10.times do
   begin
-    Bundler::CLI.start(["install", "--gemfile=tools/Gemfile", "--path", target, "--clean", "--without", "development"])
+    Bundler::CLI.start(["install", "--gemfile=tools/Gemfile", "--path", LogStash::Environment.gem_target, "--clean", "--without", "development"])
     break
   rescue Gem::RemoteFetcher::FetchError => e
     puts e.message
diff --git a/lib/logstash/environment.rb b/lib/logstash/environment.rb
index f8c12ef59be..0d44126caa8 100644
--- a/lib/logstash/environment.rb
+++ b/lib/logstash/environment.rb
@@ -24,8 +24,28 @@ def load_elasticsearch_jars!
       end
     end
 
+    def gem_target
+      "#{LOGSTASH_HOME}/vendor/bundle"
+    end
+
+    def set_gem_paths!
+      gemdir = "#{gem_target}/#{ruby_engine}/#{ruby_abi_version}/"
+      ENV["GEM_HOME"] = gemdir
+      ENV["GEM_PATH"] = gemdir
+    end
+
+    # @return [String] major.minor ruby version, ex 1.9
+    def ruby_abi_version
+      RUBY_VERSION[/(\d+\.\d+)(\.\d+)*/, 1]
+    end
+
+    # @return [String] jruby, ruby, rbx, ...
+    def ruby_engine
+      RUBY_ENGINE
+    end
+
     def jruby?
-      RUBY_PLATFORM == "java"
+      @jruby ||= !!(RUBY_PLATFORM == "java")
     end
 
     def vendor_path(path)
@@ -39,5 +59,9 @@ def plugin_path(path)
     def pattern_path(path)
       return ::File.join(LOGSTASH_HOME, "patterns", path)
     end
+
+    def locales_path(path)
+      return ::File.join(LOGSTASH_HOME, "locales", path)
+    end
   end
 end
diff --git a/lib/logstash/runner.rb b/lib/logstash/runner.rb
index 4a396b0802c..22ae31636a0 100644
--- a/lib/logstash/runner.rb
+++ b/lib/logstash/runner.rb
@@ -4,6 +4,9 @@
 $START = Time.now
 $DEBUGLIST = (ENV["DEBUG"] || "").split(",")
 
+require "logstash/environment"
+LogStash::Environment.set_gem_paths!
+
 Thread.abort_on_exception = true
 if ENV["PROFILE_BAD_LOG_CALLS"] || $DEBUGLIST.include?("log")
   # Set PROFILE_BAD_LOG_CALLS=1 in your environment if you want
@@ -43,11 +46,10 @@ module Cabin::Mixins::Logger
 require "logstash/monkeypatches-for-debugging"
 require "logstash/namespace"
 require "logstash/program"
-require "i18n" # gem 'i18n'
+
+require "i18n"
 I18n.enforce_available_locales = true
-I18n.load_path << File.expand_path(
-  File.join(File.dirname(__FILE__), "../../locales/en.yml")
-)
+I18n.load_path << LogStash::Environment.locales_path("en.yml")
 
 class LogStash::RSpecsRunner
   def initialize(args)
diff --git a/tools/release.sh b/tools/release.sh
index d667991d419..435196a95cb 100644
--- a/tools/release.sh
+++ b/tools/release.sh
@@ -38,8 +38,8 @@ docs() {
 }
 
 tests() {
-  USE_JRUBY=1 make -C $logstash test QUIET=
-  USE_JRUBY=1 make -C $logstash tarball test QUIET=
+  make -C $logstash test QUIET=
+  make -C $logstash tarball test QUIET=
 }
 
 packages() {
