diff --git a/lib/logstash/inputs/tcp.rb b/lib/logstash/inputs/tcp.rb
index 07cdf46738b..dafd1400aab 100644
--- a/lib/logstash/inputs/tcp.rb
+++ b/lib/logstash/inputs/tcp.rb
@@ -97,6 +97,7 @@ def register
 
   private
   def handle_socket(socket, client_address, output_queue, codec)
+    hostname = Socket.gethostname
     while true
       buf = nil
       # NOTE(petef): the timeout only hits after the line is read
@@ -110,7 +111,7 @@ def handle_socket(socket, client_address, output_queue, codec)
         end
       end
       codec.decode(buf) do |event|
-        event["host"] ||= client_address
+        event["host"] ||= hostname
         event["sslsubject"] ||= socket.peer_cert.subject if @ssl_enable && @ssl_verify
         decorate(event)
         output_queue << event
@@ -122,9 +123,10 @@ def handle_socket(socket, client_address, output_queue, codec)
     @logger.debug("An error occurred. Closing connection",
                   :client => socket.peer, :exception => e, :backtrace => e.backtrace)
   ensure
+    hostname = Socket.gethostname
     socket.close rescue IOError nil
     codec.respond_to?(:flush) && codec.flush do |event|
-      event["host"] ||= client_address
+      event["host"] ||= hostname
       event["sslsubject"] ||= socket.peer_cert.subject if @ssl_enable && @ssl_verify
       decorate(event)
       output_queue << event
diff --git a/lib/logstash/inputs/unix.rb b/lib/logstash/inputs/unix.rb
index b78a887b0d7..2d962089dca 100644
--- a/lib/logstash/inputs/unix.rb
+++ b/lib/logstash/inputs/unix.rb
@@ -2,6 +2,7 @@
 require "logstash/inputs/base"
 require "logstash/namespace"
 require "socket"
+require "fileutils"
 
 # Read events over a UNIX socket.
 #
@@ -32,6 +33,16 @@ class Interrupted < StandardError; end
   # Mode to operate in. `server` listens for client connections,
   # `client` connects to a server.
   config :mode, :validate => ["server", "client"], :default => "server"
+  
+  # Change file mode
+  config :chmod, :validate => :number, :default => false
+  
+  # Change socket group ownership
+  config :chgrp, :validate => :string, :required => false, :default => nil
+  
+  # Change socket user ownership
+  config :chown, :validate => :string, :required => false, :default => nil
+  
 
   def initialize(*args)
     super(*args)
@@ -41,16 +52,29 @@ def initialize(*args)
   def register
     require "socket"
     require "timeout"
+    require "fileutils"
 
     if server?
       @logger.info("Starting unix input listener", :address => "#{@path}", :force_unlink => "#{@force_unlink}")
       begin
         @server_socket = UNIXServer.new(@path)
+        if @chmod
+          FileUtils.chmod(@chmod, "#{@path}")
+        end
+        if @chown || @chgrp
+          FileUtils.chown("#{@chown}", "#{@chgrp}", "#{@path}")
+        end
       rescue Errno::EADDRINUSE, IOError
         if @force_unlink
           File.unlink(@path)
           begin
             @server_socket = UNIXServer.new(@path)
+            if @chmod
+              FileUtils.chmod(@chmod, "#{@path}")
+            end
+            if @chown || @chgrp
+              FileUtils.chown("#{@chown}", "#{@chgrp}", "#{@path}")
+            end
             return
           rescue Errno::EADDRINUSE, IOError
             @logger.error("!!!Could not start UNIX server: Address in use",
diff --git a/lib/logstash/inputs/zeromq.rb b/lib/logstash/inputs/zeromq.rb
index b094a8c4b06..472e632f25d 100644
--- a/lib/logstash/inputs/zeromq.rb
+++ b/lib/logstash/inputs/zeromq.rb
@@ -2,6 +2,7 @@
 require "logstash/inputs/base"
 require "logstash/namespace"
 require "socket"
+require "fileutils"
 
 # Read events over a 0MQ SUB socket.
 #
@@ -69,11 +70,21 @@ class LogStash::Inputs::ZeroMQ < LogStash::Inputs::Base
   #
   # example: sockopt => ["ZMQ::HWM", 50, "ZMQ::IDENTITY", "my_named_queue"]
   config :sockopt, :validate => :hash
+  
+  # Change file mode
+  config :chmod, :validate => :number, :default => false
+  
+  # Change socket group ownership
+  config :chgrp, :validate => :string, :required => false, :default => nil
+  
+  # Change socket user ownership
+  config :chown, :validate => :string, :required => false, :default => nil
 
   public
   def register
     require "ffi-rzmq"
     require "logstash/util/zeromq"
+    require "fileutils"
     self.class.send(:include, LogStash::Util::ZeroMQ)
 
     case @topology
@@ -94,6 +105,18 @@ def register
 
     @address.each do |addr|
       setup(@zsocket, addr)
+      @logger.info("hello world")
+      @logger.info(addr.split('ipc://', 2)[1])
+      @logger.info(addr.start_with?("ipc://"))
+      if addr.start_with?("ipc://")
+        if @chmod
+          FileUtils.chmod(@chmod, "#{addr.split('ipc://', 2)[1]}")
+        end
+        if @chown || @chgrp
+          FileUtils.chown("#{@chown}", "#{@chgrp}", "#{addr.split('ipc://', 2)[1]}")
+        end
+      
+      end
     end
 
     if @topology == "pubsub"
diff --git a/tools/Gemfile.jruby-1.9.lock b/tools/Gemfile.jruby-1.9.lock
index fb0b9b604cd..320009a6763 100644
--- a/tools/Gemfile.jruby-1.9.lock
+++ b/tools/Gemfile.jruby-1.9.lock
@@ -5,7 +5,6 @@ GEM
       i18n (~> 0.6, >= 0.6.4)
       multi_json (~> 1.0)
     addressable (2.3.5)
-    atomic (1.1.15)
     atomic (1.1.15-java)
     avl_tree (1.1.3)
     awesome_print (1.2.0)
@@ -47,7 +46,6 @@ GEM
     extlib (0.9.16)
     faraday (0.9.0)
       multipart-post (>= 1.2, < 3)
-    ffi (1.9.3)
     ffi (1.9.3-java)
     ffi-rzmq (1.0.0)
       ffi
@@ -62,11 +60,9 @@ GEM
     gelfd (0.2.0)
     geoip (1.3.5)
     gmetric (0.1.3)
-    hitimes (1.2.1)
     hitimes (1.2.1-java)
     http (0.5.0)
       http_parser.rb
-    http_parser.rb (0.5.3)
     http_parser.rb (0.5.3-java)
     i18n (0.6.9)
     insist (1.0.0)
@@ -76,8 +72,8 @@ GEM
     jruby-httpclient (1.1.1-java)
     jruby-openssl (0.8.7)
       bouncy-castle-java (>= 1.5.0147)
-    json (1.8.1)
     json (1.8.1-java)
+    kramdown (1.3.3)
     mail (2.5.3)
       i18n (>= 0.4.0)
       mime-types (~> 1.16)
@@ -98,17 +94,11 @@ GEM
     multi_json (1.8.4)
     multipart-post (2.0.0)
     murmurhash3 (0.1.4)
-    nokogiri (1.6.1)
-      mini_portile (~> 0.5.0)
     nokogiri (1.6.1-java)
       mini_portile (~> 0.5.0)
     parslet (1.4.0)
       blankslate (~> 2.0)
     polyglot (0.3.4)
-    pry (0.9.12.6)
-      coderay (~> 1.0)
-      method_source (~> 0.8)
-      slop (~> 3.4)
     pry (0.9.12.6-java)
       coderay (~> 1.0)
       method_source (~> 0.8)
@@ -161,8 +151,6 @@ GEM
     term-ansicolor (1.3.0)
       tins (~> 1.0)
     thor (0.18.1)
-    thread_safe (0.2.0)
-      atomic (>= 1.1.7, < 2)
     thread_safe (0.2.0-java)
       atomic (>= 1.1.7, < 2)
     tilt (1.4.1)
@@ -217,6 +205,7 @@ DEPENDENCIES
   jruby-httpclient
   jruby-openssl (= 0.8.7)
   json
+  kramdown
   mail
   march_hare (~> 2.1.0)
   metriks
