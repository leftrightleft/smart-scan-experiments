diff --git a/lib/logstash/event.rb b/lib/logstash/event.rb
index d3d27420c9e..d3c151da83e 100644
--- a/lib/logstash/event.rb
+++ b/lib/logstash/event.rb
@@ -57,18 +57,10 @@ def initialize(data={})
     data["@version"] = "1" if !@data.include?("@version")
   end # def initialize
 
-  # Add class methods on inclusion.
   public
-  def self.included(klass)
-    klass.extend(ClassMethods)
-  end # def included
-
-  module ClassMethods
-    public
-    def from_json(json)
-      return self.new(JSON.parse(json))
-    end # def from_json
-  end
+  def self.from_json(json)
+    return self.new(JSON.parse(json))
+  end # def from_json
 
   public
   def cancel
diff --git a/spec/outputs/file.rb b/spec/outputs/file.rb
index a7dea813f1e..e132565ec12 100644
--- a/spec/outputs/file.rb
+++ b/spec/outputs/file.rb
@@ -29,7 +29,7 @@
       # Now check all events for order and correctness.
       File.foreach(tmp_file) do |line|
         event = LogStash::Event.from_json(line)
-        insist {event.message} == "hello world"
+        insist {event["message"]} == "hello world"
         insist {event["sequence"]} == line_num
         line_num += 1
       end
@@ -62,7 +62,17 @@
       # Now check all events for order and correctness.
       Zlib::GzipReader.new(File.open(tmp_file)).each_line do |line|
         event = LogStash::Event.from_json(line)
-        insist {event.message} == "hello world"
+        insist {event["message"]} == "hello world"
+        insist {event["sequence"]} == line_num
+        line_num += 1
+      end
+      insist {line_num} == event_count
+
+      #LOGSTASH-997 confirm usage of zcat command on file
+      line_num = 0
+      `zcat #{tmp_file.path()}`.split("\n").each do |line|
+        event = LogStash::Event.from_json(line)
+        insist {event["message"]} == "hello world"
         insist {event["sequence"]} == line_num
         line_num += 1
       end
