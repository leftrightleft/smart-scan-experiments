diff --git a/lib/logstash/agent.rb b/lib/logstash/agent.rb
index bf96476ef43..d22b4ac76dd 100644
--- a/lib/logstash/agent.rb
+++ b/lib/logstash/agent.rb
@@ -29,6 +29,7 @@ class LogStash::Agent
   attr_reader :config_path
   attr_reader :logfile
   attr_reader :verbose
+  attr_reader :configtest
 
   public
   def initialize
@@ -42,6 +43,7 @@ def initialize
     @verbose = 0
     @filterworker_count = 1
     @watchdog_timeout = 10
+    @configtest = false
 
     @plugins = {}
     @plugins_mutex = Mutex.new
@@ -101,6 +103,10 @@ def options(opts)
       @logfile = path
     end
 
+    opts.on("-t", "--configtest", "Test configuration and exit.") do |arg|
+        @configtest = true
+    end
+
     opts.on("-v", "Increase verbosity") do
       @verbose += 1
     end
@@ -388,7 +394,7 @@ def run_with_config(config)
 
       # If we are given a config string (run usually with 'agent -e "some config string"')
       # then set up some defaults.
-      if @config_string
+      if @config_string or @configtest
         require "logstash/inputs/stdin"
         require "logstash/outputs/stdout"
 
@@ -400,10 +406,10 @@ def run_with_config(config)
         end
 
         # If no inputs are specified, use stdin by default.
-        @inputs = [LogStash::Inputs::Stdin.new("type" => [ "stdin" ])] if @inputs.length == 0
+        @inputs = [LogStash::Inputs::Stdin.new("type" => [ "stdin" ])] if (@inputs.length == 0 or @configtest)
 
         # If no outputs are specified, use stdout in debug mode.
-        @outputs = [LogStash::Outputs::Stdout.new("debug" => [ "true" ])] if @outputs.length == 0
+        @outputs = [LogStash::Outputs::Stdout.new("debug" => [ "true" ])] if (@outputs.length == 0 or @configtest)
       end
 
       if @inputs.length == 0 or @outputs.length == 0
@@ -478,6 +484,13 @@ def run_with_config(config)
       @logger.info("All plugins are started and registered.")
     end # synchronize
 
+    # exit if configtest
+    if @configtest
+      puts "Config test passed.  Exiting..."
+      shutdown
+      exit (0)
+    end
+
     # yield to a block in case someone's waiting for us to be done setting up
     # like tests, etc.
     yield if block_given?
