diff --git a/logstash-core/lib/logstash/compiler/lscl.rb b/logstash-core/lib/logstash/compiler/lscl.rb
index b4cdb4d0dc9..a382061cb75 100644
--- a/logstash-core/lib/logstash/compiler/lscl.rb
+++ b/logstash-core/lib/logstash/compiler/lscl.rb
@@ -164,8 +164,8 @@ def expr
   class Number < Value
     def expr
       jdsl.eValue(source_meta, text_value.include?(".") ?
-        text_value.to_f :
-        text_value.to_i)
+                                   Float(text_value) :
+                                   Integer(text_value))
     end
   end
 
diff --git a/logstash-core/spec/logstash/config/config_ast_spec.rb b/logstash-core/spec/logstash/config/config_ast_spec.rb
index 769cb0a8bb1..17d0ba61b21 100644
--- a/logstash-core/spec/logstash/config/config_ast_spec.rb
+++ b/logstash-core/spec/logstash/config/config_ast_spec.rb
@@ -143,6 +143,21 @@
 
         expect(config).to be_nil
       end
+
+      it "supports octal literals" do
+        parser = LogStashConfigParser.new
+        config = parser.parse(%q(
+          input {
+            example {
+              foo => 010
+            }
+          }
+        ))
+
+        compiled_number = eval(config.recursive_select(LogStash::Config::AST::Number).first.compile)
+
+        expect(compiled_number).to be == 8
+      end
     end
 
     context "when config.support_escapes" do
