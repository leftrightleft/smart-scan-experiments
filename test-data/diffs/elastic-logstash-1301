diff --git a/lib/logstash/environment.rb b/lib/logstash/environment.rb
index f59ae2bc87b..db2140b95ba 100644
--- a/lib/logstash/environment.rb
+++ b/lib/logstash/environment.rb
@@ -15,13 +15,19 @@ module Environment
     # loads currently embedded elasticsearch jars
     # @raise LogStash::EnvironmentError if not running under JRuby or if no jar files are found
     def load_elasticsearch_jars!
+      load_jars!(ELASTICSEARCH_DIR, "**","*.jar")
+    end
+
+    # loads specific jars located under jars_path
+    # @raise LogStash::EnvironmentError if not running under JRuby or if no jar files are found
+    def load_jars!(*jars_path)
       raise(LogStash::EnvironmentError, "JRuby is required") unless jruby?
 
       require "java"
-      jars_path = ::File.join(ELASTICSEARCH_DIR, "**", "*.jar")
+      jars_path = ::File.join(jars_path)
       jar_files = Dir.glob(jars_path)
 
-      raise(LogStash::EnvironmentError, "Could not find Elasticsearch jar files under #{ELASTICSEARCH_DIR}") if jar_files.empty?
+      raise(LogStash::EnvironmentError, "Could not find jar files under #{jars_path}") if jar_files.empty?
 
       jar_files.each do |jar|
         loaded = require jar
diff --git a/spec/util/environment_spec.rb b/spec/util/environment_spec.rb
index 0337b7b70bc..e6476636598 100644
--- a/spec/util/environment_spec.rb
+++ b/spec/util/environment_spec.rb
@@ -2,4 +2,25 @@
 
 describe LogStash::Environment do
 
+  describe "load_elasticsearch_jars!" do
+
+    it "should load elasticsarch jars" do
+      expect{LogStash::Environment.load_elasticsearch_jars!}.to_not raise_error
+    end
+
+    it "should raise when cannot find elasticsearch jars" do
+      stub_const("LogStash::Environment::ELASTICSEARCH_DIR", "/some/invalid/path")
+      expect{LogStash::Environment.load_elasticsearch_jars!}.to raise_error(LogStash::EnvironmentError)
+    end
+  end
+
+  describe "load_jars!" do
+    it "should load custom jars" do
+      expect{LogStash::Environment.load_jars!(LogStash::Environment::LOGSTASH_HOME,"vendor","jruby","lib","jruby.jar")}.to_not raise_error
+    end
+
+    it "should raise when cannot find jars" do
+      expect{LogStash::Environment.load_jars!(LogStash::Environment::LOGSTASH_HOME,"non-exisiting","jar.jar")}.to raise_error(LogStash::EnvironmentError)
+    end
+  end
 end
