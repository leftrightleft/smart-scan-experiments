diff --git a/ci/docker_integration_tests.sh b/ci/docker_integration_tests.sh
index 7e382021eb2..0eb78569ac3 100755
--- a/ci/docker_integration_tests.sh
+++ b/ci/docker_integration_tests.sh
@@ -1,21 +1,2 @@
 #!/bin/bash
-#Note - ensure that the -e flag is NOT set, and explicitly check the $? status to allow for clean up
-
-if [ -z "$branch_specifier" ]; then
-    # manual
-    IMAGE_NAME="logstash-integration-tests"
-else
-    # Jenkins
-    IMAGE_NAME=$branch_specifier"-"$(date +%s%N)
-fi
-
-echo "Running Docker CI build for '$IMAGE_NAME' "
-
-docker build  -t $IMAGE_NAME .
-exit_code=$?; [[ $exit_code != 0 ]] && exit $exit_code
-docker run --sig-proxy=true --rm $IMAGE_NAME ci/integration_tests.sh $@
-exit_code=$?
-[[ $IMAGE_NAME != "logstash-integration-tests" ]] && docker rmi $IMAGE_NAME
-echo "exiting with code: '$exit_code'"
-exit $exit_code #preserve the exit code from the test run
-
+ci/docker_run.sh logstash-integration-tests ci/integration_tests.sh $@
diff --git a/ci/docker_run.sh b/ci/docker_run.sh
new file mode 100755
index 00000000000..bc1c3078427
--- /dev/null
+++ b/ci/docker_run.sh
@@ -0,0 +1,27 @@
+#!/bin/bash
+# Syntax is docker_run.sh IMAGE_NAME SCRIPT_NAME *EXTRA_DOCKER_OPTS
+
+set -x # We want verbosity here, this mostly runs on CI and we want to easily debug stuff
+
+#Note - ensure that the -e flag is NOT set, and explicitly check the $? status to allow for clean up
+
+REMOVE_IMAGE=false
+if [ -z "$branch_specifier" ]; then
+    # manual
+    REMOVE_IMAGE=true
+    IMAGE_NAME="$1"
+else
+    # Jenkins
+    IMAGE_NAME=$branch_specifier"-"$(date +%s%N)
+fi
+
+echo "Running Docker CI build for '$IMAGE_NAME' "
+
+docker build  -t $IMAGE_NAME .
+exit_code=$?; [[ $exit_code != 0 ]] && exit $exit_code
+# Run the command, skip the first argument, which is the image name
+docker run --sig-proxy=true --rm $IMAGE_NAME ${@:2}
+exit_code=$?
+[[ $REMOVE_IMAGE == "true" ]] && docker rmi $IMAGE_NAME
+echo "exiting with code: '$exit_code'"
+exit $exit_code #preserve the exit code from the test run
diff --git a/ci/docker_unit_tests.sh b/ci/docker_unit_tests.sh
index 7dc27bceb7c..c7557b5d836 100755
--- a/ci/docker_unit_tests.sh
+++ b/ci/docker_unit_tests.sh
@@ -1,20 +1,2 @@
 #!/bin/bash
-#Note - ensure that the -e flag is NOT set, and explicitly check the $? status to allow for clean up
-
-if [ -z "$branch_specifier" ]; then
-    # manual
-    IMAGE_NAME="logstash-unit-tests"
-else
-    # Jenkins
-    IMAGE_NAME=$branch_specifier"-"$(date +%s%N)
-fi
-
-echo "Running Docker CI build for '$IMAGE_NAME' "
-
-docker build  -t $IMAGE_NAME .
-exit_code=$?; [[ $exit_code != 0 ]] && exit $exit_code
-docker run --sig-proxy=true --rm $IMAGE_NAME ci/unit_tests.sh $@
-exit_code=$?
-[[ $IMAGE_NAME != "logstash-unit-tests" ]] && docker rmi $IMAGE_NAME
-echo "exiting with code: '$exit_code'"
-exit $exit_code #preserve the exit code from the test run
+ci/docker_run.sh logstash-unit-tests ci/unit_tests.sh $@
