diff --git a/logstash-core/lib/logstash/settings.rb b/logstash-core/lib/logstash/settings.rb
index b65e1bb8946..5dd16b3a2eb 100644
--- a/logstash-core/lib/logstash/settings.rb
+++ b/logstash-core/lib/logstash/settings.rb
@@ -207,7 +207,9 @@ def ==(other)
 
     private
     def read_yaml(path)
-      YAML.safe_load(IO.read(path)) || {}
+      yml_content  = IO.read(path)
+      logger.info("DBGDNA >> logstash.yml used #{yml_content}")
+      YAML.safe_load(yml_content) || {}
     end
 
     def flatten_hash(h,f="",g={})
diff --git a/qa/integration/specs/monitoring_api_spec.rb b/qa/integration/specs/monitoring_api_spec.rb
index a821fdd28c1..2e8b376bb49 100644
--- a/qa/integration/specs/monitoring_api_spec.rb
+++ b/qa/integration/specs/monitoring_api_spec.rb
@@ -20,6 +20,7 @@
 require_relative '../services/logstash_service'
 require "logstash/devutils/rspec/spec_helper"
 require "stud/try"
+require 'pp'
 
 describe "Test Monitoring API" do
   before(:all) {
@@ -36,6 +37,7 @@
   
   let(:number_of_events) { 5 }
   let(:max_retry) { 120 }
+  let(:temp_dir) { Stud::Temporary.directory("logstash-pipelinelog-test") }
 
   it "can retrieve event stats" do
     logstash_service = @fixture.get_service("logstash")
@@ -97,9 +99,13 @@
       # and trigger the retry block
       queue_stats = result.fetch("pipelines").fetch("main").fetch("queue")
       expect(queue_stats).not_to be_nil
-      if logstash_service.settings.feature_flag == "persistent_queues"
+      puts "DNADBG >> feature_flag #{logstash_service.settings.feature_flag}"
+      #if logstash_service.settings.feature_flag == "persistent_queues"
         expect(queue_stats["type"]).to eq "persisted"
+        puts "DNADBG >> queue_stats: #{queue_stats} class: #{queue_stats.class} #{queue_stats.class}\n settings: #{logstash_service.settings}"
+        pp queue_stats
         queue_data_stats = queue_stats.fetch("data")
+        puts "DNADBG >> queue_data_stats: #{queue_data_stats}"
         expect(queue_data_stats["free_space_in_bytes"]).not_to be_nil
         expect(queue_data_stats["storage_type"]).not_to be_nil
         expect(queue_data_stats["path"]).not_to be_nil
@@ -108,9 +114,9 @@
         expect(queue_capacity_stats["page_capacity_in_bytes"]).not_to be_nil
         expect(queue_capacity_stats["max_queue_size_in_bytes"]).not_to be_nil
         expect(queue_capacity_stats["max_unread_events"]).not_to be_nil
-      else
-        expect(queue_stats["type"]).to eq("memory")
-      end
+      #else
+      #  expect(queue_stats["type"]).to eq("memory")
+      #end
     end
   end
 
