diff --git a/lib/logstash/JRUBY-6970.rb b/lib/logstash/JRUBY-6970.rb
index e06f7cb2a47..00ba514cd63 100644
--- a/lib/logstash/JRUBY-6970.rb
+++ b/lib/logstash/JRUBY-6970.rb
@@ -31,6 +31,7 @@ class << self
     alias_method :expand_path_JRUBY_6970, :expand_path
 
     def expand_path(path, dir=nil)
+      #p :expand_path => [path, dir]
       if path =~ /(jar:)?file:\/.*\.jar!/
         #p :expand_path_path => [path, dir]
         jar, resource = path.split("!", 2)
@@ -39,7 +40,17 @@ def expand_path(path, dir=nil)
           # Nothing after the "!", nothing special to handle.
           return expand_path_JRUBY_6970(path, dir)
         else
-          return "#{jar}!#{expand_path_JRUBY_6970(resource, dir)}"
+          resource = expand_path_JRUBY_6970(resource, dir)
+          # TODO(sissel): use LogStash::Util::UNAME
+          if RbConfig::CONFIG["host_os"] == "mswin32"
+            # 'expand_path' on "/" will return "C:/" on windows.
+            # So like.. we don't want that because technically this
+            # is the root of the jar, not of a disk.
+            puts :expand_path => [path, "#{jar}!#{resource.gsub(/^[A-Z]:/, "")}"]
+            return "#{jar}!#{resource.gsub(/^[A-Z]:/, "")}"
+          else
+            return "#{jar}!#{resource}"
+          end
         end
       elsif dir =~ /(jar:)?file:\/.*\.jar!/
         jar, dir = dir.split("!", 2)
diff --git a/lib/logstash/inputs/file.rb b/lib/logstash/inputs/file.rb
index bb78682ee30..175c20f623e 100644
--- a/lib/logstash/inputs/file.rb
+++ b/lib/logstash/inputs/file.rb
@@ -125,8 +125,9 @@ def run(queue)
     hostname = Socket.gethostname
 
     @tail.subscribe do |path, line|
-      source = Addressable::URI.new(:scheme => "file", :host => hostname, :path => path).to_s
-      @logger.debug("Received line", :path => path, :line => line)
+      #source = Addressable::URI.new(:scheme => "file", :host => hostname, :path => path).to_s
+      source = "file://#{hostname}/#{path.gsub("\\","/")}"
+      @logger.debug? && @logger.debug("Received line", :path => path, :line => line)
       e = to_event(line, source)
       if e
         queue << e
diff --git a/lib/logstash/util.rb b/lib/logstash/util.rb
index 5e5ec54853c..3d9454091fb 100644
--- a/lib/logstash/util.rb
+++ b/lib/logstash/util.rb
@@ -1,26 +1,22 @@
 require "logstash/namespace"
-require "ffi" # gem ffi
 
 module LogStash::Util
   PR_SET_NAME = 15
 
-  # This can throw an exception, if it does, we're probably not on linux.
-  # It certainly throws an exception on Windows; I don't know how
-  # to work around it other than this hack.
-  begin
-    require "sys/uname" # gem sys-uname
-    UNAME = Sys::Uname.uname.sysname
-  rescue LoadError, FFI::NotFoundError
-    UNAME = "unknown"
+  UNAME = case RbConfig::CONFIG["host_os"]
+    when /^linux/; "linux"
+    else; RbConfig::CONFIG["host_os"]
   end
 
-  module LibC
-    extend FFI::Library
-    if UNAME == "Linux"
-      ffi_lib 'c'
+  if UNAME == "linux"
+    module LibC
+      extend FFI::Library
+      if UNAME == "linux"
+        ffi_lib 'c'
 
-      # Ok so the 2nd arg isn't really a string... but whaatever
-      attach_function :prctl, [:int, :string, :long, :long, :long], :int
+        # Ok so the 2nd arg isn't really a string... but whaatever
+        attach_function :prctl, [:int, :string, :long, :long, :long], :int
+      end
     end
   end
 
@@ -31,9 +27,9 @@ def self.set_thread_name(name)
     end
     Thread.current[:name] = name
     
-    if UNAME == "Linux"
+    if UNAME == "linux"
       # prctl PR_SET_NAME allows up to 16 bytes for a process name
-      # since MRI 1.9 and JRuby use system threads for this.
+      # since MRI 1.9, JRuby, and Rubinius use system threads for this.
       LibC.prctl(PR_SET_NAME, name[0..16], 0, 0, 0)
     end
   end # def set_thread_name
diff --git a/logstash.gemspec b/logstash.gemspec
index 687bfaaa198..f175d3a71ff 100644
--- a/logstash.gemspec
+++ b/logstash.gemspec
@@ -22,7 +22,6 @@ Gem::Specification.new do |gem|
   gem.add_runtime_dependency "minitest"           # for running the tests from the jar, (MIT license)
   gem.add_runtime_dependency "pry"                #(ruby license)
   gem.add_runtime_dependency "stud"               #(Apache 2.0 license)
-  gem.add_runtime_dependency "sys-uname"          # for platform detection (Artistic 2.0 license)
   gem.add_runtime_dependency "clamp"              # for command line args/flags (MIT license)
   gem.add_runtime_dependency "i18n"               #(MIT license)
 
