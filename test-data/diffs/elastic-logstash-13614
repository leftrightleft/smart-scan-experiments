diff --git a/logstash-core/src/main/java/org/logstash/secret/cli/SecretStoreCli.java b/logstash-core/src/main/java/org/logstash/secret/cli/SecretStoreCli.java
index 5967b70838f..d3e30f8910e 100644
--- a/logstash-core/src/main/java/org/logstash/secret/cli/SecretStoreCli.java
+++ b/logstash-core/src/main/java/org/logstash/secret/cli/SecretStoreCli.java
@@ -149,13 +149,11 @@ public void command(String primaryCommand, SecureConfig config, String argument)
                 SecretIdentifier id = new SecretIdentifier(argument);
 
                 SecretStore secretStore = secretStoreFactory.load(config);
-                byte[] s = secretStore.retrieveSecret(id);
-                if (s == null) {
-                    terminal.writeLine(String.format("ERROR: '%s' does not exist in the Logstash keystore.", argument));
-                } else {
-                    SecretStoreUtil.clearBytes(s);
+                if (secretStore.containsSecret(id)) {
                     secretStore.purgeSecret(id);
                     terminal.writeLine(String.format("Removed '%s' from the Logstash keystore.", id.getKey()));
+                } else {
+                    terminal.writeLine(String.format("ERROR: '%s' does not exist in the Logstash keystore.", argument));
                 }
                 break;
             }
diff --git a/logstash-core/src/main/java/org/logstash/secret/store/SecretStore.java b/logstash-core/src/main/java/org/logstash/secret/store/SecretStore.java
index 27b9af906c4..ec304d13dd0 100644
--- a/logstash-core/src/main/java/org/logstash/secret/store/SecretStore.java
+++ b/logstash-core/src/main/java/org/logstash/secret/store/SecretStore.java
@@ -94,4 +94,11 @@ public interface SecretStore {
      */
     byte[] retrieveSecret(SecretIdentifier id);
 
+    /**
+     * Check if a secret exists in the store.
+     *
+     * @param id The {@link SecretIdentifier} to identify the secret to find
+     * @return true if a secret exists, false otherwise
+     */
+    boolean containsSecret(SecretIdentifier id);
 }
diff --git a/logstash-core/src/main/java/org/logstash/secret/store/backend/JavaKeyStore.java b/logstash-core/src/main/java/org/logstash/secret/store/backend/JavaKeyStore.java
index 5dfa4818832..77a7e237d2f 100644
--- a/logstash-core/src/main/java/org/logstash/secret/store/backend/JavaKeyStore.java
+++ b/logstash-core/src/main/java/org/logstash/secret/store/backend/JavaKeyStore.java
@@ -352,6 +352,17 @@ public void purgeSecret(SecretIdentifier identifier) {
         }
     }
 
+    @Override
+    public boolean containsSecret(SecretIdentifier identifier) {
+        try {
+            loadKeyStore();
+            return keyStore.containsAlias(identifier.toExternalForm());
+        } catch (Exception e) {
+            throw new SecretStoreException.LoadException(String.format("Found a keystore at %s, but failed to load it.",
+                    keyStorePath.toAbsolutePath().toString()));
+        }
+    }
+
     private void releaseLock(Lock lock) {
         if (lock != null) {
             lock.unlock();
diff --git a/logstash-core/src/test/java/org/logstash/secret/store/SecretStoreFactoryTest.java b/logstash-core/src/test/java/org/logstash/secret/store/SecretStoreFactoryTest.java
index 2d04364edde..ab9f6ea3c7b 100644
--- a/logstash-core/src/test/java/org/logstash/secret/store/SecretStoreFactoryTest.java
+++ b/logstash-core/src/test/java/org/logstash/secret/store/SecretStoreFactoryTest.java
@@ -196,6 +196,9 @@ public void purgeSecret(SecretIdentifier id) {
             secrets.remove(id);
         }
 
+        @Override
+        public boolean containsSecret(SecretIdentifier id) { return secrets.containsKey(id); }
+
         @Override
         public byte[] retrieveSecret(SecretIdentifier id) {
             ByteBuffer bb = secrets.get(id);
