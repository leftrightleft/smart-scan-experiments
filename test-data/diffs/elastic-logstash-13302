diff --git a/docs/static/configuration.asciidoc b/docs/static/configuration.asciidoc
index 9dce5f5a61e..e52d5c04259 100644
--- a/docs/static/configuration.asciidoc
+++ b/docs/static/configuration.asciidoc
@@ -925,7 +925,7 @@ You should see something returned to stdout that looks like this:
 }
 ----------------------------------
 
-As you can see, Logstash (with help from the `grok` filter) was able to parse the log line (which happens to be in Apache "combined log" format) and break it up into many different discrete bits of information. This is extremely useful once you start querying and analyzing our log data. For example, you'll be able to easily run reports on HTTP response codes, IP addresses, referrers, and so on. There are quite a few grok patterns included with Logstash out-of-the-box, so it's quite likely if you need to parse a common log format, someone has already done the work for you. For more information, see the list of https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns[Logstash grok patterns] on GitHub.
+As you can see, Logstash (with help from the `grok` filter) was able to parse the log line (which happens to be in Apache "combined log" format) and break it up into many different discrete bits of information. This is extremely useful once you start querying and analyzing our log data. For example, you'll be able to easily run reports on HTTP response codes, IP addresses, referrers, and so on. There are quite a few grok patterns included with Logstash out-of-the-box, so it's quite likely if you need to parse a common log format, someone has already done the work for you. For more information, see the list of https://github.com/logstash-plugins/logstash-patterns-core/tree/main/patterns[Logstash grok patterns] on GitHub.
 
 The other filter used in this example is the `date` filter. This filter parses out a timestamp and uses it as the timestamp for the event (regardless of when you're ingesting the log data). You'll notice that the `@timestamp` field in this example is set to December 11, 2013, even though Logstash is ingesting the event at some point afterwards. This is handy when backfilling logs. It gives you the ability to tell Logstash "use this value as the timestamp for this event".
 
diff --git a/docs/static/contrib-acceptance.asciidoc b/docs/static/contrib-acceptance.asciidoc
index 0f473d88659..086b0266c89 100644
--- a/docs/static/contrib-acceptance.asciidoc
+++ b/docs/static/contrib-acceptance.asciidoc
@@ -15,5 +15,5 @@ If we list your plugin in the Logstash Reference, we point to your documentation
 * **Tests.** Your plugin must contain tests to be accepted. You can refer to http://betterspecs.org/ for examples. 
 ** Step 1. Enable travis on your account
 ** Step 2. Import our standard travis.yml https://github.com/logstash-plugins/.ci/blob/1.x/travis/travis.yml, as shown in the
-https://github.com/logstash-plugins/logstash-filter-fingerprint/blob/master/.travis.yml[fingerprint filter example].
+https://github.com/logstash-plugins/logstash-filter-fingerprint/blob/main/.travis.yml[fingerprint filter example].
 ** Step 3. Have specs in the spec folder.
diff --git a/docs/static/contribute-core.asciidoc b/docs/static/contribute-core.asciidoc
index 2489e755cfa..4e6ae6e03b8 100644
--- a/docs/static/contribute-core.asciidoc
+++ b/docs/static/contribute-core.asciidoc
@@ -4,7 +4,7 @@
 We also welcome contributions and bug fixes to the Logstash core feature set.
 
 Please read through our
-https://github.com/elastic/logstash/blob/master/CONTRIBUTING.md[contribution]
+https://github.com/elastic/logstash/blob/main/CONTRIBUTING.md[contribution]
 guide, and the Logstash
-https://github.com/elastic/logstash/blob/master/README.md[readme]
-document.
\ No newline at end of file
+https://github.com/elastic/logstash/blob/main/README.md[readme]
+document.
diff --git a/docs/static/contributing-to-logstash.asciidoc b/docs/static/contributing-to-logstash.asciidoc
index 49e8ec11498..c1c51ab3d5a 100644
--- a/docs/static/contributing-to-logstash.asciidoc
+++ b/docs/static/contributing-to-logstash.asciidoc
@@ -40,5 +40,5 @@ exit. The `close` method is a a new name for the method known as `teardown` in p
 The `shutdown`, `finished`, `finished?`, `running?`, and `terminating?` methods are redundant and no longer present in the
 Plugin Base class.
 
-Sample code for the plugin shutdown APIs is https://github.com/logstash-plugins/logstash-input-example/blob/master/lib/logstash/inputs/example.rb[available].
+Sample code for the plugin shutdown APIs is https://github.com/logstash-plugins/logstash-input-example/blob/main/lib/logstash/inputs/example.rb[available].
 
diff --git a/docs/static/doc-for-plugin.asciidoc b/docs/static/doc-for-plugin.asciidoc
index 981a2b92702..e33b2e63431 100644
--- a/docs/static/doc-for-plugin.asciidoc
+++ b/docs/static/doc-for-plugin.asciidoc
@@ -184,7 +184,7 @@ For more asciidoc formatting tips, see the excellent reference at
 https://github.com/elastic/docs#asciidoc-guide.
 
 For tips on contributing and changelog guidelines, see
-https://github.com/elastic/logstash/blob/master/CONTRIBUTING.md#logstash-plugin-changelog-guidelines[CONTRIBUTING.md].
+https://github.com/elastic/logstash/blob/main/CONTRIBUTING.md#logstash-plugin-changelog-guidelines[CONTRIBUTING.md].
 
 For general information about contributing, see
 {logstash-ref}/contributing-to-logstash.html[Contributing to Logstash].
diff --git a/docs/static/include/pluginbody.asciidoc b/docs/static/include/pluginbody.asciidoc
index aa163d51d4a..a173629a074 100644
--- a/docs/static/include/pluginbody.asciidoc
+++ b/docs/static/include/pluginbody.asciidoc
@@ -528,8 +528,8 @@ ifndef::blockcodec[]
 ----------------------------------
 The codec's `decode` method is where data coming in from an input is transformed
 into an event.  There are complex examples like the
-https://github.com/logstash-plugins/logstash-codec-collectd/blob/master/lib/logstash/codecs/collectd.rb#L386-L484[collectd]
-codec, and simpler examples like the https://github.com/logstash-plugins/logstash-codec-spool/blob/master/lib/logstash/codecs/spool.rb#L11-L16[spool]
+https://github.com/logstash-plugins/logstash-codec-collectd/blob/main/lib/logstash/codecs/collectd.rb#L386-L484[collectd]
+codec, and simpler examples like the https://github.com/logstash-plugins/logstash-codec-spool/blob/main/lib/logstash/codecs/spool.rb#L11-L16[spool]
 codec.
 
 There must be a `yield` statement as part of the `decode` method which will
@@ -554,9 +554,9 @@ ifndef::blockcodec[]
   end # def encode
 ----------------------------------
 The `encode` method takes an event and serializes it (_encodes_) into another
-format.  Good examples of `encode` methods include the simple https://github.com/logstash-plugins/logstash-codec-plain/blob/master/lib/logstash/codecs/plain.rb#L39-L46[plain]
-codec, the slightly more involved https://github.com/logstash-plugins/logstash-codec-msgpack/blob/master/lib/logstash/codecs/msgpack.rb#L38-L46[msgpack]
-codec, and even an https://github.com/logstash-plugins/logstash-codec-avro/blob/master/lib/logstash/codecs/avro.rb#L38-L45[avro]
+format.  Good examples of `encode` methods include the simple https://github.com/logstash-plugins/logstash-codec-plain/blob/main/lib/logstash/codecs/plain.rb#L39-L46[plain]
+codec, the slightly more involved https://github.com/logstash-plugins/logstash-codec-msgpack/blob/main/lib/logstash/codecs/msgpack.rb#L38-L46[msgpack]
+codec, and even an https://github.com/logstash-plugins/logstash-codec-avro/blob/main/lib/logstash/codecs/avro.rb#L38-L45[avro]
 codec.
 
 In most cases, your `encode` method should have an `@on_event.call()` statement.
@@ -588,9 +588,9 @@ The {pluginname} input plugin has the following `run` Method:
 The `run` method is where a stream of data from an input becomes an event.
 
 The stream can be plain or generated as with the
-https://github.com/logstash-plugins/logstash-input-heartbeat/blob/master/lib/logstash/inputs/heartbeat.rb#L43-L61[heartbeat]
+https://github.com/logstash-plugins/logstash-input-heartbeat/blob/main/lib/logstash/inputs/heartbeat.rb#L43-L61[heartbeat]
 input plugin.  In these cases, though no codec is used,
-https://github.com/logstash-plugins/logstash-input-heartbeat/blob/master/lib/logstash/inputs/heartbeat.rb#L17[a default codec]
+https://github.com/logstash-plugins/logstash-input-heartbeat/blob/main/lib/logstash/inputs/heartbeat.rb#L17[a default codec]
 must be set in the code to avoid errors.
 
 Here's another example `run` method:
@@ -643,10 +643,10 @@ This inserts the event into the pipeline.
 Because input plugins can range from simple to complex, it is helpful to see
 more examples of how they have been created:
 
- - https://github.com/logstash-plugins/logstash-input-syslog/blob/master/lib/logstash/inputs/syslog.rb[syslog]
- - https://github.com/logstash-plugins/logstash-input-zeromq/blob/master/lib/logstash/inputs/zeromq.rb[zeromq]
- - https://github.com/logstash-plugins/logstash-input-stdin/blob/master/lib/logstash/inputs/stdin.rb[stdin]
- - https://github.com/logstash-plugins/logstash-input-tcp/blob/master/lib/logstash/inputs/tcp.rb[tcp]
+ - https://github.com/logstash-plugins/logstash-input-syslog/blob/main/lib/logstash/inputs/syslog.rb[syslog]
+ - https://github.com/logstash-plugins/logstash-input-zeromq/blob/main/lib/logstash/inputs/zeromq.rb[zeromq]
+ - https://github.com/logstash-plugins/logstash-input-stdin/blob/main/lib/logstash/inputs/stdin.rb[stdin]
+ - https://github.com/logstash-plugins/logstash-input-tcp/blob/main/lib/logstash/inputs/tcp.rb[tcp]
 
 There are many more more examples in the https://github.com/logstash-plugins?query=logstash-input[logstash-plugin github repository].
 ======
@@ -668,17 +668,17 @@ ifdef::receive_method[]
   end # def event
 ----------------------------------
 This empty `receive` method does absolutely nothing, which is valid code from
-the https://github.com/logstash-plugins/logstash-output-null/blob/master/lib/logstash/outputs/null.rb[null]
+the https://github.com/logstash-plugins/logstash-output-null/blob/main/lib/logstash/outputs/null.rb[null]
 output plugin.
 
 The `receive` method _receives_ events from the pipeline and further processes
 them before sending them to their final destination.  These destinations can
-be as varied as https://github.com/logstash-plugins/logstash-output-file/blob/master/lib/logstash/outputs/file.rb[files],
-https://github.com/logstash-plugins/logstash-output-elasticsearch/blob/master/lib/logstash/outputs/elasticsearch.rb[elasticsearch],
-https://github.com/logstash-plugins/logstash-output-email/blob/master/lib/logstash/outputs/email.rb[email],
-https://github.com/logstash-plugins/logstash-output-rabbitmq/blob/master/lib/logstash/outputs/rabbitmq.rb[RabbitMQ],
-https://github.com/logstash-plugins/logstash-output-tcp/blob/master/lib/logstash/outputs/tcp.rb[tcp],
-https://github.com/logstash-plugins/logstash-output-stdout/blob/master/lib/logstash/outputs/stdout.rb[stdout],
+be as varied as https://github.com/logstash-plugins/logstash-output-file/blob/main/lib/logstash/outputs/file.rb[files],
+https://github.com/logstash-plugins/logstash-output-elasticsearch/blob/main/lib/logstash/outputs/elasticsearch.rb[elasticsearch],
+https://github.com/logstash-plugins/logstash-output-email/blob/main/lib/logstash/outputs/email.rb[email],
+https://github.com/logstash-plugins/logstash-output-rabbitmq/blob/main/lib/logstash/outputs/rabbitmq.rb[RabbitMQ],
+https://github.com/logstash-plugins/logstash-output-tcp/blob/main/lib/logstash/outputs/tcp.rb[tcp],
+https://github.com/logstash-plugins/logstash-output-stdout/blob/main/lib/logstash/outputs/stdout.rb[stdout],
 and dozens more!
 
 Output plugins do not require you to make use of codecs, but you can use a
@@ -727,13 +727,13 @@ a Ruby Gem from it. The following information will help you complete the process
 
 A `require` statement in Ruby is used to include necessary code. In some cases
 your plugin may require additional files.  For example, the collectd plugin
-https://github.com/logstash-plugins/logstash-codec-collectd/blob/master/lib/logstash/codecs/collectd.rb#L148[uses]
+https://github.com/logstash-plugins/logstash-codec-collectd/blob/main/lib/logstash/codecs/collectd.rb#L148[uses]
 the `types.db` file provided by collectd.  In the main directory of your plugin,
 a file called `vendor.json` is where these files are described.
 
 The `vendor.json` file contains an array of JSON objects, each describing a file
 dependency. This example comes from the
-https://github.com/logstash-plugins/logstash-codec-collectd/blob/master/vendor.json[collectd]
+https://github.com/logstash-plugins/logstash-codec-collectd/blob/main/vendor.json[collectd]
 codec plugin:
 
 [source,txt]
@@ -754,7 +754,7 @@ absolute in this array.  If `files` is not present, all files will be
 uncompressed and extracted into the vendor directory.
 
 Another example of the `vendor.json` file is the
-https://github.com/logstash-plugins/logstash-filter-geoip/blob/master/vendor.json[`geoip` filter]
+https://github.com/logstash-plugins/logstash-filter-geoip/blob/main/vendor.json[`geoip` filter]
 
 The process used to download these dependencies is to call `rake vendor`.  This
 will be discussed further in the testing section of this document.
@@ -774,7 +774,7 @@ easier. You can use the
 https://github.com/logstash-plugins/logstash-mixin-deprecation_logger_support[adapter]
 to ensure that your plugin can use the deprecation logger while still supporting
 older versions of {ls}. See the
-https://github.com/logstash-plugins/logstash-mixin-deprecation_logger_support/blob/master/README.md[readme]
+https://github.com/logstash-plugins/logstash-mixin-deprecation_logger_support/blob/main/README.md[readme]
 for more information and for instructions on using the adapter.
 
 Deprecations are noted in the `logstash-deprecation.log` file in the
@@ -837,7 +837,7 @@ It is appropriate to change these values to fit your plugin. In particular,
 you are ready to publish your plugin.
 
 Logstash and all its plugins are licensed under
-https://github.com/elastic/logstash/blob/master/LICENSE[Apache License, version 2 ("ALv2")].
+https://github.com/elastic/logstash/blob/main/LICENSE[Apache License, version 2 ("ALv2")].
 If you make your plugin publicly available via http://rubygems.org[RubyGems.org],
 please make sure to have this line in your gemspec:
 
@@ -876,7 +876,7 @@ a development dependency on `logstash-devutils`.
 ===== Jar dependencies
 
 In some cases, such as the
-https://github.com/logstash-plugins/logstash-output-elasticsearch/blob/master/logstash-output-elasticsearch.gemspec#L22-L23[Elasticsearch output plugin],
+https://github.com/logstash-plugins/logstash-output-elasticsearch/blob/main/logstash-output-elasticsearch.gemspec#L22-L23[Elasticsearch output plugin],
 your code may depend on a jar file.  In cases such as this, the dependency is
 added in the gemspec file in this manner:
 
@@ -1168,7 +1168,7 @@ Logstash users by simply publishing it to RubyGems.org.
 
 ===== Licensing
 Logstash and all its plugins are licensed under
-https://github.com/elasticsearch/logstash/blob/master/LICENSE[Apache License, version 2 ("ALv2")].
+https://github.com/elasticsearch/logstash/blob/main/LICENSE[Apache License, version 2 ("ALv2")].
 If you make your plugin publicly available via http://rubygems.org[RubyGems.org],
 please make sure to have this line in your gemspec:
 
diff --git a/docs/static/java-codec.asciidoc b/docs/static/java-codec.asciidoc
index 7c6d2ec02ef..935eb9a01bb 100644
--- a/docs/static/java-codec.asciidoc
+++ b/docs/static/java-codec.asciidoc
@@ -239,7 +239,7 @@ responsible for returning the buffer to write mode via either
 `byteBuffer.clear()` or `byteBuffer.compact()` before resuming writes. In the
 example above, the `decode` method simply splits the incoming byte stream on the
 specified delimiter. A production-grade codec such as
-https://github.com/elastic/logstash/blob/master/logstash-core/src/main/java/org/logstash/plugins/codecs/Line.java[`java-line`]
+https://github.com/elastic/logstash/blob/main/logstash-core/src/main/java/org/logstash/plugins/codecs/Line.java[`java-line`]
 would not make the simplifying assumption that the end of the supplied byte
 stream corresponded with the end of an event.
 
@@ -306,7 +306,7 @@ an UUID.
 
 Lastly, but certainly not least importantly, unit tests are strongly encouraged.
 The example codec plugin includes an 
-https://github.com/logstash-plugins/logstash-codec-java_codec_example/blob/master/src/test/java/org/logstash/javaapi/JavaCodecExampleTest.java[example unit
+https://github.com/logstash-plugins/logstash-codec-java_codec_example/blob/main/src/test/java/org/logstash/javaapi/JavaCodecExampleTest.java[example unit
 test] that you can use as a template for your own.
 
 // Pulls in shared section about Packaging and Deploying
diff --git a/docs/static/java-filter.asciidoc b/docs/static/java-filter.asciidoc
index 8a4bb3080d8..25bb99aa2d4 100644
--- a/docs/static/java-filter.asciidoc
+++ b/docs/static/java-filter.asciidoc
@@ -217,7 +217,7 @@ constructor at instantiation time.
 
 Lastly, but certainly not least importantly, unit tests are strongly encouraged.
 The example filter plugin includes an
-https://github.com/logstash-plugins/logstash-filter-java_filter_example/blob/master/src/test/java/org/logstashplugins/JavaFilterExampleTest.java[example
+https://github.com/logstash-plugins/logstash-filter-java_filter_example/blob/main/src/test/java/org/logstashplugins/JavaFilterExampleTest.java[example
 unit test] that you can use as a template for your own.
 
 
diff --git a/docs/static/java-input.asciidoc b/docs/static/java-input.asciidoc
index 1c19c9d594c..7dbe4172bb1 100644
--- a/docs/static/java-input.asciidoc
+++ b/docs/static/java-input.asciidoc
@@ -249,7 +249,7 @@ constructor at instantiation time.
 ==== Unit tests
 Lastly, but certainly not least importantly, unit tests are strongly encouraged.
 The example input plugin includes an 
-https://github.com/logstash-plugins/logstash-input-java_input_example/blob/master/src/test/java/org/logstash/javaapi/JavaInputExampleTest.java[example unit
+https://github.com/logstash-plugins/logstash-input-java_input_example/blob/main/src/test/java/org/logstash/javaapi/JavaInputExampleTest.java[example unit
 test] that you can use as a template for your own.
 
 // Pulls in shared section about Packaging and Deploying
diff --git a/docs/static/java-output.asciidoc b/docs/static/java-output.asciidoc
index c0027a49cb0..55b047ab971 100644
--- a/docs/static/java-output.asciidoc
+++ b/docs/static/java-output.asciidoc
@@ -230,7 +230,7 @@ constructor at instantiation time.
 
 Lastly, but certainly not least importantly, unit tests are strongly encouraged.
 The example output plugin includes an 
-https://github.com/logstash-plugins/logstash-output-java_output_example/blob/master/src/test/java/org/logstash/javaapi/JavaOutputExampleTest.java[example unit
+https://github.com/logstash-plugins/logstash-output-java_output_example/blob/main/src/test/java/org/logstash/javaapi/JavaOutputExampleTest.java[example unit
 test] that you can use as a template for your own.
 
 
diff --git a/docs/static/maintainer-guide.asciidoc b/docs/static/maintainer-guide.asciidoc
index ea4272a0089..edefdb81c3c 100644
--- a/docs/static/maintainer-guide.asciidoc
+++ b/docs/static/maintainer-guide.asciidoc
@@ -49,7 +49,7 @@ reviewing and merging patches.
 ==== Patch Requirements
 
 A patch is a minimal and accurate answer to exactly one identified and agreed upon problem. It must conform to the
-https://github.com/elastic/logstash/blob/master/STYLE.md[code style guidelines] and must include RSpec tests that verify
+https://github.com/elastic/logstash/blob/main/STYLE.md[code style guidelines] and must include RSpec tests that verify
 the fitness of the solution.
 
 A patch will be automatically tested by a CI system that will report on the Pull Request status.
@@ -88,7 +88,7 @@ Review non-source changes such as documentation in the same way as source code c
 [float]
 ==== Branch Management
 
-The plugin has a master branch that always holds the latest in-progress version and should always build.  Topic branches
+The plugin has a main branch that always holds the latest in-progress version and should always build.  Topic branches
 should kept to the minimum.
 
 [float]
@@ -106,7 +106,7 @@ Changes that are not user facing should be tagged as `internal:`.  For example:
 ===== Detailed format of CHANGELOG.md
 
 Sharing a similar format of CHANGELOG.md in plugins ease readability for users.
-Please see following annotated example and see a concrete example in https://raw.githubusercontent.com/logstash-plugins/logstash-filter-date/master/CHANGELOG.md[logstash-filter-date].
+Please see following annotated example and see a concrete example in https://raw.githubusercontent.com/logstash-plugins/logstash-filter-date/main/CHANGELOG.md[logstash-filter-date].
 
 [source,markdown]
 ----
diff --git a/docs/static/reserved-fields.asciidoc b/docs/static/reserved-fields.asciidoc
index d05fe9b7337..3b3bed559fe 100644
--- a/docs/static/reserved-fields.asciidoc
+++ b/docs/static/reserved-fields.asciidoc
@@ -15,7 +15,7 @@ Ruby-based Plugin API: value is an
 https://javadoc.io/static/org.jruby/jruby-core/9.2.5.0/org/jruby/RubyHash.html[org.jruby.RubyHash]. 
 
 Java-based Plugin API: value is an 
-https://github.com/elastic/logstash/blob/master/logstash-core/src/main/java/org/logstash/ConvertedMap.java[org.logstash.ConvertedMap].
+https://github.com/elastic/logstash/blob/main/logstash-core/src/main/java/org/logstash/ConvertedMap.java[org.logstash.ConvertedMap].
  
 In serialized form (such as JSON): a key/value map where the keys must be
 strings and the values are not constrained to a particular type.
diff --git a/docs/static/submitting-a-plugin.asciidoc b/docs/static/submitting-a-plugin.asciidoc
index 16e832a7031..b0f2b2280f2 100644
--- a/docs/static/submitting-a-plugin.asciidoc
+++ b/docs/static/submitting-a-plugin.asciidoc
@@ -7,7 +7,7 @@ Logstash users by publishing it to RubyGems.org.
 
 ==== Licensing
 Logstash and all its plugins are licensed under
-https://github.com/elasticsearch/logstash/blob/master/LICENSE[Apache License, version 2 ("ALv2")].
+https://github.com/elasticsearch/logstash/blob/main/LICENSE[Apache License, version 2 ("ALv2")].
 If you make your plugin publicly available via http://rubygems.org[RubyGems.org],
 please make sure to have this line in your gemspec:
 
