diff --git a/logstash-core/lib/logstash/agent.rb b/logstash-core/lib/logstash/agent.rb
index c1fcabe05f8..678cfa49cf1 100644
--- a/logstash-core/lib/logstash/agent.rb
+++ b/logstash-core/lib/logstash/agent.rb
@@ -107,7 +107,6 @@ def configure_metric
     if collect_metric?
       @logger.debug("Agent: Configuring metric collection")
       @metric = LogStash::Instrument::Metric.create
-      add_metric_pipeline
     else
       @metric = LogStash::Instrument::NullMetric.new
     end
@@ -119,28 +118,6 @@ def collect_metric?
     @collect_metric
   end
 
-  # Add a new pipeline sitting next to the main pipeline,
-  # This pipeline should only contains one input: the `metrics`
-  # and multiple shippers.
-  def add_metric_pipeline
-    @logger.debug("Agent: Adding metric pipeline")
-
-    metric_pipeline_config =<<-EOS
-      input {
-        metrics {}
-      }
-      output {
-        elasticsearch {
-          flush_size => 1
-          hosts => "127.0.0.1"
-          index => "metrics-%{+YYYY.MM.dd}"
-        }
-      }
-    EOS
-
-    @pipelines[:metric] = LogStash::Pipeline.new(metric_pipeline_config, { :pipeline_id => :metric })
-  end
-
   def pipeline_exist?(pipeline_id)
     !@pipelines[pipeline_id].nil?
   end
diff --git a/logstash-core/spec/logstash/runner_spec.rb b/logstash-core/spec/logstash/runner_spec.rb
index 3be5b5aa5d1..7ebc6744e21 100644
--- a/logstash-core/spec/logstash/runner_spec.rb
+++ b/logstash-core/spec/logstash/runner_spec.rb
@@ -121,7 +121,6 @@ def run(args); end
     context "when pipeline workers is not defined by the user" do
       it "should not pass the value to the pipeline" do
         expect(LogStash::Pipeline).to receive(:new).with(pipeline_string, hash_including(:pipeline_id => "base", :metric => anything)).and_return(pipeline)
-        expect(LogStash::Pipeline).to receive(:new).with(anything, hash_including(:pipeline_id => :metric)).and_return(pipeline)
 
         args = ["-e", pipeline_string]
         subject.run("bin/logstash", args)
@@ -132,7 +131,6 @@ def run(args); end
       it "should pass the value to the pipeline" do
         base_pipeline_settings[:pipeline_workers] = 2
         expect(LogStash::Pipeline).to receive(:new).with(pipeline_string, hash_including(:pipeline_id => "base", :pipeline_workers => 2, :metric => anything)).and_return(pipeline)
-        expect(LogStash::Pipeline).to receive(:new).with(anything, hash_including(:pipeline_id => :metric)).and_return(pipeline)
 
         args = ["-w", "2", "-e", pipeline_string]
         subject.run("bin/logstash", args)
