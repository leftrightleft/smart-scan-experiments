diff --git a/lib/logstash/filters/fingerprint.rb b/lib/logstash/filters/fingerprint.rb
index ce39d3c69e5..ec809657f9a 100644
--- a/lib/logstash/filters/fingerprint.rb
+++ b/lib/logstash/filters/fingerprint.rb
@@ -1,6 +1,7 @@
 # encoding: utf-8
 require "logstash/filters/base"
 require "logstash/namespace"
+require "base64"
 
 #  Fingerprint fields using by replacing values with a consistent hash.
 class LogStash::Filters::Fingerprint < LogStash::Filters::Base
@@ -14,6 +15,9 @@ class LogStash::Filters::Fingerprint < LogStash::Filters::Base
   # will overwrite current value of a field if it exists.
   config :target, :validate => :string, :default => 'fingerprint'
 
+  # Hash encoding for OpenSSL hashes.
+  config :encoding, :validate => [ 'hex', 'base64', 'base64url' ], :default => 'hex'
+
   # When used with IPV4_NETWORK method fill in the subnet prefix length
   # Not required for MURMUR3 or UUID methods
   # With other methods fill in the HMAC key
@@ -90,7 +94,13 @@ def anonymize_ipv4_network(ip_string)
   def anonymize_openssl(data)
     digest = encryption_algorithm()
     # in JRuby 1.7.11 outputs as ASCII-8BIT
-    OpenSSL::HMAC.hexdigest(digest, @key, data).force_encoding(Encoding::UTF_8)
+    if @encoding == 'base64'
+      Base64.strict_encode64(OpenSSL::HMAC.digest(digest, @key, data)).force_encoding(Encoding::UTF_8)
+    elsif @encoding == 'base64url'
+      Base64.urlsafe_encode64(OpenSSL::HMAC.digest(digest, @key, data)).force_encoding(Encoding::UTF_8)
+    else
+      OpenSSL::HMAC.hexdigest(digest, @key, data).force_encoding(Encoding::UTF_8)
+    end
   end
 
   def anonymize_murmur3(value)
diff --git a/spec/filters/fingerprint.rb b/spec/filters/fingerprint.rb
index 22fe49543f6..b1be7b18835 100644
--- a/spec/filters/fingerprint.rb
+++ b/spec/filters/fingerprint.rb
@@ -37,7 +37,7 @@
     end
   end
 
-   describe "fingerprint string with SHA1 alogrithm" do
+   describe "fingerprint string with SHA1 alogrithm and default hex encoding" do
     config <<-CONFIG
       filter {
         fingerprint {
@@ -53,6 +53,40 @@
     end
   end
 
+  describe "fingerprint string with SHA1 algorithm and base64 encoding" do
+    config <<-CONFIG
+      filter {
+        fingerprint {
+          source => ["clientip"]
+          key => "longencryptionkey"
+          method => 'SHA1'
+          encoding => 'base64'
+        }
+      }
+    CONFIG
+
+    sample("clientip" => "123.123.123.123") do
+      insist { subject["fingerprint"] } == "/cYKzEdz3FrFaf+3j8uTyWMHl/Q="
+    end
+  end
+
+  describe "fingerprint string with SHA1 algorithm and base64url encoding" do
+    config <<-CONFIG
+      filter {
+        fingerprint {
+          source => ["clientip"]
+          key => "longencryptionkey"
+          method => 'SHA1'
+          encoding => 'base64url'
+        }
+      }
+    CONFIG
+
+    sample("clientip" => "123.123.123.123") do
+      insist { subject["fingerprint"] } == "_cYKzEdz3FrFaf-3j8uTyWMHl_Q="
+    end
+  end
+
   describe "fingerprint string with SHA256 alogrithm" do
     config <<-CONFIG
       filter {
