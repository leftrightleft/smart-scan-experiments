diff --git a/logstash-core/src/main/java/org/logstash/config/ir/compiler/BaseDataset.java b/logstash-core/src/main/java/org/logstash/config/ir/compiler/BaseDataset.java
new file mode 100644
index 00000000000..7b4c2a011e7
--- /dev/null
+++ b/logstash-core/src/main/java/org/logstash/config/ir/compiler/BaseDataset.java
@@ -0,0 +1,21 @@
+package org.logstash.config.ir.compiler;
+
+/**
+ * Provides common behavior for Dataset classes generated by Java execution.
+ */
+public abstract class BaseDataset implements Dataset {
+    private boolean done;
+
+    protected void setDone() {
+        done = true;
+    }
+
+    protected void clearDone() {
+        done = false;
+    }
+
+    protected boolean isDone() {
+        return done;
+    }
+
+}
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/compiler/ComputeStepSyntaxElement.java b/logstash-core/src/main/java/org/logstash/config/ir/compiler/ComputeStepSyntaxElement.java
index 898286eb239..2cf86c28402 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/compiler/ComputeStepSyntaxElement.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/compiler/ComputeStepSyntaxElement.java
@@ -107,7 +107,7 @@ private String generateCode(final String name) {
         try {
             return REDUNDANT_SEMICOLON.matcher(new Formatter().formatSource(
                 String.format(
-                    "package org.logstash.generated;\npublic final class %s implements %s { %s }",
+                    "package org.logstash.generated;\npublic final class %s extends org.logstash.config.ir.compiler.BaseDataset implements %s { %s }",
                     name,
                     type.getName(),
                     SyntaxFactory.join(
diff --git a/logstash-core/src/main/java/org/logstash/config/ir/compiler/DatasetCompiler.java b/logstash-core/src/main/java/org/logstash/config/ir/compiler/DatasetCompiler.java
index 50b8d30f003..abdf6976464 100644
--- a/logstash-core/src/main/java/org/logstash/config/ir/compiler/DatasetCompiler.java
+++ b/logstash-core/src/main/java/org/logstash/config/ir/compiler/DatasetCompiler.java
@@ -278,18 +278,18 @@ event, computeDataset(par),
      */
     private static DatasetCompiler.ComputeAndClear withOutputBuffering(final Closure compute,
         final Closure clear, final ValueSyntaxElement outputBuffer, final ClassFields fields) {
-        final ValueSyntaxElement done = fields.add(boolean.class);
+        final SyntaxFactory.MethodCallReturnValue done = new SyntaxFactory.MethodCallReturnValue(SyntaxFactory.value("this"), "isDone");
         return computeAndClear(
             Closure.wrap(
                 SyntaxFactory.ifCondition(done, Closure.wrap(SyntaxFactory.ret(outputBuffer)))
             ).add(compute)
-                .add(SyntaxFactory.assignment(done, SyntaxFactory.identifier("true")))
+                .add(new SyntaxFactory.MethodCallReturnValue(SyntaxFactory.value("this"), "setDone"))
                 .add(SyntaxFactory.ret(outputBuffer)),
             Closure.wrap(
                 SyntaxFactory.ifCondition(
                     done, Closure.wrap(
                         clear.add(clear(outputBuffer)),
-                        SyntaxFactory.assignment(done, SyntaxFactory.identifier("false"))
+                        new SyntaxFactory.MethodCallReturnValue(SyntaxFactory.value("this"), "clearDone")
                     )
                 )
             ), fields
