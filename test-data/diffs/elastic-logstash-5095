diff --git a/README.md b/README.md
index 7d6389ea702..dceb10de62b 100644
--- a/README.md
+++ b/README.md
@@ -99,9 +99,9 @@ You can install the default set of plugins included in the logstash package or a
     rake test:install-all
 
 ---
-Note that if a plugin is installed using the plugin manager `bin/plugin install ...` do not forget to also install the plugins development dependencies using the following command after the plugin installation:
+Note that if a plugin is installed using the plugin manager `bin/logstash-plugin install ...` do not forget to also install the plugins development dependencies using the following command after the plugin installation:
 
-    bin/plugin install --development
+    bin/logstash-plugin install --development
 
 ## Developing plugins
 
diff --git a/docs/plugin-doc.asciidoc.erb b/docs/plugin-doc.asciidoc.erb
index e00319d537a..55fd81cff48 100644
--- a/docs/plugin-doc.asciidoc.erb
+++ b/docs/plugin-doc.asciidoc.erb
@@ -3,7 +3,7 @@
 === <%= name %>
 
 <% unless default_plugin %>
-NOTE: This is a community-maintained plugin! It does not ship with Logstash by default, but it is easy to install by running `bin/plugin install logstash-<%= section %>-<%= plugin_name %>`.
+NOTE: This is a community-maintained plugin! It does not ship with Logstash by default, but it is easy to install by running `bin/logstash-plugin install logstash-<%= section %>-<%= plugin_name %>`.
 <% end %>
 
 <%= description %>
diff --git a/docs/static/include/pluginbody.asciidoc b/docs/static/include/pluginbody.asciidoc
index 0627c6bff9b..98157fd1f73 100644
--- a/docs/static/include/pluginbody.asciidoc
+++ b/docs/static/include/pluginbody.asciidoc
@@ -845,7 +845,7 @@ Gem::Specification.new do |s|
   s.version = '0.1.0'
   s.licenses = ['Apache License (2.0)']
   s.summary = "This {plugintype} does x, y, z in Logstash"
-  s.description = "This gem is a logstash plugin required to be installed on top of the Logstash core pipeline using $LS_HOME/bin/plugin install gemname. This gem is not a stand-alone program"
+  s.description = "This gem is a logstash plugin required to be installed on top of the Logstash core pipeline using $LS_HOME/bin/logstash-plugin install gemname. This gem is not a stand-alone program"
   s.authors = ["Elastic"]
   s.email = 'info@elastic.co'
   s.homepage = "http://www.elastic.co/guide/en/logstash/current/index.html"
@@ -1051,7 +1051,7 @@ environment, and `0.1.0` with the correct version number from the gemspec file.
 [source,sh]
 [subs="attributes"]
 ----------------------------------
-bin/plugin install /my/logstash/plugins/logstash-{plugintype}-{pluginname}/logstash-{plugintype}-{pluginname}-0.1.0.gem
+bin/logstash-plugin install /my/logstash/plugins/logstash-{plugintype}-{pluginname}/logstash-{plugintype}-{pluginname}-0.1.0.gem
 ----------------------------------
 +
 * After running this, you should see feedback from Logstash that it was
@@ -1072,7 +1072,7 @@ currently available:
 
 [source,sh]
 ----------------------------------
-bin/plugin list
+bin/logstash-plugin list
 ----------------------------------
 Depending on what you have installed, you might see a short or long list of
 plugins: inputs, codecs, filters and outputs.
@@ -1275,7 +1275,7 @@ by running:
 [source,sh]
 [subs="attributes"]
 ----------------------------------
-bin/plugin install logstash-{plugintype}-mypluginname
+bin/logstash-plugin install logstash-{plugintype}-mypluginname
 ----------------------------------
 
 ==== Contributing your source code to https://github.com/logstash-plugins[logstash-plugins]
diff --git a/docs/static/offline-plugins.asciidoc b/docs/static/offline-plugins.asciidoc
index c5f20e29aea..e099faec8a8 100644
--- a/docs/static/offline-plugins.asciidoc
+++ b/docs/static/offline-plugins.asciidoc
@@ -20,18 +20,18 @@ all available plugins. You can distribute this bundle to all nodes without furth
 Working with offline plugins requires you to create an _offline package_, which is a compressed file that contains all of
 the plugins your offline Logstash installation requires, along with the dependencies for those plugins.
 
-. Create the offline package with the `bin/plugin pack` subcommand.
+. Create the offline package with the `bin/logstash-plugin pack` subcommand.
 +
-When you run the `bin/plugin pack` subcommand, Logstash creates a compressed bundle that contains all of the currently
+When you run the `bin/logstash-plugin pack` subcommand, Logstash creates a compressed bundle that contains all of the currently
 installed plugins and the dependencies for those plugins. By default, the compressed bundle is a GZipped TAR file when you
-run the `bin/plugin pack` subcommand on a UNIX machine. By default, when you run the `bin/plugin pack` subcommand on a
+run the `bin/logstash-plugin pack` subcommand on a UNIX machine. By default, when you run the `bin/logstash-plugin pack` subcommand on a
 Windows machine, the compressed bundle is a ZIP file. See <<managing-packs,Managing Plugin Packs>> for details on changing
 these default behaviors.
 +
 NOTE: Downloading all dependencies for the specified plugins may take some time, depending on the plugins listed.
 
 . Move the compressed bundle to the offline machines that are the source for offline plugin installation, then use the
-`bin/plugin unpack` subcommand to make the packaged plugins available.
+`bin/logstash-plugin unpack` subcommand to make the packaged plugins available.
 
 [float]
 === Install or Update a local plugin
@@ -41,24 +41,24 @@ examples:
 
 .Installing a local plugin
 ============
-`bin/plugin install --local logstash-input-jdbc`
+`bin/logstash-plugin install --local logstash-input-jdbc`
 ============
 
 .Updating a local plugin
 ============
-`bin/plugin update --local logstash-input-jdbc`
+`bin/logstash-plugin update --local logstash-input-jdbc`
 ============
 
 .Updating all local plugins in one command
 ============
-`bin/plugin update --local`
+`bin/logstash-plugin update --local`
 ============
 
 [float]
 [[managing-packs]]
 === Managing Plugin Packs
 
-The `pack` and `unpack` subcommands for `bin/plugin` take the following options:
+The `pack` and `unpack` subcommands for `bin/logstash-plugin` take the following options:
 
 [horizontal]
 `--tgz`:: Generate the offline package as a GZipped TAR file. The default behavior on UNIX systems.
diff --git a/docs/static/plugin-manager.asciidoc b/docs/static/plugin-manager.asciidoc
index de4587332b7..75d297f2a52 100644
--- a/docs/static/plugin-manager.asciidoc
+++ b/docs/static/plugin-manager.asciidoc
@@ -2,7 +2,7 @@
 == Working with plugins
 
 Logstash has a rich collection of input, filter, codec and output plugins. Plugins are available as self-contained
-packages called gems and hosted on RubyGems.org. The plugin manager accesed via `bin/plugin` script is used to manage the
+packages called gems and hosted on RubyGems.org. The plugin manager accesed via `bin/logstash-plugin` script is used to manage the
 lifecycle of plugins in your Logstash deployment. You can install, uninstall and upgrade plugins using these Command Line
 Interface (CLI) described below.
 
@@ -15,10 +15,10 @@ available in your deployment:
 
 [source,shell]
 ----------------------------------
-bin/plugin list <1>
-bin/plugin list --verbose <2>
-bin/plugin list *namefragment* <3>
-bin/plugin list --group output <4>
+bin/logstash-plugin list <1>
+bin/logstash-plugin list --verbose <2>
+bin/logstash-plugin list *namefragment* <3>
+bin/logstash-plugin list --group output <4>
 ----------------------------------
 <1> Will list all installed plugins
 
@@ -38,7 +38,7 @@ installation.
 
 [source,shell]
 ----------------------------------
-bin/plugin install logstash-output-kafka
+bin/logstash-plugin install logstash-output-kafka
 ----------------------------------
 
 Once the plugin is successfully installed, you can start using it in your configuration file.
@@ -52,7 +52,7 @@ provides you the option to install a locally built plugin which is packaged as a
 
 [source,shell]
 ----------------------------------
-bin/plugin install /path/to/logstash-output-kafka-1.0.0.gem
+bin/logstash-plugin install /path/to/logstash-output-kafka-1.0.0.gem
 ----------------------------------
 
 [[installing-local-plugins-path]]
@@ -76,8 +76,8 @@ subcommand you can get the latest or update to a particular version of the plugi
 
 [source,shell]
 ----------------------------------
-bin/plugin update <1>
-bin/plugin update logstash-output-kafka <2>
+bin/logstash-plugin update <1>
+bin/logstash-plugin update logstash-output-kafka <2>
 ----------------------------------
 <1> will update all installed plugins
 
@@ -91,7 +91,7 @@ If you need to remove plugins from your Logstash installation:
 
 [source,shell]
 ----------------------------------
-bin/plugin uninstall logstash-output-kafka
+bin/logstash-plugin uninstall logstash-output-kafka
 ----------------------------------
 
 [[proxy-plugins]]
@@ -106,7 +106,7 @@ Proxy is used to handle HTTP requests. Logstash Plugins can be installed and upd
 ----------------------------------
 export HTTP_PROXY=http://127.0.0.1:3128
 
-bin/plugin install logstash-output-kafka
+bin/logstash-plugin install logstash-output-kafka
 ----------------------------------
 
 Once set, plugin commands install, update can be used through this proxy.
diff --git a/docs/static/submitting-a-plugin.asciidoc b/docs/static/submitting-a-plugin.asciidoc
index d85db91a8ff..057a27925ab 100644
--- a/docs/static/submitting-a-plugin.asciidoc
+++ b/docs/static/submitting-a-plugin.asciidoc
@@ -65,7 +65,7 @@ by running:
 [source,sh]
 [subs="attributes"]
 ----------------------------------
-bin/plugin install logstash-{plugintype}-mypluginname
+bin/logstash-plugin install logstash-{plugintype}-mypluginname
 ----------------------------------
 
 ==== Contributing your source code to https://github.com/logstash-plugins[logstash-plugins]
diff --git a/docs/static/upgrading.asciidoc b/docs/static/upgrading.asciidoc
index a4465decc2e..d30e2797ce7 100644
--- a/docs/static/upgrading.asciidoc
+++ b/docs/static/upgrading.asciidoc
@@ -69,7 +69,7 @@ These plugin updates are available for Logstash 2.0. To upgrade to the latest ve
 plugins, the command is:
 
 [source,shell]
-bin/plugin update <plugin_name>
+bin/logstash-plugin update <plugin_name>
 
 **Multiline Filter:** If you are using the Multiline Filter in your configuration and upgrade to Logstash 2.0,
 you will get an error. Make sure to explicitly set the number of filter workers (`-w`) to `1`. You can set the number
diff --git a/lib/bootstrap/environment.rb b/lib/bootstrap/environment.rb
index 50f2211160a..dc5a99bbaa4 100644
--- a/lib/bootstrap/environment.rb
+++ b/lib/bootstrap/environment.rb
@@ -57,7 +57,7 @@ def pattern_path(path)
 end
 
 
-# when launched as a script, not require'd, (currently from bin/logstash and bin/plugin) the first
+# when launched as a script, not require'd, (currently from bin/logstash and bin/logstash-plugin) the first
 # argument is the path of a Ruby file to require and a LogStash::Runner class is expected to be
 # defined and exposing the LogStash::Runner#main instance method which will be called with the current ARGV
 # currently lib/logstash/runner.rb and lib/pluginmanager/main.rb are called using this.
diff --git a/lib/pluginmanager/install.rb b/lib/pluginmanager/install.rb
index 27c865ca68e..dae85e3dfc5 100644
--- a/lib/pluginmanager/install.rb
+++ b/lib/pluginmanager/install.rb
@@ -10,7 +10,7 @@ class LogStash::PluginManager::Install < LogStash::PluginManager::Command
   option "--version", "VERSION", "version of the plugin to install"
   option "--[no-]verify", :flag, "verify plugin validity before installation", :default => true
   option "--development", :flag, "install all development dependencies of currently installed plugins", :default => false
-  option "--local", :flag, "force local-only plugin installation. see bin/plugin package|unpack", :default => false
+  option "--local", :flag, "force local-only plugin installation. see bin/logstash-plugin package|unpack", :default => false
 
   # the install logic below support installing multiple plugins with each a version specification
   # but the argument parsing does not support it for now so currently if specifying --version only
@@ -112,7 +112,7 @@ def install_gems_list!(install_list)
 
   # Extract the specified local gems in a predefined local path
   # Update the gemfile to use a relative path to this plugin and run
-  # Bundler, this will mark the gem not updatable by `bin/plugin update`
+  # Bundler, this will mark the gem not updatable by `bin/logstash-plugin update`
   # This is the most reliable way to make it work in bundler without
   # hacking with `how bundler works`
   #
diff --git a/lib/pluginmanager/list.rb b/lib/pluginmanager/list.rb
index b4b96cafbc3..65f28c31cc0 100644
--- a/lib/pluginmanager/list.rb
+++ b/lib/pluginmanager/list.rb
@@ -6,7 +6,7 @@ class LogStash::PluginManager::List < LogStash::PluginManager::Command
 
   parameter "[PLUGIN]", "Part of plugin name to search for, leave empty for all plugins"
 
-  option "--installed", :flag, "List only explicitly installed plugins using bin/plugin install ...", :default => false
+  option "--installed", :flag, "List only explicitly installed plugins using bin/logstash-plugin install ...", :default => false
   option "--verbose", :flag, "Also show plugin version number", :default => false
   option "--group", "NAME", "Filter plugins per group: input, output, filter or codec" do |arg|
     raise(ArgumentError, "should be one of: input, output, filter or codec") unless ['input', 'output', 'filter', 'codec'].include?(arg)
diff --git a/lib/pluginmanager/unpack.rb b/lib/pluginmanager/unpack.rb
index 4e7da6fb94e..7937e7d2e24 100644
--- a/lib/pluginmanager/unpack.rb
+++ b/lib/pluginmanager/unpack.rb
@@ -14,7 +14,7 @@ def execute
     validate_cache_location
     archive_manager.extract(package_file, LogStash::Environment::CACHE_PATH)
     puts("Unpacked at #{LogStash::Environment::CACHE_PATH}")
-    puts("The unpacked plugins can now be installed in local-only mode using bin/plugin install --local [plugin name]")
+    puts("The unpacked plugins can now be installed in local-only mode using bin/logstash-plugin install --local [plugin name]")
   end
 
   private
diff --git a/lib/pluginmanager/update.rb b/lib/pluginmanager/update.rb
index 64c9767ea57..fd840e91183 100644
--- a/lib/pluginmanager/update.rb
+++ b/lib/pluginmanager/update.rb
@@ -9,7 +9,7 @@ class LogStash::PluginManager::Update < LogStash::PluginManager::Command
 
   parameter "[PLUGIN] ...", "Plugin name(s) to upgrade to latest version", :attribute_name => :plugins_arg
   option "--[no-]verify", :flag, "verify plugin validity before installation", :default => true
-  option "--local", :flag, "force local-only plugin update. see bin/plugin package|unpack", :default => false
+  option "--local", :flag, "force local-only plugin update. see bin/logstash-plugin package|unpack", :default => false
 
   def execute
     local_gems = gemfile.locally_installed_gems
diff --git a/rakelib/package.rake b/rakelib/package.rake
index d39578e0408..73885a013d2 100644
--- a/rakelib/package.rake
+++ b/rakelib/package.rake
@@ -1,7 +1,7 @@
 namespace "package" do
 
   task "bundle" do
-    system("bin/plugin", "pack")
+    system("bin/logstash-plugin", "pack")
     raise(RuntimeError, $!.to_s) unless $?.success?
   end
 
