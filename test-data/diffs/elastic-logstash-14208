diff --git a/logstash-core/spec/logstash/java_integration_spec.rb b/logstash-core/spec/logstash/java_integration_spec.rb
index bf471b0d26b..88e9cdc296b 100644
--- a/logstash-core/spec/logstash/java_integration_spec.rb
+++ b/logstash-core/spec/logstash/java_integration_spec.rb
@@ -97,7 +97,7 @@
   context "Java::JavaUtil::Collection" do
     subject{Java::JavaUtil::ArrayList.new(initial_array)}
 
-    context "when inspecting" do
+    context "when inspecting a list" do
       let(:items) { [:a, {:b => :c}] }
       subject { java.util.ArrayList.new(items) }
 
@@ -108,9 +108,20 @@
       it "should include the class name" do
         expect(subject.inspect).to include("ArrayList")
       end
+    end
+
+    context "when inspecting a set" do
+      let(:items) { [:foo, 'bar'] }
+      subject { java.util.HashSet.new(items) }
+
+      it "should include the contents" do
+        expect(subject.inspect).to include 'bar'
+      end
+
+      it "should include the class name" do
+        expect(subject.inspect).to include("HashSet")
 
-      it "should include the hash code of the collection" do
-        expect(subject.inspect).to include(subject.hashCode.to_s)
+        expect(java.util.TreeSet.new.inspect).to include("TreeSet")
       end
     end
 
diff --git a/logstash-core/src/main/java/org/logstash/RubyJavaIntegration.java b/logstash-core/src/main/java/org/logstash/RubyJavaIntegration.java
index d3d15c118cc..ee2e088bf41 100644
--- a/logstash-core/src/main/java/org/logstash/RubyJavaIntegration.java
+++ b/logstash-core/src/main/java/org/logstash/RubyJavaIntegration.java
@@ -213,15 +213,6 @@ public static IRubyObject or(final ThreadContext context, final IRubyObject self
             return JavaUtil.convertJavaToUsableRubyObject(context.runtime, dup);
         }
 
-        @JRubyMethod
-        public static IRubyObject inspect(final ThreadContext context, final IRubyObject self) {
-            return RubyString.newString(context.runtime, new StringBuilder("<")
-                .append(self.getMetaClass().name().asJavaString()).append(':')
-                .append(self.hashCode()).append(' ').append(self.convertToArray().inspect())
-                .append('>').toString()
-            );
-        }
-
         private static boolean removeNilAndNull(final Collection<?> collection) {
             final boolean res = collection.removeAll(NIL_COLLECTION);
             return collection.removeAll(NULL_COLLECTION) || res;
