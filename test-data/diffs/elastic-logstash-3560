diff --git a/lib/logstash/runner.rb b/lib/logstash/runner.rb
index 9f425a6f8bb..97915be24da 100644
--- a/lib/logstash/runner.rb
+++ b/lib/logstash/runner.rb
@@ -40,14 +40,6 @@ def main(args)
   def run(args)
     command = args.shift
     commands = {
-      "version" => lambda do
-        require "logstash/agent"
-        agent_args = ["--version"]
-        if args.include?("--verbose")
-          agent_args << "--verbose"
-        end
-        return LogStash::Agent.run($0, agent_args)
-      end,
       "irb" => lambda do
         require "irb"
         return IRB.start(__FILE__)
@@ -103,16 +95,8 @@ def run(args)
           $stderr.puts "No such command #{command.inspect}"
         end
       end
-      $stderr.puts %q[
-Usage: logstash <command> [command args]
-Run a command with the --help flag to see the arguments.
-For example: logstash agent --help
-
-Available commands:
-  agent - runs the logstash agent
-  version - emits version info about this logstash
-]
-      #$stderr.puts commands.keys.map { |s| "  #{s}" }.join("\n")
+      require "logstash/agent"
+      $stderr.puts LogStash::Agent.help("bin/logstash")
       return Stud::Task.new { 1 }
     end
   end # def run
diff --git a/spec/core/runner_spec.rb b/spec/core/runner_spec.rb
index 7f22bdd7f49..132b2911992 100644
--- a/spec/core/runner_spec.rb
+++ b/spec/core/runner_spec.rb
@@ -1,6 +1,7 @@
 require "spec_helper"
 require "logstash/runner"
 require "stud/task"
+require "logstash/agent"
 
 class NullRunner
   def run(args); end
@@ -21,19 +22,24 @@ def run(args); end
       expect(subject.run(args).wait).to eq(0)
     end
 
-    it "should show help with no arguments" do
-      expect($stderr).to receive(:puts).once.and_return("No command given")
-      expect($stderr).to receive(:puts).once
+    context "empty arguments" do
       args = []
-      expect(subject.run(args).wait).to eq(1)
+      it "should show agent help" do
+        expect(LogStash::Agent).to receive(:help).once
+        expect($stderr).to receive(:puts).once.with("No command given")
+        expect($stderr).to receive(:puts).once
+        expect(subject.run(args).wait).to eq(1)
+      end
     end
 
-    it "should show help for unknown commands" do
-      expect($stderr).to receive(:puts).once.and_return("No such command welp")
-      expect($stderr).to receive(:puts).once
+    context "unknown command" do
       args = ["welp"]
-      expect(subject.run(args).wait).to eq(1)
+      it "should show agent help" do
+        expect(LogStash::Agent).to receive(:help).once
+        expect($stderr).to receive(:puts).once.with("No such command \"welp\"")
+        expect($stderr).to receive(:puts).once
+        expect(subject.run(args).wait).to eq(1)
+      end
     end
-
   end
 end
