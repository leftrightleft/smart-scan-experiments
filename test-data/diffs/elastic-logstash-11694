diff --git a/logstash-core/lib/logstash/compiler/lscl.rb b/logstash-core/lib/logstash/compiler/lscl.rb
index d658bf25788..7c3b6f09448 100644
--- a/logstash-core/lib/logstash/compiler/lscl.rb
+++ b/logstash-core/lib/logstash/compiler/lscl.rb
@@ -131,7 +131,7 @@ def expr
 
   class Attribute < Node
     def expr
-      [name.text_value, value.expr]
+      [name.is_a?(AST::String) ? name.text_value[1...-1] : name.text_value, value.expr]
     end
   end
 
diff --git a/logstash-core/spec/logstash/compiler/compiler_spec.rb b/logstash-core/spec/logstash/compiler/compiler_spec.rb
index 55732b414d8..703fb619321 100644
--- a/logstash-core/spec/logstash/compiler/compiler_spec.rb
+++ b/logstash-core/spec/logstash/compiler/compiler_spec.rb
@@ -226,6 +226,21 @@ def rand_meta
         end
       end
 
+      describe "a plugin with quoted parameter keys" do
+        let(:plugin_source) { "generator { notquoted => 1 'singlequoted' => 2 \"doublequoted\" => 3}" }
+        let(:expected_plugin_args) do
+          {
+            "notquoted" => 1,
+            "singlequoted" => 2,
+            "doublequoted" => 3,
+          }
+        end
+
+        it "should contain the plugin" do
+          expect(c_plugin).to ir_eql(j.iPlugin(rand_meta, INPUT, "generator", expected_plugin_args))
+        end
+      end
+
       describe "a plugin with multiple array parameter types" do
         let(:plugin_source) { "generator { aarg => [1] aarg => [2] aarg => [3]}" }
         let(:expected_plugin_args) do
