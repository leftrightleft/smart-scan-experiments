diff --git a/logstash-core/lib/logstash/config/lir_serializer.rb b/logstash-core/lib/logstash/config/lir_serializer.rb
index 9826d3217f7..6740ae70e75 100644
--- a/logstash-core/lib/logstash/config/lir_serializer.rb
+++ b/logstash-core/lib/logstash/config/lir_serializer.rb
@@ -26,7 +26,7 @@ class LIRSerializer
     def self.serialize(lir_pipeline)
       self.new(lir_pipeline).serialize
     end
-    
+
     def initialize(lir_pipeline)
       @lir_pipeline = lir_pipeline
     end
@@ -44,11 +44,11 @@ def serialize
     end
     
     def vertices
-      graph.getVertices.map {|v| vertex(v) }
+      graph.getVertices.map {|v| vertex(v) }.compact
     end
     
     def edges
-      graph.getEdges.map {|e| edge(e) }
+      remove_separators_from_edges(graph.getEdges)
     end
     
     def graph
@@ -64,10 +64,10 @@ def vertex(v)
                          when :queue
                            queue_vertex(v)
                          when :separator
-                           separator_vertex(v)
+                           nil
                          end
 
-      decorate_vertex(v, hashified_vertex)
+      decorate_vertex(v, hashified_vertex) unless hashified_vertex.nil?
     end
     
     def vertex_type(v)
@@ -114,6 +114,28 @@ def separator_vertex(v)
       {}
     end
 
+    # For separators, create new edges going between the incoming and all of the outgoing edges, and remove
+    # the separator vertices from the serialized output.
+    def remove_separators_from_edges(edges)
+      edges_with_separators_removed = []
+      edges.each do |e|
+        if vertex_type(e.to) == :separator
+          e.to.getOutgoingEdges.each do |outgoing|
+            if e.java_kind_of?(org.logstash.config.ir.graph.BooleanEdge)
+              edges_with_separators_removed << edge(org.logstash.config.ir.graph.BooleanEdge.new(e.edgeType, e.from, outgoing.to))
+            else
+              edges_with_separators_removed << edge(org.logstash.config.ir.graph.PlainEdge.factory.make(e.from, outgoing.to))
+            end
+          end
+        elsif vertex_type(e.from) == :separator
+          # Skip the edges coming from the 'from' separator
+        else
+          edges_with_separators_removed << edge(e)
+        end
+      end
+      edges_with_separators_removed
+    end
+
     def edge(e)
       e_json = {
         "from" => e.from.id,
diff --git a/x-pack/spec/monitoring/inputs/metrics/state_event/lir_serializer_spec.rb b/x-pack/spec/monitoring/inputs/metrics/state_event/lir_serializer_spec.rb
index b4c2c64dd53..1c4b1b99484 100644
--- a/x-pack/spec/monitoring/inputs/metrics/state_event/lir_serializer_spec.rb
+++ b/x-pack/spec/monitoring/inputs/metrics/state_event/lir_serializer_spec.rb
@@ -10,7 +10,7 @@
     <<-EOC
       input { fake_input {} }
       filter { 
-        if ([foo] > 2) {
+        if ([foo] < 2) {
           fake_filter {} 
         }
       }
