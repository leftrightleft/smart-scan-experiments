diff --git a/lib/logstash/inputs/imap.rb b/lib/logstash/inputs/imap.rb
index caa9a42cef2..5e5837660a9 100644
--- a/lib/logstash/inputs/imap.rb
+++ b/lib/logstash/inputs/imap.rb
@@ -105,9 +105,11 @@ def parse_mail(mail)
       else
         name = header.name.to_s
       end
-      # Call .to_s on the value just in case it's some weird Mail:: object
-      # thing.
-      value = header.value.to_s
+      # Call .decoded on the header in case it's in encoded-word form.
+      # Details at:
+      #   https://github.com/mikel/mail/blob/master/README.md#encodings
+      #   http://tools.ietf.org/html/rfc2047#section-2
+      value = header.decoded
 
       # Assume we already processed the 'date' above.
       next if name == "Date"
diff --git a/spec/inputs/imap.rb b/spec/inputs/imap.rb
index 476e8e111e9..ebe8ddff5d0 100644
--- a/spec/inputs/imap.rb
+++ b/spec/inputs/imap.rb
@@ -44,4 +44,17 @@
     end
   end
 
+  context "when subject is in RFC 2047 encoded-word format" do
+    it "should be decoded" do
+      msg.subject = "=?iso-8859-1?Q?foo_:_bar?="
+      config = {"type" => "imap", "host" => "localhost",
+                "user" => "#{user}", "password" => "#{password}"}
+
+      input = LogStash::Inputs::IMAP.new config
+      input.register
+      event = input.parse_mail(msg)
+      insist { event["subject"] } == "foo : bar"
+    end
+  end
+
 end
