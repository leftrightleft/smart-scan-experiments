diff --git a/logstash-core/lib/logstash/api/app_helpers.rb b/logstash-core/lib/logstash/api/app_helpers.rb
index 33521d701fe..a235f809ac8 100644
--- a/logstash-core/lib/logstash/api/app_helpers.rb
+++ b/logstash-core/lib/logstash/api/app_helpers.rb
@@ -7,11 +7,10 @@ def respond_with(data, options={})
     as     = options.fetch(:as, :json)
     pretty = params.has_key?("pretty")
 
-    unless options.include?(:exclude_default_metadata)
-      data = default_metadata.merge(data)
-    end
-    
     if as == :json
+      unless options.include?(:exclude_default_metadata)
+        data = default_metadata.merge(data)
+      end
       content_type "application/json"
       LogStash::Json.dump(data, {:pretty => pretty})
     else
diff --git a/logstash-core/lib/logstash/api/commands/node.rb b/logstash-core/lib/logstash/api/commands/node.rb
index c8dcc1446be..53962a953d5 100644
--- a/logstash-core/lib/logstash/api/commands/node.rb
+++ b/logstash-core/lib/logstash/api/commands/node.rb
@@ -62,7 +62,7 @@ def initialize(cmd, options)
           end
           
           def to_s
-            hash = to_hash
+            hash = to_hash[:hot_threads]
             report =  "#{I18n.t("logstash.web_api.hot_threads.title", :hostname => hash[:hostname], :time => hash[:time], :top_count => @thread_dump.top_count )} \n"
             report << '=' * 80
             report << "\n"
@@ -98,7 +98,7 @@ def to_hash
               thread[:traces] = traces unless traces.empty?
               hash[:threads] << thread
             end
-            hash
+            { :hot_threads => hash }
           end
 
           def cpu_time_as_percent(hash)
diff --git a/logstash-core/lib/logstash/api/modules/node.rb b/logstash-core/lib/logstash/api/modules/node.rb
index 2ba3f933e77..043b5faf2a8 100644
--- a/logstash-core/lib/logstash/api/modules/node.rb
+++ b/logstash-core/lib/logstash/api/modules/node.rb
@@ -35,7 +35,7 @@ def node
           options[:threads] = params["threads"].to_i if params.has_key?("threads")
 
           as = options[:human] ? :string : :json
-          respond_with({:hot_threads => node.hot_threads(options)}, {:as => as})
+          respond_with(node.hot_threads(options), {:as => as})
         end       
       end
     end
