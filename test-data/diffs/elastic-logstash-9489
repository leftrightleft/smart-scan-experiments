diff --git a/logstash-core/lib/logstash/agent.rb b/logstash-core/lib/logstash/agent.rb
index f5a3178a5c4..532bf9989cc 100644
--- a/logstash-core/lib/logstash/agent.rb
+++ b/logstash-core/lib/logstash/agent.rb
@@ -1,6 +1,5 @@
 # encoding: utf-8
 require "logstash/environment"
-require "logstash/errors"
 require "logstash/config/cpu_core_strategy"
 require "logstash/instrument/collector"
 require "logstash/instrument/periodic_pollers"
diff --git a/logstash-core/lib/logstash/bootstrap_check/bad_java.rb b/logstash-core/lib/logstash/bootstrap_check/bad_java.rb
index 5bbcd1f47fe..ab8bbb7896d 100644
--- a/logstash-core/lib/logstash/bootstrap_check/bad_java.rb
+++ b/logstash-core/lib/logstash/bootstrap_check/bad_java.rb
@@ -1,7 +1,6 @@
 # encoding: utf-8
 require "logstash/util"
 require "logstash/util/java_version"
-require "logstash/errors"
 
 module LogStash module BootstrapCheck
   class BadJava
diff --git a/logstash-core/lib/logstash/bootstrap_check/bad_ruby.rb b/logstash-core/lib/logstash/bootstrap_check/bad_ruby.rb
index 609be17bea5..b590fc9f966 100644
--- a/logstash-core/lib/logstash/bootstrap_check/bad_ruby.rb
+++ b/logstash-core/lib/logstash/bootstrap_check/bad_ruby.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/errors"
 
 module LogStash module BootstrapCheck
   class BadRuby
diff --git a/logstash-core/lib/logstash/bootstrap_check/default_config.rb b/logstash-core/lib/logstash/bootstrap_check/default_config.rb
index a2de1dadb9a..228f63b8ef3 100644
--- a/logstash-core/lib/logstash/bootstrap_check/default_config.rb
+++ b/logstash-core/lib/logstash/bootstrap_check/default_config.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/errors"
 require "logstash/logging"
 
 module LogStash module BootstrapCheck
diff --git a/logstash-core/lib/logstash/bootstrap_check/persisted_queue_config.rb b/logstash-core/lib/logstash/bootstrap_check/persisted_queue_config.rb
index ced69dd9b00..0c0292d29af 100644
--- a/logstash-core/lib/logstash/bootstrap_check/persisted_queue_config.rb
+++ b/logstash-core/lib/logstash/bootstrap_check/persisted_queue_config.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require 'logstash/errors'
 
 module LogStash
   module BootstrapCheck
diff --git a/logstash-core/lib/logstash/compiler/lscl.rb b/logstash-core/lib/logstash/compiler/lscl.rb
index 5cfb2fbc29d..4bcad68e0f1 100644
--- a/logstash-core/lib/logstash/compiler/lscl.rb
+++ b/logstash-core/lib/logstash/compiler/lscl.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require 'logstash/errors'
 require "treetop"
 require "logstash/compiler/treetop_monkeypatches"
 require "logstash/compiler/lscl/helpers"
diff --git a/logstash-core/lib/logstash/config/config_ast.rb b/logstash-core/lib/logstash/config/config_ast.rb
index 510d95afec5..e34e64b7366 100644
--- a/logstash-core/lib/logstash/config/config_ast.rb
+++ b/logstash-core/lib/logstash/config/config_ast.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require 'logstash/errors'
 require "logstash/compiler/lscl/helpers"
 require "treetop"
 
diff --git a/logstash-core/lib/logstash/config/file.rb b/logstash-core/lib/logstash/config/file.rb
index c18427b7c10..3dd6289f53e 100644
--- a/logstash-core/lib/logstash/config/file.rb
+++ b/logstash-core/lib/logstash/config/file.rb
@@ -1,7 +1,6 @@
 # encoding: utf-8
 require "logstash/config/grammar"
 require "logstash/config/config_ast"
-require "logstash/errors"
 require "logger"
 
 class LogStash::Config::File
diff --git a/logstash-core/lib/logstash/config/modules_common.rb b/logstash-core/lib/logstash/config/modules_common.rb
index fb6c81c5107..9d608322035 100644
--- a/logstash-core/lib/logstash/config/modules_common.rb
+++ b/logstash-core/lib/logstash/config/modules_common.rb
@@ -5,7 +5,6 @@
 require "logstash/modules/elasticsearch_importer"
 require "logstash/modules/kibana_importer"
 require "logstash/modules/settings_merger"
-require "logstash/errors"
 
 module LogStash module Config
   class ModulesCommon # extracted here for bwc with 5.x
diff --git a/logstash-core/lib/logstash/config/source/local.rb b/logstash-core/lib/logstash/config/source/local.rb
index 897738e12f6..ec068bb4ad6 100644
--- a/logstash-core/lib/logstash/config/source/local.rb
+++ b/logstash-core/lib/logstash/config/source/local.rb
@@ -2,7 +2,6 @@
 require "logstash/config/source/base"
 require "logstash/config/pipeline_config"
 require "logstash/util/loggable"
-require "logstash/errors"
 require "uri"
 
 module LogStash module Config module Source
@@ -72,7 +71,7 @@ def read
 
           config_string = ::File.read(file)
           config_string.force_encoding("UTF-8")
-          
+
           if config_string.valid_encoding?
             part = org.logstash.common.SourceWithMetadata.new("file", file, 0, 0, config_string)
             config_parts << part
diff --git a/logstash-core/lib/logstash/config/source/modules.rb b/logstash-core/lib/logstash/config/source/modules.rb
index ed39e9aa817..4473b0a4fec 100644
--- a/logstash-core/lib/logstash/config/source/modules.rb
+++ b/logstash-core/lib/logstash/config/source/modules.rb
@@ -3,7 +3,6 @@
 require "logstash/config/modules_common"
 require "logstash/config/pipeline_config"
 require "logstash/util/loggable"
-require "logstash/errors"
 
 module LogStash module Config module Source
   class Modules < Base
diff --git a/logstash-core/lib/logstash/config/source_loader.rb b/logstash-core/lib/logstash/config/source_loader.rb
index fff5acf585a..64e82befb95 100644
--- a/logstash-core/lib/logstash/config/source_loader.rb
+++ b/logstash-core/lib/logstash/config/source_loader.rb
@@ -2,7 +2,6 @@
 require "logstash/config/source/local"
 require "logstash/config/source/modules"
 require "logstash/config/source/multi_local"
-require "logstash/errors"
 require "thread"
 require "set"
 
diff --git a/logstash-core/lib/logstash/converge_result.rb b/logstash-core/lib/logstash/converge_result.rb
index d0dc0e1c4a4..020c6cc725e 100644
--- a/logstash-core/lib/logstash/converge_result.rb
+++ b/logstash-core/lib/logstash/converge_result.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require "logstash/errors"
 
 module LogStash
   # This class allow us to keep track and uniform all the return values from the
diff --git a/logstash-core/lib/logstash/environment.rb b/logstash-core/lib/logstash/environment.rb
index f08b67b003d..b0606e88bdf 100644
--- a/logstash-core/lib/logstash/environment.rb
+++ b/logstash-core/lib/logstash/environment.rb
@@ -1,6 +1,5 @@
 # encoding: utf-8
 require "logstash-core/logstash-core"
-require "logstash/errors"
 require "logstash/config/cpu_core_strategy"
 require "logstash/settings"
 require "logstash/util/cloud_setting_id"
diff --git a/logstash-core/lib/logstash/errors.rb b/logstash-core/lib/logstash/errors.rb
index 11662f3decc..cf7879f56b6 100644
--- a/logstash-core/lib/logstash/errors.rb
+++ b/logstash-core/lib/logstash/errors.rb
@@ -1,15 +1 @@
-# encoding: utf-8
-
-module LogStash
-  class EnvironmentError < Error; end
-  class ConfigurationError < Error; end
-  class PluginLoadingError < Error; end
-  class ShutdownSignal < StandardError; end
-  class PluginNoVersionError < Error; end
-  class BootstrapCheckError < Error; end
-
-  class Bug < Error; end
-  class ThisMethodWasRemoved < Bug; end
-  class ConfigLoadingError < Error; end
-  class InvalidSourceLoaderSettingError < Error; end
-end
+# Keeping this file for backwards compatibility with plugins that include it directly.
diff --git a/logstash-core/lib/logstash/java_pipeline.rb b/logstash-core/lib/logstash/java_pipeline.rb
index 4404f61d832..4a399734c2b 100644
--- a/logstash-core/lib/logstash/java_pipeline.rb
+++ b/logstash-core/lib/logstash/java_pipeline.rb
@@ -1,7 +1,6 @@
 # encoding: utf-8
 require "thread"
 require "concurrent"
-require "logstash/errors"
 require "logstash/event"
 require "logstash/filters/base"
 require "logstash/inputs/base"
diff --git a/logstash-core/lib/logstash/modules/cli_parser.rb b/logstash-core/lib/logstash/modules/cli_parser.rb
index 54fbc6477b9..9fa0df613fd 100644
--- a/logstash-core/lib/logstash/modules/cli_parser.rb
+++ b/logstash-core/lib/logstash/modules/cli_parser.rb
@@ -1,6 +1,5 @@
 # encoding: utf-8
 require "logstash/logging"
-require "logstash/errors"
 
 module LogStash module Modules class CLIParser
   include LogStash::Util::Loggable
diff --git a/logstash-core/lib/logstash/pipeline.rb b/logstash-core/lib/logstash/pipeline.rb
index ae4e9dac70b..35a165e38f0 100644
--- a/logstash-core/lib/logstash/pipeline.rb
+++ b/logstash-core/lib/logstash/pipeline.rb
@@ -2,7 +2,6 @@
 require "thread"
 require "stud/interval"
 require "concurrent"
-require "logstash/errors"
 require "logstash-core/logstash-core"
 require "logstash/event"
 require "logstash/config/file"
diff --git a/logstash-core/lib/logstash/pipeline_action/reload.rb b/logstash-core/lib/logstash/pipeline_action/reload.rb
index 92557976626..931fdced02e 100644
--- a/logstash-core/lib/logstash/pipeline_action/reload.rb
+++ b/logstash-core/lib/logstash/pipeline_action/reload.rb
@@ -2,7 +2,6 @@
 require "logstash/pipeline_action/base"
 require "logstash/pipeline_action/create"
 require "logstash/pipeline_action/stop"
-require "logstash/errors"
 require "logstash/util/loggable"
 require "logstash/converge_result"
 
diff --git a/logstash-core/lib/logstash/util/plugin_version.rb b/logstash-core/lib/logstash/util/plugin_version.rb
index 509ab3be224..ab296bdef01 100644
--- a/logstash-core/lib/logstash/util/plugin_version.rb
+++ b/logstash-core/lib/logstash/util/plugin_version.rb
@@ -1,5 +1,4 @@
 # encoding: utf-8
-require 'logstash/errors'
 require 'rubygems/version'
 require 'forwardable'
 
diff --git a/logstash-core/spec/logstash/modules/cli_parser_spec.rb b/logstash-core/spec/logstash/modules/cli_parser_spec.rb
index b7efbbcb770..9169d8083ec 100644
--- a/logstash-core/spec/logstash/modules/cli_parser_spec.rb
+++ b/logstash-core/spec/logstash/modules/cli_parser_spec.rb
@@ -1,6 +1,5 @@
 require "spec_helper"
 require "logstash/logging"
-require "logstash/errors"
 require "logstash/modules/cli_parser"
 
 describe LogStash::Modules::CLIParser do
@@ -126,4 +125,4 @@
     end
   end
 
-end
\ No newline at end of file
+end
diff --git a/logstash-core/src/main/java/org/logstash/RubyUtil.java b/logstash-core/src/main/java/org/logstash/RubyUtil.java
index 7b5ea2098e8..e1526da24a3 100644
--- a/logstash-core/src/main/java/org/logstash/RubyUtil.java
+++ b/logstash-core/src/main/java/org/logstash/RubyUtil.java
@@ -4,7 +4,6 @@
 import org.jruby.NativeException;
 import org.jruby.Ruby;
 import org.jruby.RubyClass;
-import org.jruby.RubyException;
 import org.jruby.RubyModule;
 import org.jruby.anno.JRubyClass;
 import org.jruby.exceptions.RaiseException;
@@ -18,6 +17,7 @@
 import org.logstash.config.ir.compiler.OutputStrategyExt;
 import org.logstash.execution.ExecutionContextExt;
 import org.logstash.execution.QueueReadClientBase;
+import org.logstash.ext.JRubyLogstashErrorsExt;
 import org.logstash.ext.JRubyWrappedWriteClientExt;
 import org.logstash.ext.JrubyAckedReadClientExt;
 import org.logstash.ext.JrubyAckedWriteClientExt;
@@ -109,6 +109,8 @@ public final class RubyUtil {
 
     public static final RubyClass EXECUTION_CONTEXT_CLASS;
 
+    public static final RubyClass BUG_CLASS;
+
     /**
      * Logstash Ruby Module.
      */
@@ -253,16 +255,48 @@ public final class RubyUtil {
         final RubyModule json = LOGSTASH_MODULE.defineOrGetModuleUnder("Json");
         final RubyClass stdErr = RUBY.getStandardError();
         LOGSTASH_ERROR = LOGSTASH_MODULE.defineClassUnder(
-            "Error", stdErr, RubyUtil.LogstashRubyError::new
+            "Error", stdErr, JRubyLogstashErrorsExt.LogstashRubyError::new
+        );
+        LOGSTASH_MODULE.defineClassUnder(
+            "EnvironmentError", stdErr, JRubyLogstashErrorsExt.LogstashEnvironmentError::new
+        );
+        LOGSTASH_MODULE.defineClassUnder(
+            "ConfigurationError", stdErr, JRubyLogstashErrorsExt.ConfigurationError::new
+        );
+        LOGSTASH_MODULE.defineClassUnder(
+            "PluginLoadingError", stdErr, JRubyLogstashErrorsExt.PluginLoadingError::new
+        );
+        LOGSTASH_MODULE.defineClassUnder(
+            "ShutdownSignal", stdErr, JRubyLogstashErrorsExt.ShutdownSignal::new
+        );
+        LOGSTASH_MODULE.defineClassUnder(
+            "PluginNoVersionError", stdErr, JRubyLogstashErrorsExt.PluginNoVersionError::new
+        );
+        LOGSTASH_MODULE.defineClassUnder(
+            "BootstrapCheckError", stdErr, JRubyLogstashErrorsExt.BootstrapCheckError::new
+        );
+        BUG_CLASS = LOGSTASH_MODULE.defineClassUnder(
+            "Bug", stdErr, JRubyLogstashErrorsExt.Bug::new
+        );
+        LOGSTASH_MODULE.defineClassUnder(
+            "ThisMethodWasRemoved", BUG_CLASS,
+            JRubyLogstashErrorsExt.ThisMethodWasRemoved::new
+        );
+        LOGSTASH_MODULE.defineClassUnder(
+            "ConfigLoadingError", stdErr, JRubyLogstashErrorsExt.ConfigLoadingError::new
+        );
+        LOGSTASH_MODULE.defineClassUnder(
+            "InvalidSourceLoaderSettingError", stdErr,
+            JRubyLogstashErrorsExt.InvalidSourceLoaderSettingError::new
         );
         PARSER_ERROR = json.defineClassUnder(
-            "ParserError", LOGSTASH_ERROR, RubyUtil.LogstashRubyParserError::new
+            "ParserError", LOGSTASH_ERROR, JRubyLogstashErrorsExt.LogstashRubyParserError::new
         );
         TIMESTAMP_PARSER_ERROR = LOGSTASH_MODULE.defineClassUnder(
-            "TimestampParserError", stdErr, RubyUtil.LogstashTimestampParserError::new
+            "TimestampParserError", stdErr, JRubyLogstashErrorsExt.LogstashTimestampParserError::new
         );
         GENERATOR_ERROR = json.defineClassUnder("GeneratorError", LOGSTASH_ERROR,
-            RubyUtil.LogstashRubyGeneratorError::new
+            JRubyLogstashErrorsExt.LogstashRubyGeneratorError::new
         );
         RUBY_EVENT_CLASS.setConstant("METADATA", RUBY.newString(Event.METADATA));
         RUBY_EVENT_CLASS.setConstant(
@@ -325,35 +359,4 @@ private static RubyClass setupLogstashClass(final RubyClass parent,
         return clazz;
     }
 
-    @JRubyClass(name = "Error")
-    public static final class LogstashRubyError extends RubyException {
-
-        public LogstashRubyError(final Ruby runtime, final RubyClass metaClass) {
-            super(runtime, metaClass);
-        }
-    }
-
-    @JRubyClass(name = "ParserError")
-    public static final class LogstashRubyParserError extends RubyException {
-
-        public LogstashRubyParserError(final Ruby runtime, final RubyClass metaClass) {
-            super(runtime, metaClass);
-        }
-    }
-
-    @JRubyClass(name = "GeneratorError")
-    public static final class LogstashRubyGeneratorError extends RubyException {
-
-        public LogstashRubyGeneratorError(final Ruby runtime, final RubyClass metaClass) {
-            super(runtime, metaClass);
-        }
-    }
-
-    @JRubyClass(name = "TimestampParserError")
-    public static final class LogstashTimestampParserError extends RubyException {
-
-        public LogstashTimestampParserError(final Ruby runtime, final RubyClass metaClass) {
-            super(runtime, metaClass);
-        }
-    }
 }
diff --git a/logstash-core/src/main/java/org/logstash/ext/JRubyLogstashErrorsExt.java b/logstash-core/src/main/java/org/logstash/ext/JRubyLogstashErrorsExt.java
new file mode 100644
index 00000000000..f43e874185c
--- /dev/null
+++ b/logstash-core/src/main/java/org/logstash/ext/JRubyLogstashErrorsExt.java
@@ -0,0 +1,125 @@
+package org.logstash.ext;
+
+import org.jruby.Ruby;
+import org.jruby.RubyClass;
+import org.jruby.RubyException;
+import org.jruby.anno.JRubyClass;
+
+public final class JRubyLogstashErrorsExt {
+
+    private JRubyLogstashErrorsExt() {
+        // Just a holder for JRuby exception definitions
+    }
+
+    @JRubyClass(name = "Error")
+    public static final class LogstashRubyError extends RubyException {
+
+        public LogstashRubyError(final Ruby runtime, final RubyClass metaClass) {
+            super(runtime, metaClass);
+        }
+    }
+
+    @JRubyClass(name = "ParserError")
+    public static final class LogstashRubyParserError extends RubyException {
+
+        public LogstashRubyParserError(final Ruby runtime, final RubyClass metaClass) {
+            super(runtime, metaClass);
+        }
+    }
+
+    @JRubyClass(name = "GeneratorError")
+    public static final class LogstashRubyGeneratorError extends RubyException {
+
+        public LogstashRubyGeneratorError(final Ruby runtime, final RubyClass metaClass) {
+            super(runtime, metaClass);
+        }
+    }
+
+    @JRubyClass(name = "TimestampParserError")
+    public static final class LogstashTimestampParserError extends RubyException {
+
+        public LogstashTimestampParserError(final Ruby runtime, final RubyClass metaClass) {
+            super(runtime, metaClass);
+        }
+    }
+
+    @JRubyClass(name = "EnvironmentError")
+    public static final class LogstashEnvironmentError extends RubyException {
+
+        public LogstashEnvironmentError(final Ruby runtime, final RubyClass rubyClass) {
+            super(runtime, rubyClass);
+        }
+    }
+
+    @JRubyClass(name = "ConfigurationError")
+    public static final class ConfigurationError extends RubyException {
+
+        public ConfigurationError(final Ruby runtime, final RubyClass rubyClass) {
+            super(runtime, rubyClass);
+        }
+    }
+
+    @JRubyClass(name = "PluginLoadingError")
+    public static final class PluginLoadingError extends RubyException {
+
+        public PluginLoadingError(final Ruby runtime, final RubyClass rubyClass) {
+            super(runtime, rubyClass);
+        }
+    }
+
+    @JRubyClass(name = "ShutdownSignal")
+    public static final class ShutdownSignal extends RubyException {
+
+        public ShutdownSignal(final Ruby runtime, final RubyClass rubyClass) {
+            super(runtime, rubyClass);
+        }
+    }
+
+    @JRubyClass(name = "PluginNoVersionError")
+    public static final class PluginNoVersionError extends RubyException {
+
+        public PluginNoVersionError(final Ruby runtime, final RubyClass rubyClass) {
+            super(runtime, rubyClass);
+        }
+    }
+
+    @JRubyClass(name = "BootstrapCheckError")
+    public static final class BootstrapCheckError extends RubyException {
+
+        public BootstrapCheckError(final Ruby runtime, final RubyClass rubyClass) {
+            super(runtime, rubyClass);
+        }
+    }
+
+    @JRubyClass(name = "Bug")
+    public static class Bug extends RubyException {
+
+        public Bug(final Ruby runtime, final RubyClass rubyClass) {
+            super(runtime, rubyClass);
+        }
+    }
+
+    @JRubyClass(name = "ThisMethodWasRemoved")
+    public static final class ThisMethodWasRemoved extends JRubyLogstashErrorsExt.Bug {
+
+        public ThisMethodWasRemoved(final Ruby runtime, final RubyClass rubyClass) {
+            super(runtime, rubyClass);
+        }
+    }
+
+    @JRubyClass(name = "ConfigLoadingError")
+    public static final class ConfigLoadingError extends RubyException {
+
+        public ConfigLoadingError(final Ruby runtime, final RubyClass rubyClass) {
+            super(runtime, rubyClass);
+        }
+    }
+
+    @JRubyClass(name = "InvalidSourceLoaderSettingError")
+    public static final class InvalidSourceLoaderSettingError extends RubyException {
+
+        public InvalidSourceLoaderSettingError(final Ruby runtime, final RubyClass rubyClass) {
+            super(runtime, rubyClass);
+        }
+    }
+}
diff --git a/x-pack/lib/config_management/bootstrap_check.rb b/x-pack/lib/config_management/bootstrap_check.rb
index c24bb7b2ffe..305ee1bafd4 100644
--- a/x-pack/lib/config_management/bootstrap_check.rb
+++ b/x-pack/lib/config_management/bootstrap_check.rb
@@ -4,7 +4,6 @@
 
 require "logstash/bootstrap_check/default_config"
 require "logstash/logging/logger"
-require "logstash/errors"
 
 java_import java.util.concurrent.TimeUnit
 
