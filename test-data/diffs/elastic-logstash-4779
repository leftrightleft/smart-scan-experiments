diff --git a/lib/bootstrap/bundler.rb b/lib/bootstrap/bundler.rb
index 2948fe8aa29..06b8edc8260 100644
--- a/lib/bootstrap/bundler.rb
+++ b/lib/bootstrap/bundler.rb
@@ -28,18 +28,31 @@ def set_key(key, value, hash, file)
         end
       end
 
-      # This patch makes rubygems fetch directly from the remote servers
-      # the dependencies he need and might not have downloaded in a local
-      # repository. This basically enabled the offline feature to work as
-      # we remove the gems from the vendor directory before packacing.
-      ::Bundler::Source::Rubygems.module_exec do
-        def cached_gem(spec)
-          cached_built_in_gem(spec)
+      ::Bundler::Runtime.module_exec do
+        def rebuild_gem_cache
+          specs.each do |spec|
+            next if spec.name == "bundler"
+            next if spec.source.is_a?(::Bundler::Source::Path)
+            spec.source.send(:cached_built_in_gem, spec) if spec.source.respond_to?(:cached_built_in_gem)
+          end
         end
       end
+
     end
 
-    def setup!(options = {})
+    # This basically enabled the offline feature to work as
+    # we remove the gems from the vendor directory before packacing, so we need
+    # to fetch them back before moving forward.
+    def rebuild_gem_cache(options={})
+      configure!(options)
+      ::Bundler.load.rebuild_gem_cache
+    end
+
+
+    # Configure the minimum required set of options for Bundler like GEM_HOME location,
+    # GEMFILE_PATH, etc. It also apply internal patches and makes sure it setup to work
+    # as expected for internal LS usage.
+    def configure!(options={})
       options = {:without => [:development]}.merge(options)
       options[:without] = Array(options[:without])
 
@@ -61,6 +74,10 @@ def setup!(options = {})
       ::Bundler.settings[:gemfile] = Environment::GEMFILE_PATH
 
       ::Bundler.reset!
+    end
+
+    def setup!(options = {})
+      configure!(options)
       ::Bundler.setup
     end
 
diff --git a/lib/pluginmanager/pack.rb b/lib/pluginmanager/pack.rb
index 18b46e18511..c2b37c09373 100644
--- a/lib/pluginmanager/pack.rb
+++ b/lib/pluginmanager/pack.rb
@@ -11,6 +11,8 @@ def execute
     puts("Packaging plugins for offline usage")
 
     validate_target_file
+
+    LogStash::Bundler.rebuild_gem_cache
     LogStash::Bundler.invoke!({:package => true, :all => true})
     archive_manager.compress(LogStash::Environment::CACHE_PATH, target_file)
     FileUtils.rm_rf(LogStash::Environment::CACHE_PATH) if clean?
