diff --git a/test/integration/README.md b/test/integration/README.md
new file mode 100644
index 00000000000..acc19206d7f
--- /dev/null
+++ b/test/integration/README.md
@@ -0,0 +1,59 @@
+# integration tests
+
+## performance tests
+
+### run.rb
+
+executes a single test.
+
+a test can be execute for a specific number of events of for a specific duration.
+
+- logstash config are in `test/integration/config`
+- sample input files are in `test/integration/input`
+
+#### by number of events
+
+```
+ruby test/integration/run.rb --events [number of events] --config [logstash config file] --input [sample input events file]
+```
+
+the sample input events file will be sent to logstash stdin repetedly until the required number of events is reached
+
+#### by target duration
+
+```
+ruby test/integration/run.rb --time [number of seconds] --config [logstash config file] --input [sample input events file]
+```
+
+the sample input events file will be sent to logstash stdin repetedly until the test elaspsed time reached the target time
+
+
+### suite.rb
+
+- suites are in `test/integration/suite`
+
+```
+ruby test/integration/suite.rb [suite file]
+```
+
+a suite file defines a series of tests to run.
+
+#### suite file format
+
+```ruby
+# each test can be executed by either target duration using :time => N secs
+# or by number of events with :events => N
+#
+#[
+#  {:name => "simple json out", :config => "config/simple_json_out.conf", :input => "input/simple_10.txt", :time => 30},
+#  {:name => "simple json out", :config => "config/simple_json_out.conf", :input => "input/simple_10.txt", :events => 50000},
+#]
+#
+[
+  {:name => "simple json out", :config => "config/simple_json_out.conf", :input => "input/simple_10.txt", :time => 60},
+  {:name => "simple line out", :config => "config/simple.conf", :input => "input/simple_10.txt", :time => 60},
+  {:name => "json codec", :config => "config/json_inout_codec.conf", :input => "input/json_medium.txt", :time => 60},
+  {:name => "json filter", :config => "config/json_inout_filter.conf", :input => "input/json_medium.txt", :time => 60},
+  {:name => "complex syslog", :config => "config/complex_syslog.conf", :input => "input/syslog_acl_10.txt", :time => 60},
+]
+```
\ No newline at end of file
diff --git a/test/integration/config/complex_syslog.conf b/test/integration/config/complex_syslog.conf
new file mode 100644
index 00000000000..c7db7bf51a8
--- /dev/null
+++ b/test/integration/config/complex_syslog.conf
@@ -0,0 +1,46 @@
+input {
+  stdin {
+    type => syslog
+  }
+}
+
+filter {
+  if [type] == "syslog" {
+    grok {
+      match => { "message" => "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{PROG:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
+      add_field => [ "received_at", "%{@timestamp}" ]
+      add_field => [ "received_from", "%{syslog_hostname}" ]
+    }
+    syslog_pri { }
+    date {
+      match => ["syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
+    }
+
+    if [syslog_timestamp] {
+      mutate {
+        add_field => [ "[times][created_at]",  "%{syslog_timestamp}"]
+        add_field => [ "[times][received_at]",  "%{@timestamp}"]
+      }
+    }
+
+    mutate {
+      add_field => [ "[hosts][source]",  "%{received_from}"]
+      add_field => [ "[level][facility]",  "%{syslog_facility}"]
+      add_field => [ "[level][severity]",  "%{syslog_severity}"]
+    }
+
+    if !("_grokparsefailure" in [tags]) {
+      mutate {
+        replace => [ "@source_host", "%{syslog_hostname}" ]
+        replace => [ "@message", "%{syslog_message}" ]
+      }
+    }
+    mutate {
+      remove_field => [ "syslog_hostname", "syslog_message", "syslog_timestamp" ]
+    }
+  }
+}
+
+output {
+  stdout { codec => json_lines }
+}
diff --git a/test/integration/config/json_inout_codec.conf b/test/integration/config/json_inout_codec.conf
new file mode 100644
index 00000000000..247718d1167
--- /dev/null
+++ b/test/integration/config/json_inout_codec.conf
@@ -0,0 +1,11 @@
+input {
+  stdin { codec => "json_lines" }
+}
+
+filter {
+  clone {}
+}
+
+output {
+  stdout { codec => json_lines }
+}
diff --git a/test/integration/config/json_inout_filter.conf b/test/integration/config/json_inout_filter.conf
new file mode 100644
index 00000000000..afad781c5c4
--- /dev/null
+++ b/test/integration/config/json_inout_filter.conf
@@ -0,0 +1,11 @@
+input {
+  stdin {}
+}
+
+filter {
+  json { source => "message" }
+}
+
+output {
+  stdout { codec => json_lines }
+}
diff --git a/test/integration/config/simple.conf b/test/integration/config/simple.conf
new file mode 100644
index 00000000000..702824063ff
--- /dev/null
+++ b/test/integration/config/simple.conf
@@ -0,0 +1,11 @@
+input {
+  stdin {}
+}
+
+filter {
+  clone {}
+}
+
+output {
+  stdout { codec => line }
+}
diff --git a/test/integration/config/simple_grok.conf b/test/integration/config/simple_grok.conf
new file mode 100644
index 00000000000..920690d8071
--- /dev/null
+++ b/test/integration/config/simple_grok.conf
@@ -0,0 +1,13 @@
+input {
+	stdin { type => "apache" }
+}
+
+filter {
+	grok {
+		match => {"message" => "%{COMBINEDAPACHELOG}"}
+	}
+}
+
+output {
+	stdout { codec => line }
+}
diff --git a/test/integration/config/simple_json_out.conf b/test/integration/config/simple_json_out.conf
new file mode 100644
index 00000000000..01bd2720610
--- /dev/null
+++ b/test/integration/config/simple_json_out.conf
@@ -0,0 +1,11 @@
+input {
+  stdin {}
+}
+
+filter {
+  clone {}
+}
+
+output {
+  stdout { codec => json_lines }
+}
diff --git a/test/integration/input/apache_log.txt b/test/integration/input/apache_log.txt
new file mode 100644
index 00000000000..dbb165cf82e
--- /dev/null
+++ b/test/integration/input/apache_log.txt
@@ -0,0 +1,30 @@
+83.149.9.216 - - [17/Sep/2014:07:13:42 +0000] "GET /presentations/logstash-monitorama-2013/images/kibana-search.png HTTP/1.1" 200 203023 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:42 +0000] "GET /presentations/logstash-monitorama-2013/images/kibana-dashboard3.png HTTP/1.1" 200 171717 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:44 +0000] "GET /presentations/logstash-monitorama-2013/plugin/highlight/highlight.js HTTP/1.1" 200 26185 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:44 +0000] "GET /presentations/logstash-monitorama-2013/plugin/zoom-js/zoom.js HTTP/1.1" 200 7697 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:45 +0000] "GET /presentations/logstash-monitorama-2013/plugin/notes/notes.js HTTP/1.1" 200 2892 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:42 +0000] "GET /presentations/logstash-monitorama-2013/images/sad-medic.png HTTP/1.1" 200 430406 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:45 +0000] "GET /presentations/logstash-monitorama-2013/css/fonts/Roboto-Bold.ttf HTTP/1.1" 200 38720 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:45 +0000] "GET /presentations/logstash-monitorama-2013/css/fonts/Roboto-Regular.ttf HTTP/1.1" 200 41820 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:45 +0000] "GET /presentations/logstash-monitorama-2013/images/frontend-response-codes.png HTTP/1.1" 200 52878 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:43 +0000] "GET /presentations/logstash-monitorama-2013/images/kibana-dashboard.png HTTP/1.1" 200 321631 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:46 +0000] "GET /presentations/logstash-monitorama-2013/images/Dreamhost_logo.svg HTTP/1.1" 200 2126 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:43 +0000] "GET /presentations/logstash-monitorama-2013/images/kibana-dashboard2.png HTTP/1.1" 200 394967 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:46 +0000] "GET /presentations/logstash-monitorama-2013/images/apache-icon.gif HTTP/1.1" 200 8095 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:46 +0000] "GET /presentations/logstash-monitorama-2013/images/nagios-sms5.png HTTP/1.1" 200 78075 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:46 +0000] "GET /presentations/logstash-monitorama-2013/images/redis.png HTTP/1.1" 200 25230 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:47 +0000] "GET /presentations/logstash-monitorama-2013/images/elasticsearch.png HTTP/1.1" 200 8026 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:47 +0000] "GET /presentations/logstash-monitorama-2013/images/logstashbook.png HTTP/1.1" 200 54662 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:47 +0000] "GET /presentations/logstash-monitorama-2013/images/github-contributions.png HTTP/1.1" 200 34245 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:47 +0000] "GET /presentations/logstash-monitorama-2013/css/print/paper.css HTTP/1.1" 200 4254 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:47 +0000] "GET /presentations/logstash-monitorama-2013/images/1983_delorean_dmc-12-pic-38289.jpeg HTTP/1.1" 200 220562 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:46 +0000] "GET /presentations/logstash-monitorama-2013/images/simple-inputs-filters-outputs.jpg HTTP/1.1" 200 1168622 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:46 +0000] "GET /presentations/logstash-monitorama-2013/images/tiered-outputs-to-inputs.jpg HTTP/1.1" 200 1079983 "http://semicomplete.com/presentations/logstash-monitorama-2013/" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+83.149.9.216 - - [17/Sep/2014:07:13:53 +0000] "GET /favicon.ico HTTP/1.1" 200 3638 "-" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36"
+24.236.252.67 - - [17/Sep/2014:07:14:10 +0000] "GET /favicon.ico HTTP/1.1" 200 3638 "-" "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:26.0) Gecko/20100101 Firefox/26.0"
+93.114.45.13 - - [17/Sep/2014:07:14:32 +0000] "GET /articles/dynamic-dns-with-dhcp/ HTTP/1.1" 200 18848 "http://www.google.ro/url?sa=t&rct=j&q=&esrc=s&source=web&cd=2&ved=0CCwQFjAB&url=http%3A%2F%2Fwww.semicomplete.com%2Farticles%2Fdynamic-dns-with-dhcp%2F&ei=W88AU4n9HOq60QXbv4GwBg&usg=AFQjCNEF1X4Rs52UYQyLiySTQxa97ozM4g&bvm=bv.61535280,d.d2k" "Mozilla/5.0 (X11; Linux x86_64; rv:25.0) Gecko/20100101 Firefox/25.0"
+93.114.45.13 - - [17/Sep/2014:07:14:32 +0000] "GET /reset.css HTTP/1.1" 200 1015 "http://www.semicomplete.com/articles/dynamic-dns-with-dhcp/" "Mozilla/5.0 (X11; Linux x86_64; rv:25.0) Gecko/20100101 Firefox/25.0"
+93.114.45.13 - - [17/Sep/2014:07:14:33 +0000] "GET /style2.css HTTP/1.1" 200 4877 "http://www.semicomplete.com/articles/dynamic-dns-with-dhcp/" "Mozilla/5.0 (X11; Linux x86_64; rv:25.0) Gecko/20100101 Firefox/25.0"
+93.114.45.13 - - [17/Sep/2014:07:14:33 +0000] "GET /favicon.ico HTTP/1.1" 200 3638 "-" "Mozilla/5.0 (X11; Linux x86_64; rv:25.0) Gecko/20100101 Firefox/25.0"
+93.114.45.13 - - [17/Sep/2014:07:14:33 +0000] "GET /images/jordan-80.png HTTP/1.1" 200 6146 "http://www.semicomplete.com/articles/dynamic-dns-with-dhcp/" "Mozilla/5.0 (X11; Linux x86_64; rv:25.0) Gecko/20100101 Firefox/25.0"
+93.114.45.13 - - [17/Sep/2014:07:14:33 +0000] "GET /images/web/2009/banner.png HTTP/1.1" 200 52315 "http://www.semicomplete.com/style2.css" "Mozilla/5.0 (X11; Linux x86_64; rv:25.0) Gecko/20100101 Firefox/25.0"
diff --git a/test/integration/input/json_medium.txt b/test/integration/input/json_medium.txt
new file mode 100644
index 00000000000..96b808f22b1
--- /dev/null
+++ b/test/integration/input/json_medium.txt
@@ -0,0 +1,10 @@
+{"_scroll_id":"xxx", "took":5, "timed_out":false, "_shards":{"total":15,"successful":15,"failed":0}, "hits":{"total":1000050, "max_score":1.0, "hits":[{"_index":"logstash2", "_type":"logs", "_id":"AmaqL7VuSWKF-F6N_Gz72g", "_score":1.0, "_source" : {"message":"foobar", "@version":"1", "@timestamp":"2014-05-19T21:08:39.000Z", "host":"colin-mbp13r"} } ] } }
+{"_scroll_id":"xxx", "took":5, "timed_out":false, "_shards":{"total":15,"successful":15,"failed":0}, "hits":{"total":1000050, "max_score":1.0, "hits":[{"_index":"logstash2", "_type":"logs", "_id":"AmaqL7VuSWKF-F6N_Gz72g", "_score":1.0, "_source" : {"message":"foobar", "@version":"1", "@timestamp":"2014-05-19T21:08:39.000Z", "host":"colin-mbp13r"} } ] } }
+{"_scroll_id":"xxx", "took":5, "timed_out":false, "_shards":{"total":15,"successful":15,"failed":0}, "hits":{"total":1000050, "max_score":1.0, "hits":[{"_index":"logstash2", "_type":"logs", "_id":"AmaqL7VuSWKF-F6N_Gz72g", "_score":1.0, "_source" : {"message":"foobar", "@version":"1", "@timestamp":"2014-05-19T21:08:39.000Z", "host":"colin-mbp13r"} } ] } }
+{"_scroll_id":"xxx", "took":5, "timed_out":false, "_shards":{"total":15,"successful":15,"failed":0}, "hits":{"total":1000050, "max_score":1.0, "hits":[{"_index":"logstash2", "_type":"logs", "_id":"AmaqL7VuSWKF-F6N_Gz72g", "_score":1.0, "_source" : {"message":"foobar", "@version":"1", "@timestamp":"2014-05-19T21:08:39.000Z", "host":"colin-mbp13r"} } ] } }
+{"_scroll_id":"xxx", "took":5, "timed_out":false, "_shards":{"total":15,"successful":15,"failed":0}, "hits":{"total":1000050, "max_score":1.0, "hits":[{"_index":"logstash2", "_type":"logs", "_id":"AmaqL7VuSWKF-F6N_Gz72g", "_score":1.0, "_source" : {"message":"foobar", "@version":"1", "@timestamp":"2014-05-19T21:08:39.000Z", "host":"colin-mbp13r"} } ] } }
+{"_scroll_id":"xxx", "took":5, "timed_out":false, "_shards":{"total":15,"successful":15,"failed":0}, "hits":{"total":1000050, "max_score":1.0, "hits":[{"_index":"logstash2", "_type":"logs", "_id":"AmaqL7VuSWKF-F6N_Gz72g", "_score":1.0, "_source" : {"message":"foobar", "@version":"1", "@timestamp":"2014-05-19T21:08:39.000Z", "host":"colin-mbp13r"} } ] } }
+{"_scroll_id":"xxx", "took":5, "timed_out":false, "_shards":{"total":15,"successful":15,"failed":0}, "hits":{"total":1000050, "max_score":1.0, "hits":[{"_index":"logstash2", "_type":"logs", "_id":"AmaqL7VuSWKF-F6N_Gz72g", "_score":1.0, "_source" : {"message":"foobar", "@version":"1", "@timestamp":"2014-05-19T21:08:39.000Z", "host":"colin-mbp13r"} } ] } }
+{"_scroll_id":"xxx", "took":5, "timed_out":false, "_shards":{"total":15,"successful":15,"failed":0}, "hits":{"total":1000050, "max_score":1.0, "hits":[{"_index":"logstash2", "_type":"logs", "_id":"AmaqL7VuSWKF-F6N_Gz72g", "_score":1.0, "_source" : {"message":"foobar", "@version":"1", "@timestamp":"2014-05-19T21:08:39.000Z", "host":"colin-mbp13r"} } ] } }
+{"_scroll_id":"xxx", "took":5, "timed_out":false, "_shards":{"total":15,"successful":15,"failed":0}, "hits":{"total":1000050, "max_score":1.0, "hits":[{"_index":"logstash2", "_type":"logs", "_id":"AmaqL7VuSWKF-F6N_Gz72g", "_score":1.0, "_source" : {"message":"foobar", "@version":"1", "@timestamp":"2014-05-19T21:08:39.000Z", "host":"colin-mbp13r"} } ] } }
+{"_scroll_id":"xxx", "took":5, "timed_out":false, "_shards":{"total":15,"successful":15,"failed":0}, "hits":{"total":1000050, "max_score":1.0, "hits":[{"_index":"logstash2", "_type":"logs", "_id":"AmaqL7VuSWKF-F6N_Gz72g", "_score":1.0, "_source" : {"message":"foobar", "@version":"1", "@timestamp":"2014-05-19T21:08:39.000Z", "host":"colin-mbp13r"} } ] } }
diff --git a/test/integration/input/simple_10.txt b/test/integration/input/simple_10.txt
new file mode 100644
index 00000000000..8a9b58e04d6
--- /dev/null
+++ b/test/integration/input/simple_10.txt
@@ -0,0 +1,10 @@
+test 01
+test 02
+test 03
+test 04
+test 05
+test 06
+test 07
+test 08
+test 09
+test 10
\ No newline at end of file
diff --git a/test/integration/input/syslog_acl_10.txt b/test/integration/input/syslog_acl_10.txt
new file mode 100644
index 00000000000..d277d856660
--- /dev/null
+++ b/test/integration/input/syslog_acl_10.txt
@@ -0,0 +1,10 @@
+<164>Oct 26 15:19:25 1.2.3.4 %ASA-4-106023: Deny udp src DRAC:10.1.2.3/43434 dst outside:192.168.0.1/53 by access-group "acl_drac" [0x0, 0x0]
+<164>Oct  6 15:20:25 2.2.3.4 %ASA-4-106023: Deny udp src DRAC:10.1.2.4/43434 dst outside:192.168.0.1/53 by access-group "acl_drac" [0x0, 0x0]
+<164>Oct  1 15:21:25 3.2.3.4 %ASA-4-106023: Allow tcp src DRAC:10.1.2.5/43434 dst outside:192.168.0.1/53 by access-group "acl_drac" [0x0, 0x0]
+<164>Oct 30 15:22:25 4.2.3.4 %ASA-4-106023: Allow tcp src DRAC:10.1.2.6/43434 dst outside:192.168.0.1/53 by access-group "acl_drac" [0x0, 0x0]
+<164>Oct 26 15:19:25 1.2.3.4 %ASA-4-106023: Deny udp src DRAC:10.1.2.3/43434 dst outside:192.168.0.1/53 by access-group "acl_drac" [0x0, 0x0]
+<164>Oct  6 15:20:25 2.2.3.4 %ASA-4-106023: Deny udp src DRAC:10.1.2.4/43434 dst outside:192.168.0.1/53 by access-group "acl_drac" [0x0, 0x0]
+<164>Oct  1 15:21:25 3.2.3.4 %ASA-4-106023: Allow tcp src DRAC:10.1.2.5/43434 dst outside:192.168.0.1/53 by access-group "acl_drac" [0x0, 0x0]
+<164>Oct 30 15:22:25 4.2.3.4 %ASA-4-106023: Allow tcp src DRAC:10.1.2.6/43434 dst outside:192.168.0.1/53 by access-group "acl_drac" [0x0, 0x0]
+<164>Oct 26 15:19:25 1.2.3.4 %ASA-4-106023: Deny udp src DRAC:10.1.2.3/43434 dst outside:192.168.0.1/53 by access-group "acl_drac" [0x0, 0x0]
+<164>Oct  6 15:20:25 2.2.3.4 %ASA-4-106023: Deny udp src DRAC:10.1.2.4/43434 dst outside:192.168.0.1/53 by access-group "acl_drac" [0x0, 0x0]
diff --git a/test/integration/install_deps.rb b/test/integration/install_deps.rb
new file mode 100644
index 00000000000..177e240124a
--- /dev/null
+++ b/test/integration/install_deps.rb
@@ -0,0 +1,6 @@
+
+puts "Installing dependencies"
+
+`./bin/logstash deps 2>&1`
+
+puts "done!"
diff --git a/test/integration/run.rb b/test/integration/run.rb
new file mode 100644
index 00000000000..6cf918aac82
--- /dev/null
+++ b/test/integration/run.rb
@@ -0,0 +1,165 @@
+# encoding: utf-8
+
+require "benchmark"
+require "thread"
+require "open3"
+
+require 'test/integration/stats'
+
+INITIAL_MESSAGE = ">>> lorem ipsum start".freeze
+LAST_MESSAGE = ">>> lorem ipsum stop".freeze
+
+Thread.abort_on_exception = true
+
+class Runner
+
+  LOGSTASH_BIN  = File.join(File.expand_path("../../../bin/", __FILE__), "logstash").freeze
+  REFRESH_COUNT = 100
+
+  attr_reader :command
+
+  def initialize(config, debug=false)
+    @debug = debug
+    @command = [LOGSTASH_BIN, "-f", config]
+  end
+
+  def run(required_events_count, required_run_time, input_lines)
+    puts("launching #{command.join(" ")} #{required_events_count} #{required_run_time}") if @debug
+    stats = Stats.new
+    real_events_count = 0
+    Open3.popen3(*@command) do |i, o, e|
+      puts("sending initial event") if @debug
+      i.puts(INITIAL_MESSAGE)
+      i.flush
+
+      puts("waiting for initial event") if @debug
+      expect_output(o, /#{INITIAL_MESSAGE}/)
+
+      puts("starting output reader thread") if @debug
+      reader = stats.detach_output_reader(o, /#{LAST_MESSAGE}/)
+      puts("starting feeding input") if @debug
+
+      elaspsed = Benchmark.realtime do
+        real_events_count = feed_input_with(required_events_count, required_run_time, input_lines, i)
+        puts("waiting for output reader to complete") if @debug
+        reader.join
+      end
+      p = percentile(stats.stats, 0.80)
+      [p, elaspsed, real_events_count]
+    end
+  end
+
+  def self.headers
+    ["elaspsed", "events", "avg tps", "best tps", "avg top 20% tps"]
+  end
+
+  def feed_input_with(required_events_count, required_run_time, input_lines, i)
+    if required_events_count > 0
+      feed_input_events(i, [required_events_count, input_lines.size].max, input_lines, LAST_MESSAGE)
+    else
+      feed_input_interval(i, required_run_time, input_lines, LAST_MESSAGE)
+    end
+  end
+
+  def read_input_file(file_path)
+    IO.readlines(file_path).map(&:chomp)
+  end
+
+  private
+
+  def feed_input_events(io, events_count, lines, last_message)
+    loop_count = (events_count / lines.size).ceil # how many time we send the input file over
+
+    (1..loop_count).each{lines.each {|line| io.puts(line)}}
+
+    io.puts(last_message)
+    io.flush
+
+    loop_count * lines.size
+  end
+
+  def feed_input_interval(io, seconds, lines, last_message)
+    loop_count = (2000 / lines.size).ceil # check time every ~2000(ceil) input lines
+    lines_per_iteration = loop_count * lines.size
+    start_time = Time.now
+    count = 0
+
+    while true
+      (1..loop_count).each{lines.each {|line| io.puts(line)}}
+      count += lines_per_iteration
+      break if (Time.now - start_time) >= seconds
+    end
+
+    io.puts(last_message)
+    io.flush
+
+    count
+  end
+
+  def expect_output(io, regex)
+    io.each_line do |line|
+      puts("received: #{line}") if @debug
+      yield if block_given?
+      break if line =~ regex
+    end
+  end
+
+  def percentile(array, percentile)
+    count = (array.length * (1.0 - percentile)).floor
+    array.sort[-count..-1]
+  end
+
+end
+
+def extract_options(args)
+  options = {}
+  while !args.empty?
+    config = args.shift.to_s.strip
+    option = args.shift.to_s.strip
+    raise(IllegalArgumentException, "invalid option for #{config}") if option.empty?
+    case config
+    when "--events"
+      options[:events] = option
+    when "--time"
+      options[:time] = option
+    when "--config"
+      options[:config] = option
+    when "--input"
+      options[:input] = option
+    when "--headers"
+      options[:headers] = option
+    else
+      raise(IllegalArgumentException, "invalid config #{config}")
+    end
+  end
+
+  options
+
+end
+
+#
+## script main
+if __FILE__ == $0
+  # standalone quick & dirty options parsing
+  args = ARGV.dup
+  if args.size != 8
+    $stderr.puts("usage: ruby run.rb --events [events count] --config [config file] --input [input file]")
+    $stderr.puts("       ruby run.rb --time [seconds] --config [config file] --input [input file]")
+    exit(1)
+  end
+
+  @debug = !!ENV["DEBUG"]
+
+  options      = extract_options args
+  events_count = options[:events].to_i # total number of events to feed, independant of input file size
+  run_time     = options[:time].to_i
+
+  puts("using config file=#{options[:config]}, input file=#{options[:input]}") if @debug
+
+  runner = Runner.new(options[:config], @debug)
+  p, elaspsed, real_events_count = runner.run(events_count, run_time, runner.read_input_file(options[:input]))
+
+  puts runner.headers if options[:headers]
+  puts("#{"%.2f" % elaspsed}, #{real_events_count}, #{"%.0f" % (real_events_count / elaspsed)},#{p.last}, #{"%.0f" % (p.reduce(:+) / p.size)}")
+
+end
diff --git a/test/integration/stats.rb b/test/integration/stats.rb
new file mode 100644
index 00000000000..0c235a67c48
--- /dev/null
+++ b/test/integration/stats.rb
@@ -0,0 +1,61 @@
+# encoding: utf-8
+
+require "thread"
+
+Thread.abort_on_exception = true
+
+class Stats
+
+  REFRESH_COUNT = 100
+
+  attr_accessor :stats
+
+  def initialize
+    @stats = []
+  end
+  # below stats counter and output reader threads are sharing state using
+  # the @stats_lock mutex, @stats_count and @stats. this is a bit messy and should be
+  # refactored into a proper class eventually
+
+  def detach_stats_counter
+    Thread.new do
+      loop do
+        start = @stats_lock.synchronize{@stats_count}
+        sleep(1)
+        @stats_lock.synchronize{@stats << (@stats_count - start)}
+      end
+    end
+  end
+
+  # detach_output_reader spawns a thread that will fill in the @stats instance var with tps samples for every seconds
+  # @stats access is synchronized using the @stats_lock mutex but can be safely used
+  # once the output reader thread is completed.
+  def detach_output_reader(io, regex)
+    Thread.new(io, regex) do |io, regex|
+      i = 0
+      @stats = []
+      @stats_count = 0
+      @stats_lock = Mutex.new
+      t = detach_stats_counter
+
+      expect_output(io, regex) do
+        i += 1
+        # avoid mutex synchronize on every loop cycle, using REFRESH_COUNT = 100 results in
+        # much lower mutex overhead and still provides a good resolution since we are typically
+        # have 2000..100000 tps
+        @stats_lock.synchronize{@stats_count = i} if (i % REFRESH_COUNT) == 0
+      end
+
+      @stats_lock.synchronize{t.kill}
+    end
+  end
+
+    def expect_output(io, regex)
+    io.each_line do |line|
+      puts("received: #{line}") if @debug
+      yield if block_given?
+      break if line =~ regex
+    end
+  end
+
+end
diff --git a/test/integration/suite.rb b/test/integration/suite.rb
new file mode 100644
index 00000000000..c7c8327057f
--- /dev/null
+++ b/test/integration/suite.rb
@@ -0,0 +1,43 @@
+# encoding: utf-8
+
+require 'test/integration/run'
+
+RUNNER = File.join(File.expand_path(File.dirname(__FILE__)), "run.rb")
+BASE_DIR = File.expand_path(File.dirname(__FILE__))
+
+## script main
+
+if ARGV.size != 1
+  $stderr.puts("usage: ruby suite.rb [suite file]")
+  exit(1)
+end
+
+@debug = !!ENV["DEBUG"]
+
+tests = eval(IO.read(ARGV[0]))
+lines = ["name, #{Runner.headers.join(',')}"]
+first = true
+
+reporter = Thread.new do
+  loop do
+    $stderr.print "."
+    sleep 1
+  end
+end
+
+tests.each do |test|
+
+  events = test[:events].to_i # total number of events to feed, independant of input file size
+  time   = test[:time].to_i
+  config = File.join(BASE_DIR, test[:config])
+  input  = File.join(BASE_DIR, test[:input])
+
+  runner = Runner.new(config, @debug)
+  p, elaspsed, events_count = runner.run(events, time, runner.read_input_file(input))
+
+  lines << "#{test[:name]}, #{"%.2f" % elaspsed}, #{events_count}, #{"%.0f" % (events_count / elaspsed)},#{p.last}, #{"%.0f" % (p.reduce(:+) / p.size)}"
+  first = false
+end
+
+reporter.kill
+puts lines.join("\n")
diff --git a/test/integration/suite/basic_performance_long.rb b/test/integration/suite/basic_performance_long.rb
new file mode 100644
index 00000000000..651f4ca34e9
--- /dev/null
+++ b/test/integration/suite/basic_performance_long.rb
@@ -0,0 +1,18 @@
+# format description:
+# each test can be executed by either target duration using :time => N secs
+# or by number of events with :events => N
+#
+#[
+#  {:name => "simple json out", :config => "config/simple_json_out.conf", :input => "input/simple_10.txt", :time => 30},
+#  {:name => "simple json out", :config => "config/simple_json_out.conf", :input => "input/simple_10.txt", :events => 50000},
+#]
+#
+[
+  {:name => "simple line in/out", :config => "config/simple.conf", :input => "input/simple_10.txt", :time => 120},
+  {:name => "simple line in/json out", :config => "config/simple_json_out.conf", :input => "input/simple_10.txt", :time => 120},
+  {:name => "json codec in/out", :config => "config/json_inout_codec.conf", :input => "input/json_medium.txt", :time => 120},
+  {:name => "line in/json filter/json out", :config => "config/json_inout_filter.conf", :input => "input/json_medium.txt", :time => 120},
+  {:name => "apache in/json out", :config => "config/simple.conf", :input => "input/apache_log.txt", :time => 120},
+  {:name => "apache in/grok codec/json out", :config => "config/simple_grok.conf", :input => "input/apache_log.txt", :time => 120},
+  {:name => "syslog in/json out", :config => "config/complex_syslog.conf", :input => "input/syslog_acl_10.txt", :time => 120},
+]
diff --git a/test/integration/suite/basic_performance_quick.rb b/test/integration/suite/basic_performance_quick.rb
new file mode 100644
index 00000000000..afaf94827cb
--- /dev/null
+++ b/test/integration/suite/basic_performance_quick.rb
@@ -0,0 +1,18 @@
+# format description:
+# each test can be executed by either target duration using :time => N secs
+# or by number of events with :events => N
+#
+#[
+#  {:name => "simple json out", :config => "config/simple_json_out.conf", :input => "input/simple_10.txt", :time => 30},
+#  {:name => "simple json out", :config => "config/simple_json_out.conf", :input => "input/simple_10.txt", :events => 50000},
+#]
+#
+[
+  {:name => "simple line in/out", :config => "config/simple.conf", :input => "input/simple_10.txt", :time => 30},
+  {:name => "simple line in/json out", :config => "config/simple_json_out.conf", :input => "input/simple_10.txt", :time => 30},
+  {:name => "json codec in/out", :config => "config/json_inout_codec.conf", :input => "input/json_medium.txt", :time => 30},
+  {:name => "line in/json filter/json out", :config => "config/json_inout_filter.conf", :input => "input/json_medium.txt", :time => 30},
+  {:name => "apache in/json out", :config => "config/simple.conf", :input => "input/apache_log.txt", :time => 30},
+  {:name => "apache in/grok codec/json out", :config => "config/simple_grok.conf", :input => "input/apache_log.txt", :time => 30},
+  {:name => "syslog in/json out", :config => "config/complex_syslog.conf", :input => "input/syslog_acl_10.txt", :time => 30},
+]
