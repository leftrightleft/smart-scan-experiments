diff --git a/logstash-core/src/main/java/org/logstash/ackedqueue/AckedReadBatch.java b/logstash-core/src/main/java/org/logstash/ackedqueue/AckedReadBatch.java
index dbc8c686a06..2df9f401bdc 100644
--- a/logstash-core/src/main/java/org/logstash/ackedqueue/AckedReadBatch.java
+++ b/logstash-core/src/main/java/org/logstash/ackedqueue/AckedReadBatch.java
@@ -42,25 +42,35 @@ public final class AckedReadBatch implements QueueBatch {
 
     private RubyHash generated;
 
-    public static AckedReadBatch create(final JRubyAckedQueueExt queue, final int size,
-                                        final long timeout) {
-        return new AckedReadBatch(queue, size, timeout);
-    }
+    public static AckedReadBatch create(
+            final JRubyAckedQueueExt queue,
+            final int size,
+            final long timeout)
+    {
+        if (size == 0) { return new AckedReadBatch(); }
 
-    private AckedReadBatch(final JRubyAckedQueueExt queue, final int size, final long timeout) {
         AckedBatch batch;
         try {
             batch = queue.readBatch(size, timeout);
         } catch (IOException e) {
             throw new IllegalStateException(e);
         }
-        if (batch == null) {
-            originals = RubyHash.newHash(RUBY);
-            ackedBatch = null;
-        } else {
-            ackedBatch = batch;
-            originals = ackedBatch.toRubyHash(RUBY);
-        }
+        return ((batch == null) ? new AckedReadBatch() : new AckedReadBatch(batch));
+     }
+
+    public static AckedReadBatch create() {
+        return new AckedReadBatch();
+    }
+
+    private AckedReadBatch() {
+        ackedBatch = null;
+        originals = RubyHash.newHash(RUBY);
+        generated = RubyHash.newHash(RUBY);
+    }
+
+    private AckedReadBatch(AckedBatch batch) {
+        ackedBatch = batch;
+        originals = ackedBatch.toRubyHash(RUBY);
         generated = RubyHash.newHash(RUBY);
     }
 
diff --git a/logstash-core/src/main/java/org/logstash/execution/WorkerLoop.java b/logstash-core/src/main/java/org/logstash/execution/WorkerLoop.java
index 5c1266e3ac0..ddb1b71ad72 100644
--- a/logstash-core/src/main/java/org/logstash/execution/WorkerLoop.java
+++ b/logstash-core/src/main/java/org/logstash/execution/WorkerLoop.java
@@ -81,17 +81,20 @@ public void run() {
             do {
                 isShutdown = isShutdown || shutdownRequested.get();
                 final QueueBatch batch = readClient.readBatch();
-                consumedCounter.add(batch.filteredSize());
-                final boolean isFlush = flushRequested.compareAndSet(true, false);
-                readClient.startMetrics(batch);
-                compute(batch, isFlush, false);
-                int filteredCount = batch.filteredSize();
-                filteredCounter.add(filteredCount);
-                readClient.addOutputMetrics(filteredCount);
-                readClient.addFilteredMetrics(filteredCount);
-                readClient.closeBatch(batch);
-                if (isFlush) {
-                    flushing.set(false);
+                final int readCount = batch.filteredSize();
+                if (readCount > 0) {
+                    consumedCounter.add(readCount);
+                    final boolean isFlush = flushRequested.compareAndSet(true, false);
+                    readClient.startMetrics(batch);
+                    compute(batch, isFlush, false);
+                    int filteredCount = batch.filteredSize();
+                    filteredCounter.add(filteredCount);
+                    readClient.addOutputMetrics(filteredCount);
+                    readClient.addFilteredMetrics(filteredCount);
+                    readClient.closeBatch(batch);
+                    if (isFlush) {
+                        flushing.set(false);
+                    }
                 }
             } while (!isShutdown || isDraining());
             //we are shutting down, queue is drained if it was required, now  perform a final flush.
diff --git a/logstash-core/src/main/java/org/logstash/ext/JrubyAckedReadClientExt.java b/logstash-core/src/main/java/org/logstash/ext/JrubyAckedReadClientExt.java
index 3ddec0bcb7e..d65c4b0ee53 100644
--- a/logstash-core/src/main/java/org/logstash/ext/JrubyAckedReadClientExt.java
+++ b/logstash-core/src/main/java/org/logstash/ext/JrubyAckedReadClientExt.java
@@ -76,13 +76,12 @@ public boolean isEmpty() {
 
     @Override
     public QueueBatch newBatch() {
-        return AckedReadBatch.create(queue, 0, 0);
+        return AckedReadBatch.create();
     }
 
     @Override
     public QueueBatch readBatch() {
-        AckedReadBatch batch =
-            AckedReadBatch.create(queue, batchSize, waitForMillis);
+        AckedReadBatch batch = AckedReadBatch.create(queue, batchSize, waitForMillis);
         startMetrics(batch);
         return batch;
     }
