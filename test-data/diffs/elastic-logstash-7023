diff --git a/logstash-core/src/main/java/org/logstash/ackedqueue/Queue.java b/logstash-core/src/main/java/org/logstash/ackedqueue/Queue.java
index 00e5ac0d90c..c4903a1174e 100644
--- a/logstash-core/src/main/java/org/logstash/ackedqueue/Queue.java
+++ b/logstash-core/src/main/java/org/logstash/ackedqueue/Queue.java
@@ -140,7 +140,14 @@ public long getCurrentByteSize() {
     }
 
     public long getPersistedByteSize() {
-        return headPage.getPageIO().getHead() + tailPages.stream().mapToLong((p) -> p.getPageIO().getHead()).sum();
+        final long size;
+        if (headPage == null) {
+            size = 0L;
+        } else {
+            size = headPage.getPageIO().getHead()
+                + tailPages.stream().mapToLong(p -> p.getPageIO().getHead()).sum();
+        }
+        return size;
     }
 
     public int getPageCapacity() {
diff --git a/logstash-core/src/test/java/org/logstash/ackedqueue/QueueTest.java b/logstash-core/src/test/java/org/logstash/ackedqueue/QueueTest.java
index c34464e124b..0f4364b3a7d 100644
--- a/logstash-core/src/test/java/org/logstash/ackedqueue/QueueTest.java
+++ b/logstash-core/src/test/java/org/logstash/ackedqueue/QueueTest.java
@@ -725,4 +725,11 @@ public void fullyAckedHeadPageBeheadingTest() throws IOException {
         q.close();
     }
 
+    @Test
+    public void getsPersistedByteSizeCorrectlyForUnopened() throws Exception {
+        Settings settings = TestSettings.persistedQueueSettings(100, dataPath);
+        try (Queue q = new Queue(settings)) {
+            assertThat(q.getPersistedByteSize(), is(equalTo(0L)));
+        }
+    }
 }
