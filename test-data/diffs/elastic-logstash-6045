diff --git a/logstash-core-event-java/lib/logstash-core-event-java/logstash-core-event-java.rb b/logstash-core-event-java/lib/logstash-core-event-java/logstash-core-event-java.rb
index cf86fec4d16..caf90a828ac 100644
--- a/logstash-core-event-java/lib/logstash-core-event-java/logstash-core-event-java.rb
+++ b/logstash-core-event-java/lib/logstash-core-event-java/logstash-core-event-java.rb
@@ -25,4 +25,4 @@ module LogStash
 require "jruby_event_ext"
 require "jruby_timestamp_ext"
 require "logstash/event"
-require "logstash/timestamp"
\ No newline at end of file
+require "logstash/timestamp"
diff --git a/logstash-core-event-java/lib/logstash/event.rb b/logstash-core-event-java/lib/logstash/event.rb
index d0c09fac8cf..38c5d206938 100644
--- a/logstash-core-event-java/lib/logstash/event.rb
+++ b/logstash-core-event-java/lib/logstash/event.rb
@@ -29,9 +29,26 @@ def shutdown?; false; end;
 
   # LogStash::SHUTDOWN is used by plugins
   SHUTDOWN = ShutdownEvent.new
+
+  class Event
+    MSG_BRACKETS_METHOD_MISSING = "Direct event field references (i.e. event['field']) have been disabled in favor of using event get and set methods (e.g. event.get('field')). Please consult the Logstash 5.0 breaking changes documentation for more details.".freeze
+    MSG_BRACKETS_EQUALS_METHOD_MISSING = "Direct event field references (i.e. event['field'] = 'value') have been disabled in favor of using event get and set methods (e.g. event.set('field', 'value')). Please consult the Logstash 5.0 breaking changes documentation for more details.".freeze
+    RE_BRACKETS_METHOD = /^\[\]$/.freeze
+    RE_BRACKETS_EQUALS_METHOD = /^\[\]=$/.freeze
+
+    def method_missing(method_name, *arguments, &block)
+      if RE_BRACKETS_METHOD.match(method_name.to_s)
+        raise NoMethodError.new(MSG_BRACKETS_METHOD_MISSING)
+      end
+      if RE_BRACKETS_EQUALS_METHOD.match(method_name.to_s)
+        raise NoMethodError.new(MSG_BRACKETS_EQUALS_METHOD_MISSING)
+      end
+      super
+    end
+  end
 end
 
 # for backward compatibility, require "logstash/event" is used a lots of places so let's bootstrap the
 # Java code loading from here.
 # TODO: (colin) I think we should mass replace require "logstash/event" with require "logstash-core-event"
-require "logstash-core-event"
\ No newline at end of file
+require "logstash-core-event"
diff --git a/logstash-core-event-java/spec/event_spec.rb b/logstash-core-event-java/spec/event_spec.rb
index 0367a27edec..0b7d174e782 100644
--- a/logstash-core-event-java/spec/event_spec.rb
+++ b/logstash-core-event-java/spec/event_spec.rb
@@ -35,7 +35,7 @@
     end
   end
 
-  context "[]" do
+  context "#get" do
     it "should get simple values" do
       e = LogStash::Event.new({"foo" => "bar", "bar" => 1, "baz" => 1.0, TIMESTAMP => "2015-05-28T23:02:05.350Z"})
       expect(e.get("foo")).to eq("bar")
@@ -63,7 +63,7 @@
     end
   end
 
-  context "[]=" do
+  context "#set" do
     it "should set simple values" do
       e = LogStash::Event.new()
       expect(e.set("foo", "bar")).to eq("bar")
@@ -306,4 +306,20 @@
     end
 
   end
+
+  context "method missing exception messages" do
+    subject { LogStash::Event.new({"foo" => "bar"}) }
+
+    it "#[] method raises a better exception message" do
+      expect { subject["foo"] }.to raise_error(NoMethodError, /Direct event field references \(i\.e\. event\['field'\]\)/)
+    end
+
+    it "#[]= method raises a better exception message" do
+      expect { subject["foo"] = "baz" }.to raise_error(NoMethodError, /Direct event field references \(i\.e\. event\['field'\] = 'value'\)/)
+    end
+
+    it "other missing method raises normal exception message" do
+      expect { subject.baz() }.to raise_error(NoMethodError, /undefined method `baz' for/)
+    end
+  end
 end
