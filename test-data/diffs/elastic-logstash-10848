diff --git a/logstash-core/src/main/java/org/logstash/plugins/ConfigurationImpl.java b/logstash-core/src/main/java/org/logstash/plugins/ConfigurationImpl.java
index 7215a4a24c1..57e95302c1f 100644
--- a/logstash-core/src/main/java/org/logstash/plugins/ConfigurationImpl.java
+++ b/logstash-core/src/main/java/org/logstash/plugins/ConfigurationImpl.java
@@ -44,6 +44,8 @@ public <T> T get(final PluginConfigSpec<T> configSpec) {
                 return (T) o;
             } else if (configSpec.type() == Double.class && o.getClass() == Long.class) {
                 return configSpec.type().cast(((Long)o).doubleValue());
+            } else if (configSpec.type() == Boolean.class && o instanceof String) {
+                return configSpec.type().cast(Boolean.parseBoolean((String) o));
             } else if (configSpec.type() == Codec.class && o instanceof String && pluginFactory != null) {
                 Codec codec = pluginFactory.buildDefaultCodec((String) o);
                 return configSpec.type().cast(codec);
diff --git a/logstash-core/src/test/java/org/logstash/plugins/ConfigurationImplTest.java b/logstash-core/src/test/java/org/logstash/plugins/ConfigurationImplTest.java
index 6d30bdda2f6..02d543583df 100644
--- a/logstash-core/src/test/java/org/logstash/plugins/ConfigurationImplTest.java
+++ b/logstash-core/src/test/java/org/logstash/plugins/ConfigurationImplTest.java
@@ -188,4 +188,26 @@ public void testPasswordDefaultValue() {
         Assert.assertEquals("<password>", p.toString());
     }
 
+    @Test
+    public void testBooleanValues() {
+        PluginConfigSpec<Boolean> booleanConfig = PluginConfigSpec.booleanSetting(booleanKey, false, false, false);
+        Configuration config = new ConfigurationImpl(Collections.singletonMap(booleanKey, "tRuE"));
+        boolean value = config.get(booleanConfig);
+        Assert.assertTrue(value);
+
+        config = new ConfigurationImpl(Collections.singletonMap(booleanKey, "false"));
+        value = config.get(booleanConfig);
+        Assert.assertFalse(value);
+
+        booleanConfig = PluginConfigSpec.booleanSetting(booleanKey, false, false, false);
+        config = new ConfigurationImpl(Collections.emptyMap());
+        value = config.get(booleanConfig);
+        Assert.assertFalse(value);
+
+        booleanConfig = PluginConfigSpec.booleanSetting(booleanKey, true, false, false);
+        config = new ConfigurationImpl(Collections.emptyMap());
+        value = config.get(booleanConfig);
+        Assert.assertTrue(value);
+    }
+
 }
