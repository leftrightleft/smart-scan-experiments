diff --git a/README.md b/README.md
index 7da7afc6622..91780ebed51 100644
--- a/README.md
+++ b/README.md
@@ -167,8 +167,8 @@ Note that if a plugin is installed using the plugin manager `bin/logstash-plugin
 You can build a Logstash snapshot package as tarball or zip file
 
 ```sh
-rake artifact:tar
-rake artifact:zip
+./gradlew assembleTarDistribution
+./gradlew assembleZipDistribution
 ```
 
 This will create the artifact `LS_HOME/build` directory
diff --git a/build.gradle b/build.gradle
index feded9fb517..f1f008e0d0d 100644
--- a/build.gradle
+++ b/build.gradle
@@ -159,7 +159,7 @@ task installTestGems(dependsOn: downloadAndInstallJRuby, type: Exec) {
   commandLine jrubyBin, rakeBin, "test:install-core"
 }
 
-task assembleTarDistribution(dependsOn: installTestGems, type: Exec) {
+task assembleTarDistribution(dependsOn: downloadAndInstallJRuby, type: Exec) {
   workingDir projectDir
   inputs.files fileTree("${projectDir}/rakelib")
   inputs.files fileTree("${projectDir}/bin")
@@ -175,6 +175,22 @@ task assembleTarDistribution(dependsOn: installTestGems, type: Exec) {
   commandLine jrubyBin, rakeBin, "artifact:tar"
 }
 
+task assembleZipDistribution(dependsOn: downloadAndInstallJRuby, type: Exec) {
+  workingDir projectDir
+  inputs.files fileTree("${projectDir}/rakelib")
+  inputs.files fileTree("${projectDir}/bin")
+  inputs.files fileTree("${projectDir}/config")
+  inputs.files fileTree("${projectDir}/lib")
+  inputs.files fileTree("${projectDir}/modules")
+  inputs.files fileTree("${projectDir}/logstash-core-plugin-api")
+  inputs.files fileTree("${projectDir}/logstash-core/lib")
+  inputs.files fileTree("${projectDir}/logstash-core/src")
+  outputs.files file("${buildDir}/logstash-${project.version}.tar.gz")
+  standardOutput = new ExecLogOutputStream(System.out)
+  errorOutput =  new ExecLogOutputStream(System.err)
+  commandLine jrubyBin, rakeBin, "artifact:zip"
+}
+
 def logstashBuildDir = "${buildDir}/logstash-${project.version}-SNAPSHOT"
 
 task unpackTarDistribution(dependsOn: assembleTarDistribution, type: Copy) {
