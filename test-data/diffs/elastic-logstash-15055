diff --git a/lib/pluginmanager/pack_fetch_strategy/repository.rb b/lib/pluginmanager/pack_fetch_strategy/repository.rb
index dd13f9a2059..084d071b2cf 100644
--- a/lib/pluginmanager/pack_fetch_strategy/repository.rb
+++ b/lib/pluginmanager/pack_fetch_strategy/repository.rb
@@ -57,6 +57,14 @@ def get_installer_for(plugin_name)
         # So lets skip this strategy but log a meaningful errors.
         PluginManager.ui.debug("Network error, skipping Elastic pack, exception: #{e}")
 
+        return nil
+      rescue Net::OpenTimeout => e
+        PluginManager.ui.debug('Network timeout, skipping Elastic pack.')
+
+        return nil
+      rescue StandardError => e
+        PluginManager.ui.debug("Unknown error, skipping Elastic pack, exception: #{e}")
+
         return nil
       end
     end
diff --git a/lib/pluginmanager/utils/http_client.rb b/lib/pluginmanager/utils/http_client.rb
index ba719ebdec1..3f35a89c7ce 100644
--- a/lib/pluginmanager/utils/http_client.rb
+++ b/lib/pluginmanager/utils/http_client.rb
@@ -27,15 +27,10 @@ def self.start(uri)
       proxy_url = ENV["https_proxy"] || ENV["HTTPS_PROXY"] || ""
       proxy_uri = URI(proxy_url)
 
-      Net::HTTP.start(uri.host, uri.port, proxy_uri.host, proxy_uri.port, proxy_uri.user, proxy_uri.password, http_options(uri)) { |http| yield http }
-    end
-
-    def self.http_options(uri)
-      ssl_enabled = uri.scheme == HTTPS_SCHEME
-
-      {
-        :use_ssl => ssl_enabled
-      }
+      http = Net::HTTP.new(uri.host, uri.port, proxy_uri.host, proxy_uri.port, proxy_uri.user, proxy_uri.password)
+      http.use_ssl(uri.scheme == HTTPS_SCHEME)
+      http.open_timeout(10)
+      http.start { |h| yield h }
     end
 
     # Do a HEAD request on the file to see if it exist before downloading it
