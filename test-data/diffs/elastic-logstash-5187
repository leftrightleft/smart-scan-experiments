diff --git a/qa/Rakefile b/qa/Rakefile
index afbf3dea594..79af23b5733 100644
--- a/qa/Rakefile
+++ b/qa/Rakefile
@@ -2,12 +2,14 @@ require "rspec"
 require "rspec/core/runner"
 require "rspec/core/rake_task"
 require_relative "vagrant-helpers"
+require_relative "platform_config"
+
+platforms = PlatformConfig.new
 
 task :spec    => 'spec:all'
 task :default => :spec
 
 namespace :test do
-
   desc "Generate a valid ssh-config"
   task :ssh_config do
     require "json"
@@ -21,9 +23,7 @@ namespace :test do
   desc "Bootstrap all the VM's used for this tests"
   task "setup" do
     puts "bootstraping all VM's defined in acceptance/Vagrantfile"
-    cd "acceptance" do
-      LogStash::VagrantHelpers.bootstrap
-    end
+    LogStash::VagrantHelpers.bootstrap
   end
 
   namespace :acceptance do
@@ -33,14 +33,11 @@ namespace :test do
       exit(RSpec::Core::Runner.run([Rake::FileList["acceptance/spec/**/*_spec.rb"]]))
     end
 
-    desc "Run acceptance test in debian machines"
-    task :debian do
-      exit(RSpec::Core::Runner.run([Rake::FileList["acceptance/spec/debian/**/*_spec.rb"]]))
-    end
-
-    desc "Run acceptance test in centos machines"
-    task :centos do
-      exit(RSpec::Core::Runner.run([Rake::FileList["acceptance/spec/centos/**/*_spec.rb"]]))
+    platforms.types.each do |type|
+      desc "Run acceptance test in #{type} machines"
+      task type do
+        exit(RSpec::Core::Runner.run([Rake::FileList["acceptance/spec/#{type}/**/*_spec.rb"]]))
+      end
     end
 
     desc "Run one single machine acceptance test"
diff --git a/qa/Vagrantfile b/qa/Vagrantfile
new file mode 100644
index 00000000000..50e10b83586
--- /dev/null
+++ b/qa/Vagrantfile
@@ -0,0 +1,27 @@
+# -*- mode: ruby -*-
+# vi: set ft=ruby :
+require_relative "./platform_config.rb"
+
+Vagrant.configure(2) do |config|
+  platforms = PlatformConfig.new
+
+  platforms.each do |platform|
+    config.vm.define platform.name do |machine|
+      machine.vm.box = platform.box
+      machine.vm.provider "virtualbox" do |v|
+        v.memory = 2096
+        v.cpus = 4
+      end
+      machine.vm.synced_folder "../../build", "/logstash-build", create: true
+      machine.vm.provision :shell do |sh|
+        sh.path = "sys/#{platform.type}/bootstrap.sh"
+        sh.privileged = true
+      end
+
+      machine.vm.provision :shell do |sh|
+        sh.path = "sys/#{platform.type}/user_bootstrap.sh"
+        sh.privileged = false
+      end
+    end
+  end
+end
diff --git a/qa/acceptance/Vagrantfile b/qa/acceptance/Vagrantfile
deleted file mode 100644
index 9534d6ae093..00000000000
--- a/qa/acceptance/Vagrantfile
+++ /dev/null
@@ -1,43 +0,0 @@
-# -*- mode: ruby -*-
-# vi: set ft=ruby :
-
-Vagrant.configure(2) do |config|
-
-  config.vm.define "ubuntu-1204" do |machine|
-    machine.vm.box = "elastic/ubuntu-12.04-x86_64"
-    common_config(machine, "ubuntu")
-  end
-
-  config.vm.define "ubuntu-1404" do |machine|
-    machine.vm.box = "elastic/ubuntu-14.04-x86_64"
-    common_config(machine, "ubuntu")
-  end
-
-  config.vm.define "centos-6" do |machine|
-    machine.vm.box = "elastic/centos-6-x86_64"
-    common_config(machine, "centos")
-  end
-
-  config.vm.define "centos-7" do |machine|
-    machine.vm.box = "elastic/centos-7-x86_64"
-    common_config(machine, "centos")
-  end
-
-end
-
-def common_config(machine, type)
-  machine.vm.provider "virtualbox" do |v|
-    v.memory = 4096
-    v.cpus = 4
-  end
-  machine.vm.synced_folder "../../build", "/logstash-build", create: true
-  machine.vm.provision :shell do |sh|
-    sh.path = "sys/#{type}/bootstrap.sh"
-    sh.privileged = true
-  end
-
-  machine.vm.provision :shell do |sh|
-    sh.path = "sys/#{type}/user_bootstrap.sh"
-    sh.privileged = false
-  end
-end
diff --git a/qa/platform_config.rb b/qa/platform_config.rb
new file mode 100644
index 00000000000..b3df09da7fe
--- /dev/null
+++ b/qa/platform_config.rb
@@ -0,0 +1,41 @@
+# encoding: utf-8
+require "json"
+
+class PlatformConfig
+  Platform = Struct.new(:name, :box, :type)
+
+  DEFAULT_CONFIG_LOCATION = File.join(File.dirname(__FILE__), "platforms.json")
+
+  def initialize(config_path = DEFAULT_CONFIG_LOCATION)
+    @config_path = config_path
+    @platforms = []
+
+    data = JSON.parse(File.read(@config_path))
+    data.each do |k, v|
+      @platforms << Platform.new(k, v["box"], v["type"])
+    end
+
+    @platforms.sort! { |a, b| a.name <=> b.name }
+  end
+
+  def find!(platform_name)
+    result = @platforms.find { |platform| platform.name == platform_name }.first
+    if result.nil?
+      raise "Cannot find platform named: #{platform_name} in @config_path"
+    else
+      return result
+    end
+  end
+
+  def each(&block)
+    @platforms.each(&block)
+  end
+
+  def filter_type(type_name)
+    @platforms.select { |platform| platform.type == type_name }
+  end
+
+  def types
+    @platforms.collect(&:type).uniq.sort
+  end
+end
diff --git a/qa/platforms.json b/qa/platforms.json
new file mode 100644
index 00000000000..b57e3b038bb
--- /dev/null
+++ b/qa/platforms.json
@@ -0,0 +1,6 @@
+{ 
+  "ubuntu-1204": { "box": "elastic/ubuntu-12.04-x86_64", "type": "ubuntu" },
+  "ubuntu-1404": { "box": "elastic/ubuntu-14.04-x86_64", "type": "ubuntu" },
+  "centos-6": { "box": "elastic/centos-6-x86_64", "type": "centos" },
+  "centos-7": { "box": "elastic/centos-7-x86_64", "type": "centos" }
+}
diff --git a/qa/acceptance/sys/centos/bootstrap.sh b/qa/sys/centos/bootstrap.sh
similarity index 100%
rename from qa/acceptance/sys/centos/bootstrap.sh
rename to qa/sys/centos/bootstrap.sh
diff --git a/qa/acceptance/sys/centos/user_bootstrap.sh b/qa/sys/centos/user_bootstrap.sh
similarity index 100%
rename from qa/acceptance/sys/centos/user_bootstrap.sh
rename to qa/sys/centos/user_bootstrap.sh
diff --git a/qa/acceptance/sys/ubuntu/bootstrap.sh b/qa/sys/ubuntu/bootstrap.sh
similarity index 100%
rename from qa/acceptance/sys/ubuntu/bootstrap.sh
rename to qa/sys/ubuntu/bootstrap.sh
diff --git a/qa/acceptance/sys/ubuntu/user_bootstrap.sh b/qa/sys/ubuntu/user_bootstrap.sh
similarity index 100%
rename from qa/acceptance/sys/ubuntu/user_bootstrap.sh
rename to qa/sys/ubuntu/user_bootstrap.sh
