diff --git a/logstash-core/src/main/java/org/logstash/instrument/monitors/MemoryMonitor.java b/logstash-core/src/main/java/org/logstash/instrument/monitors/MemoryMonitor.java
index 1b162534d83..94977220ffc 100644
--- a/logstash-core/src/main/java/org/logstash/instrument/monitors/MemoryMonitor.java
+++ b/logstash-core/src/main/java/org/logstash/instrument/monitors/MemoryMonitor.java
@@ -11,7 +11,11 @@
 /**
  * Based on code created by purbon on 13/12/15.
  */
-public class MemoryMonitor {
+public final class MemoryMonitor {
+
+    private MemoryMonitor() {
+        //Utility Class
+    }
 
     public enum Type {
         All, Heap, NonHeap
diff --git a/logstash-core/src/main/java/org/logstash/instrument/reports/MemoryReport.java b/logstash-core/src/main/java/org/logstash/instrument/reports/MemoryReport.java
index 5e018c3c482..fc267693c03 100644
--- a/logstash-core/src/main/java/org/logstash/instrument/reports/MemoryReport.java
+++ b/logstash-core/src/main/java/org/logstash/instrument/reports/MemoryReport.java
@@ -25,7 +25,7 @@ public static Map<String, Map<String, Map<String, Object>>> generate() {
     }
 
     private static MemoryMonitor.Report generateReport(MemoryMonitor.Type type) {
-        return new MemoryMonitor().detect(type);
+        return MemoryMonitor.detect(type);
     }
 }
 
diff --git a/logstash-core/src/test/java/org/logstash/instruments/monitors/MemoryMonitorTest.java b/logstash-core/src/test/java/org/logstash/instruments/monitors/MemoryMonitorTest.java
index 417a1e07104..f19f04d3b7c 100644
--- a/logstash-core/src/test/java/org/logstash/instruments/monitors/MemoryMonitorTest.java
+++ b/logstash-core/src/test/java/org/logstash/instruments/monitors/MemoryMonitorTest.java
@@ -15,19 +15,19 @@ public class MemoryMonitorTest {
 
     @Test
     public void testEachHeapSpaceRepresented() {
-        Map<String, Map<String, Object>> heap = new MemoryMonitor().detect(MemoryMonitor.Type.All).getHeap();
+        Map<String, Map<String, Object>> heap = MemoryMonitor.detect(MemoryMonitor.Type.All).getHeap();
         assertThat(heap, notNullValue());
         assertThat(heap.keySet(), hasItems("PS Survivor Space", "PS Old Gen", "PS Eden Space"));
     }
 
     @Test
     public void testAllStatsAreAvailableForHeap(){
-        testAllStatsAreAvailable(new MemoryMonitor().detect(MemoryMonitor.Type.All).getHeap());
+        testAllStatsAreAvailable(MemoryMonitor.detect(MemoryMonitor.Type.All).getHeap());
     }
 
     @Test
     public void testAllStatsAreAvailableForNonHeap(){
-        testAllStatsAreAvailable(new MemoryMonitor().detect(MemoryMonitor.Type.All).getNonHeap());
+        testAllStatsAreAvailable(MemoryMonitor.detect(MemoryMonitor.Type.All).getNonHeap());
     }
 
     private void testAllStatsAreAvailable(Map<String, Map<String, Object>> stats){
