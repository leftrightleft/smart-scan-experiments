diff --git a/docs/include/attributes-ls.asciidoc b/docs/include/attributes-ls.asciidoc
index 714982cadef..3bff96cfc14 100644
--- a/docs/include/attributes-ls.asciidoc
+++ b/docs/include/attributes-ls.asciidoc
@@ -8,3 +8,275 @@ with a corresponding change to the VPR settings in
 logstash-docs/docs/versioned-plugins/include/attributes-ls-vpr.asciidoc
 /////
 
+
+/////
+Logstash settings
+/////
+
+//Tip: Using `.` in attribute names doesn't work.
+
+:lsyml: Available in`logstash.yml`.
+:plyml: Available in`pipelines.yml`.
+:bothyml: Available in `logstash.yml` and `pipelines.yml`.
+
+//Setup
+
+:allowsuperuser: allow_superuser
+:allowsuperuser-desc: Allow or block running Logstash as superuser. Default: `true`.
+
+:nodename: node.name
+:nodename-desc: A descriptive name for the node. Default is machine's hostname.
+
+:pathdata: path.data
+:pathdata-desc: The directory that Logstash and its plugins use for any persistent needs, such as persistent queue (PQ) data or dead letter queue (DLQ) data. Default is `LOGSTASH_HOME/data`.
+
+:pathplugins: path.plugins
+:pathplugins-desc: File location for custom plugins. +
+You can specify this setting multiple times to include multiple paths. +
+Plugins are expected to be in a specific directory hierarchy: `PATH/logstash/TYPE/NAME.rb` where `TYPE` is `inputs`, `filters`, `outputs`, or `codecs`, and `NAME` is the name of the plugin. +
+This setting is platform-specific. See <<dir-layout>> for more info.
+
+:modules: modules
+:modules-desc: When configured, modules must be in the nested YAML structure.
+
+//Pipeline settings
+
+:pipeline-id: pipeline.id
+:pipeline-id-desc: The ID of the pipeline. Default: `main`.
+
+:pipeline-workers: pipeline.workers
+:pipeline-workers-desc: Set the number of workers that will, in parallel, execute the filters+outputs stage of the pipeline. Defaults to the number of the host's CPU cores. +
+If you have modified this setting and see that events are backing up, or that the CPU is not saturated, consider increasing this number to better utilize machine processing power. 
+
+:pipeline-batchsize: pipeline.batch.size
+:pipeline-batchsize-desc: The maximum number of events an individual worker thread should collect from inputs before attempting to execute its filters and outputs. +
+Larger batch sizes are generally more efficient, but come at the cost of increased memory overhead. +
+You may need to increase JVM heap space in the `jvm.options` config file. +
+See <<config-setting-files>> for more info. Default is 125.
+
+:pipeline-batch-delay: pipeline.batch.delay
+:pipeline-batch-delay-desc: How long to wait in milliseconds while polling for the next event before dispatching an undersized batch to filters+outputs. Default is 50. 
+
+:pipeline-unsafe-shutdown: pipeline.unsafe_shutdown
+:pipeline-unsafe-shutdown-desc: When set to `true`, forces Logstash to exit during shutdown, even if there are still inflight events in memory. +
+By default, Logstash refuses to quit until all received events have been pushed to the outputs. +
+Default is `false`. + 
+WARNING: Enabling this setting can lead to data loss during shutdown. 
+
+:pipeline-plugin_classloaders: pipeline.plugin_classloaders
+:pipeline-plugin_classloaders-desc:	(Beta) Load Java plugins in independent classloaders to isolate their dependencies. Default is `false`. 
+
+:pipeline-ordered: pipeline.ordered
+:pipeline-ordered-desc: Set the pipeline event ordering. Options are "auto" (default), "true", "false". +
+Setting this value to "auto" automatically enables ordering if the 'pipeline.workers' setting is also set to '1', and disables otherwise. +
+Setting this value to "true" enforces ordering on the pipeline and prevent logstash from starting if there are multiple workers. +
+Setting this value to "false" disables any extra processing necessary for preserving ordering.
+
+:pipeline-separatelogs: pipeline.separate_logs
+:pipeline-separatelogs-desc: Flag to output log lines of each pipeline to a separate log file. If enabled, Logstash creates a different log file for each pipeline, using the pipeline.id as name of the file. +
+When you have many Logstash pipelines, separating each log by pipeline could be helpful in case you need to troubleshoot a single pipeline+
+Default is `false`.
+
+
+
+
+
+
+
+:pipeline-ecs_compatibility: pipeline.ecs_compatibility
+:pipeline-ecs_compatibility-desc: Sets the pipeline's default value for `ecs_compatibility`, a setting that is available to plugins that implement an ECS Compatibility mode for use with the Elastic Common Schema. +
+Possible values are `disabled`, `v1`, `v8` (default). +
+Pipelines defined before Logstash 8 operate without ECS in mind. +
+To ensure a migrated pipeline continues to operate as it did before your upgrade, opt-OUT of ECS for the individual pipeline in its `pipelines.yml` definition. +
+Setting this value sets the default for _all_ pipelines, including new ones.
+
+
+//Pipeline config settings
+
+:path-config: path.config
+:path-config-desc: The path to the Logstash pipeline configuration for the main pipeline. +
+If you specify a directory or wildcard, config files are read from the directory in alphabetical order. +
+This setting is platform-specific. See <<dir-layout>> for more info.
+
+:config-string: config.string
+:config-string-desc: A string that contains the pipeline configuration for the main pipeline. Use the same syntax as the config file.
+
+:config-test_and_exit: config.test_and_exit
+:config-test_and_exit-desc: When set to `true`, at startup checks to ensure that the configuration is valid and then exits. Logstash can read multiple config files from a directory. +
+Note that grok patterns are not checked for correctness. +
+If you combine this setting with `log.level: debug`, Logstash logs the combined config file, annotating each config block with the source file it came from. +
+Default is `false`. 
+
+:config-reload-automatic: config.reload.automatic
+:config-reload-automatic-desc: Periodically checks to see if the pipeline configuration has changed and reloads the pipeline after changes. +
+This can also be triggered manually through the SIGHUP signal. Default is `false`.
+
+:config-reload-interval: config.reload.interval
+:config-reload-interval-desc: How often to check if the pipeline configuration has changed (in seconds). +
+Note that the unit value (s) is required. Values without a qualifier (such as 60) are treated as nanoseconds. Default is 3s. +
+IMPORTANT: Setting the interval this way is not recommended and might change in later versions.
+
+:config-debug: config.debug
+:config-debug-desc: When set to `true`, shows the fully compiled configuration as a debug log message. +
+You must also set log.level: debug. Default is `false`. +
+WARNING: The log message will include any password options passed to plugin configs as plaintext, and may result in plaintext passwords appearing in your logs.
+
+:config-support_escapes: config.support_escapes
+:config-support_escapes-desc: When enabled, process escaped characters such as \n and \" in strings in the pipeline configuration files. Default is `false`. +
+When set to `true`, quoted strings process these escape sequences: `\n` becomes a literal newline (ASCII 10). `\r` becomes a literal carriage return (ASCII 13). `\t` becomes a literal tab (ASCII 9). `\\` becomes a literal backslash `\`. `\"` becomes a literal double quotation mark. `\'` becomes a literal quotation mark.
+
+:config-field-ref-escape-style: config.field_reference.escape_style
+:config-field-ref-escape-style-desc: [Technical preview]. Provides a way to reference fields that contain <<formal-grammar-escape-sequences,field reference special characters>> `[` and `]`. +
+Current options are `percent`, `ampersand`, `none`. +
+The `percent` option: URI-style `%`+`HH` hexadecimal encoding of UTF-8 bytes (`[` -> `%5B`; `]` -> `%5D`). +
+The `ampersand` option is HTML-style `&#`+`DD`+`;` encoding of decimal Unicode code-points (`[` -> `&#91;`; `]` -> `&#93;`). +
+The `none` option means that field names containing special characters _cannot_ be referenced. +
+NOTE: This feature is in technical preview and may change in the future.
+
+
+
+//Queue settings
+
+:queuetype: queue.type
+:queuetype-desc: The internal queuing model to use for event buffering. + 
+Specify `persisted` to enable <<persistent-queues,persistent queues>> for disk-based ACKed queueing, or `memory` for legacy <<memory-queue,in-memory based queueing>>. +
+Default is `memory`.
+
+:pathqueue: path.queue
+:pathqueue-desc: The directory path where the data files will be stored when persistent queues are enabled (`queue.type: persisted`). Default: `path.data/queue`. 
+
+:queuepage_capacity: queue.page_capacity
+:queuepage_capacity-desc: The queue data consists of append-only data files separated into "pages. +
+This option sets the maximum size of the page data files in bytes (`queue.type: persisted`). 
+The default size of 64mb is a good value for most users, and changing this value is unlikely to have performance benefits. +
+If you change the page capacity of an existing queue, the new size applies only to the new page. Default is `64mb`.
+
+:queuedrain: queue.drain
+:queuedrain-desc: When set to `true`, Logstash waits until the persistent queue is drained before shutting down. +
+The amount of time it takes to drain the queue depends on the number of events that have accumulated in the queue. +
+Tip: Avoid using this setting unless the queue, even when full, is relatively small and can be drained quickly. Default is `false`.
+
+:queuemaxevents: queue.max_events
+:queuemaxevents-desc: The maximum number of events not yet read by the pipeline worker (`queue.type: persisted`). The default is `0` (unlimited). +
+We use this setting for internal testing. +
+Users generally shouldn't change this value.
+
+:queuemaxbytes: queue.max_bytes
+:queuemaxbytes-desc: The total capacity of each queue in number of bytes (`queue.type: persisted`). Unless overridden in `pipelines.yml` or central management, each persistent queue will be sized at the value of `queue.max_bytes` specified in `logstash.yml`. +
+Be sure that your disk has sufficient capacity to handle the cumulative total of `queue.max_bytes` across all persistent queues. The total of `queue.max_bytes` for ALL queues should be lower than the capacity of your disk. +
+If both `queue.max_events` and `queue.max_bytes` are specified, Logstash uses whichever criteria is reached first. Default: 1024mb (1gb).
+
+:queuecheckpointacks: queue.checkpoint.acks 
+:queuecheckpointacks-desc: Sets the maximum number of acked events before forcing a checkpoint (`queue.type: persisted`). Default is 1024. Specify `queue.checkpoint.acks: 0` to set this value to unlimited.
+    
+:queuecheckpointwrites: queue.checkpoint.writes 
+:queuecheckpointwrites-desc: Sets the maximum number of written events before a forced checkpoint (`queue.type: persisted`). Default is 1024. Specify `queue.checkpoint.writes: 0` to set this value to unlimited. +
+To avoid losing data in the persistent queue, you can set `queue.checkpoint.writes: 1` to force a checkpoint after each event is written. +
+ Keep in mind that disk writes have a resource cost. Setting this value to 1 ensures maximum durability, but can severely impact performance. See <<durability-persistent-queues>> to better understand the trade-offs.
+
+:queuecheckpointretry: queue.checkpoint.retry
+:queuecheckpointretry-desc:	When enabled, Logstash will retry four times per attempted checkpoint write for any checkpoint writes that fail. Any subsequent errors are not retried. +
+This is a workaround for failed checkpoint writes that have been seen only on Windows platform, filesystems with non-standard behavior such as SANs and is not recommended except in those specific circumstances. (queue.type: persisted)+
+Default is `true`.
+
+:queuecheckpointinterval: queue.checkpoint.interval 
+:queuecheckpointinterval-desc: Sets the interval in milliseconds when a checkpoint is forced on the head page (`queue.type: persisted`). Default is 1000. Set to 0 to eliminate periodic checkpoints. 
+
+
+//DLQ settings
+
+
+:dlqenable: dead_letter_queue.enable
+:dlqenable-desc: Flag to turn on dead letter queue (DLQ) supported by plugins. Default is `false`.
+
+:dlqmaxbytes: dead_letter_queue.max_bytes
+:dlqmaxbytes-desc: Applies when dead_letter_queue.enable: true. The maximum size of each dead letter queue (DLQ). +
+Entries will be dropped if they would increase the size of the dead letter queue beyond this value. Default is `1024mb`.
+
+:dlqflush_interval: dead_letter_queue.flush_interval
+:dlqflush_interval-desc: Applies when dead_letter_queue.enable: true. +
+The interval in milliseconds a dead letter queue file will be written if no additional DLQ events have been created. +
+A low value means that more, smaller queue files may be written. +
+A larger value introduces more latency between items being "written" to the dead letter queue and available to be read by the dead_letter_queue input.
+Default is 5000.
+
+:dlqstorage_policy: dead_letter_queue.storage_policy
+:dlqstorage_policy-desc: Applies when dead_letter_queue.enable: true. +
+Defines the action to take when the dead_letter_queue.max_bytes is reached.
+Options are "drop_newer" (default) or "drop_older". +
+With drop_newer, messages that were inserted most recently are dropped, logging an error line. With drop_older setting, the oldest messages are dropped as new ones are inserted. + 
+Default value is "drop_newer".
+
+:pathdlq: path.dead_letter_queue
+:pathdlq-desc: If `dead_letter_queue.enable: true`, sets the directory path where the data files will be stored. +
+Default is `path.data/dead_letter_queue`.
+
+
+//API settings
+
+:apienabled: api.enabled
+:apienabled-desc: The HTTP API is enabled by default. It can be disabled, but features that rely on it will not work as intended. Default is `true`.
+
+:apienvironment: api.environment
+:apienvironment-desc: The API returns the provided string as a part of its response. Setting your environment may help to disambiguate between similarly-named nodes in production vs test environments. +
+Default is `production`.
+
+:apihttp_host: api.http.host
+:apihttp_host-desc: The bind address for the HTTP API endpoint. +
+By default, the {ls} HTTP API binds only to the local loopback interface.
+When configured securely (`api.ssl.enabled: true` and `api.auth.type: basic`), the HTTP API binds to _all_ available interfaces. +
+Default is `"127.0.0.1"`.
+
+:apihttp_port: api.http.port
+:apihttp_port-desc: The bind port for the HTTP API endpoint. +
+Default is `9600-9700`.
+
+:apissl_enabled: api.ssl.enabled
+:apissl_enabled-desc: Set to `true` to enable SSL on the HTTP API. +
+Doing so requires both `api.ssl.keystore.path` and `api.ssl.keystore.password` to be set. +
+Default is `false.`
+
+:apissl_keystore_path: api.ssl.keystore.path
+:apissl_keystore_path-desc: The path to a valid JKS or PKCS12 keystore for use in securing the {ls} API. +
+The keystore must be password-protected, and must contain a single certificate chain and a private key.  This setting is ignored unless `api.ssl.enabled` is set to `true`.
+
+:apissl_keystore_password: api.ssl.keystore.password
+:apissl_keystore_password-desc: The password to the keystore provided with `api.ssl.keystore.path`. +
+This setting is ignored unless `api.ssl.enabled` is set to `true`.
+
+:apiauthtype: api.auth.type
+:apiauthtype-desc: Set to `basic` to require HTTP Basic auth on the API using the credentials supplied with `api.auth.basic.username` and `api.auth.basic.password`. +
+Default is `none`.
+
+:apiauth_basic_username: api.auth.basic.username
+:apiauth_basic_username-desc: The username to require for HTTP Basic auth. +
+Ignored unless `api.auth.type` is set to `basic`.
+
+:apiauth_basic_pw: api.auth.basic.password
+:apiauth_basic_pw-desc: The password to require for HTTP Basic auth. Ignored unless `api.auth.type` is set to `basic`. +
+It should meet default password policy which requires non-empty minimum 8 char string that includes a digit, upper case letter and lower case letter. +
+You can customize the default password policy with these options:
+
+//Additional password_policy options are sourced from api-setting.asciidoc to allow for more formatting flexibility
+:apiauth.basic.pw_policy.digit: api.auth.basic.password_policy.include.digit
+:apiauth.basic.pw_policy.upper: api.auth.basic.password_policy.include.upper
+:apiauth.basic.pw_policy.lower: api.auth.basic.password_policy.include.lower
+:apiauth.basic.pw_policy.symbol: api.auth.basic.password_policy.include.symbol
+:apiauth.basic.pw_policy.minimum: api.auth.basic.password_policy.length.minimum
+
+:apiauth_basic_pw_policy_mode: api.auth.basic.password_policy.mode
+:apiauth_basic_pw_policy_mode-desc: Raises either `WARN` or `ERROR` message when password requirements are not met. +
+Ignored unless `api.auth.type` is set to `basic`. Default is  `WARN`.
+
+//Debug Settings
+
+:loglevel: log-level
+:loglevel-desc: Options for log.level are `fatal`, `error`, `warn`, `info`, `debug`, `trace`. Default is  `info`.
+
+:pathlogs: path.logs
+:pathlogs-desc: The directory where Logstash writes its logs.
+Default is `LOGSTASH_HOME/logs`.
+
+:logformat: log.format
+:logformat-desc: The format to use for outputting logs. Set to `json` to log in JSON format, or `plain` to use `Object#.inspect`. +
+Default is `plain`.
diff --git a/docs/static/persistent-queues.asciidoc b/docs/static/persistent-queues.asciidoc
index 255b43f0093..aef49b0d475 100644
--- a/docs/static/persistent-queues.asciidoc
+++ b/docs/static/persistent-queues.asciidoc
@@ -41,40 +41,7 @@ When you set values for capacity and sizing settings, remember that the value yo
 
 TIP: If you want to define values for a specific pipeline, use <<multiple-pipelines,`pipelines.yml`>>.
 
-`queue.type`:: Specify `persisted` to enable persistent queues. By default, persistent queues are disabled (default: `queue.type: memory`).
-`path.queue`:: The directory path where the data files will be stored. By default, the files are stored in `path.data/queue`.
-`queue.page_capacity`:: The queue data consists of append-only files called "pages." This value sets the maximum size of a queue page in bytes. 
-The default size of 64mb is a good value for most users, and changing this value is unlikely to have performance benefits. 
-If you change the page capacity of an existing queue, the new size applies only to the new page.
-`queue.drain`:: Specify `true` if you want Logstash to wait until the persistent queue is drained before shutting down. The amount of time it takes to drain the queue depends on the number of events that have accumulated in the queue. Therefore, you should avoid using this setting unless the queue, even when full, is relatively small and can be drained quickly. 
-`queue.max_events`:: The maximum number of events not yet read by the pipeline worker. The default is 0 (unlimited).
-We use this setting for internal testing. 
-Users generally shouldn't be changing this value.
-`queue.max_bytes`:: The total capacity of _each queue_ in number of bytes. 
-Unless overridden in `pipelines.yml` or central management, each persistent
-queue will be sized at the value of `queue.max_bytes` specified in
-`logstash.yml`. 
-The default is 1024mb (1gb).
-+
-NOTE: Be sure that your disk has sufficient capacity to handle the cumulative total of `queue.max_bytes` across all persistent queues.
-The total of `queue.max_bytes` for _all_ queues should be
-lower than the capacity of your disk.
-+
-TIP: If you are using persistent queues to protect against data loss, but don't
-require much buffering, you can set `queue.max_bytes` to a smaller value.
-A smaller value produces smaller queues and improves queue performance. 
-
-`queue.checkpoint.acks`:: Sets the number of acked events before forcing a checkpoint. 
-Default is `1024`. Set to `0` for unlimited.
-`queue.checkpoint.writes`:: Sets the maximum number of written events before a forced checkpoint. 
-Default is `1024`. Set to `0` for unlimited.
-+
-To avoid losing data in the persistent queue, you can set `queue.checkpoint.writes: 1` to force a checkpoint after each event is
-written. Keep in mind that disk writes have a resource cost. Setting this value
-to `1` ensures maximum durability, but can severely impact performance.
-See <<durability-persistent-queues>> to better understand the trade-offs.
-`queue.checkpoint.interval`:: Sets the interval in milliseconds when a checkpoint is forced on the head page.
-Default is `1000`. Set to `0` to eliminate periodic checkpoints.
+include::./settings/pq-settings.asciidoc[]
 
 [[pq-config-notes]]
 ==== Configuration notes
diff --git a/docs/static/setting-up-logstash.asciidoc b/docs/static/setting-up-logstash.asciidoc
index b7c2864d44c..c09d8835d90 100644
--- a/docs/static/setting-up-logstash.asciidoc
+++ b/docs/static/setting-up-logstash.asciidoc
@@ -8,6 +8,7 @@ This section includes additional information on how to set up and run Logstash,
 * <<dir-layout>>
 * <<config-setting-files>>
 * <<logstash-settings-file>>
+* <<logstash-yml-settings>>
 * <<keystore>>
 * <<running-logstash-command-line>>
 * <<running-logstash>>
diff --git a/docs/static/settings-file.asciidoc b/docs/static/settings-file.asciidoc
index b4770e92771..d71609e66fd 100644
--- a/docs/static/settings-file.asciidoc
+++ b/docs/static/settings-file.asciidoc
@@ -63,287 +63,4 @@ modules:
 
 IMPORTANT: If the <<command-line-flags,command-line flag>> `--modules` is used, any modules defined in the `logstash.yml` file will be ignored.
 
-The `logstash.yml` file includes the following settings. 
-
-[options="header"]
-|=======================================================================
-| Setting | Description | Default value
-
-| `node.name`
-| A descriptive name for the node.
-| Machine's hostname
-
-| `path.data`
-| The directory that Logstash and its plugins use for any persistent needs.
-|`LOGSTASH_HOME/data`
-
-| `pipeline.id`
-| The ID of the pipeline.
-| `main`
-
-| `pipeline.workers` 
-| The number of workers that will, in parallel, execute the filter and output
-stages of the pipeline. This setting uses the
-https://docs.oracle.com/javase/7/docs/api/java/lang/Runtime.html#availableProcessors()[`java.lang.Runtime.getRuntime.availableProcessors`]
-value as a default if not overridden by `pipeline.workers` in `pipelines.yml` or
-`pipeline.workers` from `logstash.yml`.  If you have modified this setting and
-see that events are backing up, or that the CPU is not saturated, consider
-increasing this number to better utilize machine processing power. 
-| Number of the host's CPU cores
-
-| `pipeline.batch.size`
-| The maximum number of events an individual worker thread will collect from inputs
-  before attempting to execute its filters and outputs.
-  Larger batch sizes are generally more efficient, but come at the cost of increased memory
-  overhead. You may need to increase JVM heap space in the `jvm.options` config file.
-  See <<config-setting-files>> for more info.
-| `125`
-
-| `pipeline.batch.delay`
-| When creating pipeline event batches, how long in milliseconds to wait for
-  each event before dispatching an undersized batch to pipeline workers.
-| `50`
-
-| `pipeline.unsafe_shutdown`
-| When set to `true`, forces Logstash to exit during shutdown even if there are still inflight events
-  in memory. By default, Logstash will refuse to quit until all received events
-  have been pushed to the outputs. Enabling this option can lead to data loss during shutdown.
-| `false`
-
-| `pipeline.plugin_classloaders`
-| (Beta) Load Java plugins in independent classloaders to isolate their dependencies.
-| `false`
-
-| `pipeline.ordered`
-a|
-Set the pipeline event ordering. Valid options are:
-
-* `auto`. Automatically enables ordering if the `pipeline.workers` setting is `1`, and disables otherwise.
-* `true`. Enforces ordering on the pipeline and prevents Logstash from starting
-if there are multiple workers.
-* `false`. Disables the processing required to preserve order. Ordering will not be
-guaranteed, but you save the processing cost of preserving order.
-
-| `auto`
-
-| `pipeline.ecs_compatibility`
-a|
-Sets the pipeline's default value for `ecs_compatibility`, a setting that is available to plugins that implement an ECS compatibility mode for use with the Elastic Common Schema.
-Possible values are:
-
-* `disabled`
-* `v1`
-* `v8`
-
-This option allows the <<ecs-ls,early opt-in (or preemptive opt-out) of ECS compatibility>> modes in plugins,
-which is scheduled to be on-by-default in a future major release of {ls}.
-
-Values other than `disabled` are currently considered BETA, and may produce unintended consequences when upgrading {ls}.
-
-| `disabled`
-
-| `path.config`
-| The path to the Logstash config for the main pipeline. If you specify a directory or wildcard,
-  config files are read from the directory in alphabetical order.
-| Platform-specific. See <<dir-layout>>.
-
-| `config.string`
-| A string that contains the pipeline configuration to use for the main pipeline. Use the same syntax as
-  the config file.
-| _N/A_
-
-| `config.test_and_exit`
-| When set to `true`, checks that the configuration is valid and then exits. Note that grok patterns are not checked for
-  correctness with this setting. Logstash can read multiple config files from a directory. If you combine this
-  setting with `log.level: debug`, Logstash will log the combined config file, annotating
-  each config block with the source file it came from.
-| `false`
-
-| `config.reload.automatic`
-| When set to `true`, periodically checks if the configuration has changed and reloads the configuration whenever it is changed.
-  This can also be triggered manually through the SIGHUP signal.
-| `false`
-
-| `config.reload.interval`
-| How often in seconds Logstash checks the config files for changes. Note that the unit qualifier (`s`) is required.
-| `3s`
-
-| `config.debug`
-| When set to `true`, shows the fully compiled configuration as a debug log message. You must also set `log.level: debug`.
-  WARNING: The log message will include any 'password' options passed to plugin configs as plaintext, and may result
-  in plaintext passwords appearing in your logs!
-| `false`
-
-| `config.support_escapes`
-| When set to `true`, quoted strings will process the following escape sequences: `\n` becomes a literal newline (ASCII 10). `\r` becomes a literal carriage return (ASCII 13). `\t` becomes a literal tab (ASCII 9). `\\` becomes a literal backslash `\`. `\"` becomes a literal double quotation mark. `\'` becomes a literal quotation mark.
-| `false`
-
-| `config.field_reference.escape_style`
-a| Provides a way to reference fields that contain <<formal-grammar-escape-sequences,field reference special characters>> `[` and `]`.
-
-NOTE: This feature is in *technical preview* and may change in the future.
-
-Current options are:
-
-* `percent`: URI-style `%`{plus}`HH` hexadecimal encoding of UTF-8 bytes (`[` -> `%5B`; `]` -> `%5D`)
-* `ampersand`: HTML-style `&#`{plus}`DD`{plus}`;` encoding of decimal Unicode code-points (`[` -> `&#91;`; `]` -> `&#93;`)
-* `none`: field names containing special characters _cannot_ be referenced.
-
-| `none`
-
-| `modules`
-| When configured, `modules` must be in the nested YAML structure described above this table.
-| _N/A_
-
-| `queue.type`
-| The internal queuing model to use for event buffering. Specify `memory` for legacy in-memory based queuing, or `persisted` for disk-based ACKed queueing (<<persistent-queues,persistent queues>>).
-| `memory`
-
-| `path.queue`
-| The directory path where the data files will be stored when persistent queues are enabled (`queue.type: persisted`).
-| `path.data/queue`
-
-| `queue.page_capacity`
-| The size of the page data files used when persistent queues are enabled (`queue.type: persisted`). The queue data consists of append-only data files separated into pages.
-| 64mb
-
-| `queue.max_events`
-| The maximum number of unread events in the queue when persistent queues are enabled (`queue.type: persisted`).
-| 0 (unlimited)
-
-| `queue.max_bytes`
-| The total capacity of the queue (`queue.type: persisted`) in number of bytes. Make sure the capacity of your disk drive is greater than the value you specify here. If both `queue.max_events` and `queue.max_bytes` are specified, Logstash uses whichever criteria is reached first.
-| 1024mb (1g)
-
-| `queue.checkpoint.acks`
-| The maximum number of ACKed events before forcing a checkpoint when persistent queues are enabled (`queue.type: persisted`). Specify `queue.checkpoint.acks: 0` to set this value to unlimited.
-|1024
-
-| `queue.checkpoint.writes`
-| The maximum number of written events before forcing a checkpoint when persistent queues are enabled (`queue.type: persisted`). Specify `queue.checkpoint.writes: 0` to set this value to unlimited.
-| 1024
-
-| `queue.checkpoint.retry`
-| When enabled, Logstash will retry four times per attempted checkpoint write for any checkpoint writes that fail. Any subsequent errors are not retried. This is a workaround for failed checkpoint writes that have been seen only on Windows platform, filesystems with non-standard behavior such as SANs and is not recommended except in those specific circumstances. (`queue.type: persisted`)
-| `true`
-
-| `queue.drain`
-| When enabled, Logstash waits until the persistent queue (`queue.type: persisted`) is drained before shutting down.
-| `false`
-
-| `dead_letter_queue.enable`
-| Flag to instruct Logstash to enable the DLQ feature supported by plugins.
-| `false`
-
-| `dead_letter_queue.max_bytes`
-| The maximum size of each dead letter queue. Entries will be dropped if they
-  would increase the size of the dead letter queue beyond this setting.
-| `1024mb`
-
-| `dead_letter_queue.storage_policy`
-| Defines the action to take when the dead_letter_queue.max_bytes setting is reached: `drop_newer` stops accepting new values that would push the file size over the limit, and `drop_older` removes the oldest events to make space for new ones.
-| `drop_newer`
-
-| `path.dead_letter_queue`
-| The directory path where the data files will be stored for the dead-letter queue.
-| `path.data/dead_letter_queue`
-
-| `api.enabled`
-|  The HTTP API is enabled by default. It can be disabled, but features that rely on it will not work as intended.
-| `true`
-
-| `api.environment`
-| The API returns the provided string as a part of its response. Setting your environment may help to disambiguate between similarly-named nodes in production vs test environments.
-| `production`
-
-| `api.http.host`
-| The bind address for the HTTP API endpoint.
-  By default, the {ls} HTTP API binds only to the local loopback interface.
-  When configured securely (`api.ssl.enabled: true` and `api.auth.type: basic`), the HTTP API binds to _all_ available interfaces.
-| `"127.0.0.1"`
-
-| `api.http.port`
-| The bind port for the HTTP API endpoint.
-| `9600-9700`
-
-| `api.ssl.enabled`
-| Set to `true` to enable SSL on the HTTP API.
-  Doing so requires both `api.ssl.keystore.path` and `api.ssl.keystore.password` to be set.
-| `false`
-
-| `api.ssl.keystore.path`
-| The path to a valid JKS or PKCS12 keystore for use in securing the {ls} API.
-  The keystore must be password-protected, and must contain a single certificate chain and a private key.
-  This setting is ignored unless `api.ssl.enabled` is set to `true`.
-| _N/A_
-
-| `api.ssl.keystore.password`
-| The password to the keystore provided with `api.ssl.keystore.path`.
-  This setting is ignored unless `api.ssl.enabled` is set to `true`.
-| _N/A_
-
-| `api.auth.type`
-| Set to `basic` to require HTTP Basic auth on the API using the credentials supplied with `api.auth.basic.username` and `api.auth.basic.password`.
-| `none`
-
-| `api.auth.basic.username`
-| The username to require for HTTP Basic auth
-  Ignored unless `api.auth.type` is set to `basic`.
-| _N/A_
-
-| `api.auth.basic.password`
-a| The password to require for HTTP Basic auth. Ignored unless `api.auth.type` is set to `basic`.
-It should meet default password policy which requires non-empty minimum 8 char string that includes a digit, upper case letter and lower case letter.
-The default password policy can be customized by following options:
-
-* Set `api.auth.basic.password_policy.include.digit` `REQUIRED` (default) to accept only passwords that include at least one digit or `OPTIONAL` to exclude from requirement.
-* Set `api.auth.basic.password_policy.include.upper` `REQUIRED` (default) to accept only passwords that include at least one upper case letter or `OPTIONAL` to exclude from requirement.
-* Set `api.auth.basic.password_policy.include.lower` `REQUIRED` (default) to accept only passwords that include at least one lower case letter or `OPTIONAL` to exclude from requirement.
-* Set `api.auth.basic.password_policy.include.symbol` `REQUIRED` to accept only passwords that include at least one special character or `OPTIONAL` (default) to exclude from requirement.
-* Set `api.auth.basic.password_policy.length.minimum` to a value from 9 to 1024 if you want to require more than the 8 character default setting for passwords.
-
-| _N/A_
-
-| `api.auth.basic.password_policy.mode`
-| Raises either `WARN` or `ERROR` message when password requirements are not met.
-Ignored unless `api.auth.type` is set to `basic`.
-| `WARN`
-
-| `log.level`
-a|
-The log level. Valid options are:
-
-* `fatal`
-* `error`
-* `warn`
-* `info`
-* `debug`
-* `trace`
-
-| `info`
-
-| `log.format`
-| The log format. Set to `json` to log in JSON format, or `plain` to use `Object#.inspect`.
-| `plain`
-
-| `path.logs`
-| The directory where Logstash will write its log to.
-| `LOGSTASH_HOME/logs`
-
-| `pipeline.separate_logs`
-|  This a boolean setting to enable separation of logs per pipeline in different log files. If enabled Logstash will create a different log file for each pipeline,
-using the pipeline.id as name of the file. The destination directory is taken from the `path.log`s setting. When there are many pipelines configured in Logstash,
-separating each log lines per pipeline could be helpful in case you need to troubleshoot what’s happening in a single pipeline, without interference of the other ones.
-| `false`
-
-| `path.plugins`
-| Where to find custom plugins. You can specify this setting multiple times to include
-  multiple paths. Plugins are expected to be in a specific directory hierarchy:
-  `PATH/logstash/TYPE/NAME.rb` where `TYPE` is `inputs`, `filters`, `outputs`, or `codecs`,
-  and `NAME` is the name of the plugin.
-| Platform-specific. See <<dir-layout>>.
-
-| `allow_superuser`
-| Setting to `true` to allow or `false` to block running Logstash as a superuser.
-| `true`
-|=======================================================================
+include::./settings/settings.asciidoc[]
\ No newline at end of file
diff --git a/docs/static/settings/api-settings.asciidoc b/docs/static/settings/api-settings.asciidoc
new file mode 100644
index 00000000000..4ba8d12309e
--- /dev/null
+++ b/docs/static/settings/api-settings.asciidoc
@@ -0,0 +1,27 @@
+// The content for these settings is single sourced from attributes-ls.asciidoc
+
+{apienabled}:: {apienabled-desc}
+
+{apienvironment}:: {apienvironment-desc}
+
+{apihttp_host}:: {apihttp_host-desc}
+
+{apihttp_port}:: {apihttp_port-desc}
+
+{apissl_enabled}:: {apissl_enabled-desc}
+
+{apissl_keystore_path}:: {apissl_keystore_path-desc}
+
+{apissl_keystore_password}:: {apissl_keystore_password-desc}
+
+{apiauthtype}:: {apiauthtype-desc}
+
+{apiauth_basic_username}:: {apiauth_basic_username-desc}
+
+{apiauth_basic_pw}:: {apiauth_basic_pw-desc} +
+* Set `api.auth.basic.password_policy.include.digit` `REQUIRED` (default) to accept only passwords that include at least one digit or `OPTIONAL` to exclude from requirement.
+* Set `api.auth.basic.password_policy.include.upper` `REQUIRED` (default) to accept only passwords that include at least one upper case letter or `OPTIONAL` to exclude from requirement.
+* Set `api.auth.basic.password_policy.include.lower` `REQUIRED` (default) to accept only passwords that include at least one lower case letter or `OPTIONAL` to exclude from requirement.
+* Set `api.auth.basic.password_policy.include.symbol` `REQUIRED` to accept only passwords that include at least one special character or `OPTIONAL` (default) to exclude from requirement.
+* Set `api.auth.basic.password_policy.length.minimum` to a value from 9 to 1024 if you want to require more than the 8 character default setting for passwords.
+
diff --git a/docs/static/settings/dlq-settings.asciidoc b/docs/static/settings/dlq-settings.asciidoc
new file mode 100644
index 00000000000..1f66359f4ff
--- /dev/null
+++ b/docs/static/settings/dlq-settings.asciidoc
@@ -0,0 +1,11 @@
+// The content for these settings is single sourced from attributes-ls.asciidoc
+
+{dlqenable}:: {dlqenable-desc} 
+
+{dlqmaxbytes}:: {dlqmaxbytes-desc} 
+
+{dlqflush_interval}:: {dlqflush_interval-desc} 
+
+{dlqstorage_policy}::  {dlqstorage_policy-desc} 
+
+{pathdlq}::  {pathdlq-desc} 
diff --git a/docs/static/settings/pipeline-config-settings.asciidoc b/docs/static/settings/pipeline-config-settings.asciidoc
new file mode 100644
index 00000000000..0fc924fdd82
--- /dev/null
+++ b/docs/static/settings/pipeline-config-settings.asciidoc
@@ -0,0 +1,27 @@
+// The content for these settings is single sourced from attributes-ls.asciidoc
+
+{path-config}:: {path-config-desc} 
+
+{config-string}:: {config-string-desc} 
+
+{config-test_and_exit}:: {config-test_and_exit-desc} 
+
+{config-reload-automatic}:: {config-reload-automatic-desc} 
+
+{config-reload-interval}:: {config-reload-interval-desc} 
+
+{config-debug}:: {config-debug-desc}
+
+{config-support_escapes}:: {config-support_escapes-desc}
+
+{config-field-ref-escape-style}:: {config-field-ref-escape-style-desc}
+
+IMPORTANT: The following `config.field_reference.escape_style` setting is a duplicate of the previous setting while we resolve formatting issues. 
+
+config.field_reference.escape_style:: [Technical preview]. Provides a way to reference fields that contain <<formal-grammar-escape-sequences,field reference special characters>> `[` and `]`. +
+Current options are:   +
+* `percent`: URI-style `%`+`HH` hexadecimal encoding of UTF-8 bytes (`[` -> `%5B`; `]` -> `%5D`). +
+* `ampersand`: HTML-style `&#`+`DD`+`;` encoding of decimal Unicode code-points (`[` -> `&#91;`; `]` -> `&#93;`). +
+* `none`: field names containing special characters _cannot_ be referenced. 
++
+NOTE: This feature is in *technical preview* and may change in the future.
diff --git a/docs/static/settings/pipeline-settings.asciidoc b/docs/static/settings/pipeline-settings.asciidoc
new file mode 100644
index 00000000000..c7063b33a81
--- /dev/null
+++ b/docs/static/settings/pipeline-settings.asciidoc
@@ -0,0 +1,19 @@
+// The content for these settings is single sourced from attributes-ls.asciidoc
+
+{pipeline-id}:: {pipeline-id-desc} 
+
+{pipeline-workers}:: {pipeline-workers-desc} 
+
+{pipeline-batchsize}:: {pipeline-batchsize-desc} 
+
+{pipeline-batch-delay}:: {pipeline-batch-delay-desc}
+
+{pipeline-unsafe-shutdown}:: {pipeline-unsafe-shutdown-desc} 
+
+{pipeline-plugin_classloaders}:: {pipeline-plugin_classloaders-desc}
+
+{pipeline-ordered}:: {pipeline-ordered-desc} 
+
+{pipeline-separatelogs}:: {pipeline-separatelogs-desc}
+ 
+{pipeline-ecs_compatibility}:: {pipeline-ecs_compatibility-desc} 
diff --git a/docs/static/settings/pq-settings.asciidoc b/docs/static/settings/pq-settings.asciidoc
new file mode 100644
index 00000000000..5f477cb9487
--- /dev/null
+++ b/docs/static/settings/pq-settings.asciidoc
@@ -0,0 +1,21 @@
+// The content for these settings is single sourced from attributes-ls.asciidoc
+ 
+NOTE: These settings apply only if `queue.type: persisted`.
+ 
+{pathqueue}:: {pathqueue-desc} {lsyml}
+
+{queuepage_capacity}:: {queuepage_capacity-desc} {bothyml}
+
+{queuedrain}:: {queuedrain-desc} {lsyml}
+
+{queuemaxevents}:: {queuemaxevents-desc} {bothyml}
+
+{queuemaxbytes}:: {queuemaxbytes-desc} {bothyml}
+
+{queuecheckpointacks}:: {queuecheckpointacks-desc} {bothyml}
+    
+{queuecheckpointwrites}:: {queuecheckpointwrites-desc} {bothyml}
+
+{queuecheckpointretry}:: {queuecheckpointretry-desc}
+   
+{queuecheckpointinterval}:: {queuecheckpointinterval-desc} {bothyml}
diff --git a/docs/static/settings/settings.asciidoc b/docs/static/settings/settings.asciidoc
new file mode 100644
index 00000000000..27721c6f419
--- /dev/null
+++ b/docs/static/settings/settings.asciidoc
@@ -0,0 +1,57 @@
+[[logstash-yml-settings]]
+=== Logstash settings
+
+The `logstash.yml` file, located in the Logstash `/config/` directory includes these settings. 
+
+
+[[settings-general]]
+==== Set up and general settings
+
+{allowsuperuser}:: {allowsuperuser-desc}
+{nodename}:: {nodename-desc} 
+{pathdata}:: {pathdata-desc} 
+{pathplugins}:: {pathplugins-desc}
+{modules}:: {modules-desc}
+
+[[settings-queue]]
+==== Queue settings
+
+{queuetype}:: {queuetype-desc}
+
+
+[[settings-pq]]
+===== Persisted queue (PQ) settings
+
+include::pq-settings.asciidoc[]
+
+
+[[settings-dlq]]
+===== Dead letter queue (DLQ) settings
+
+include::dlq-settings.asciidoc[]
+
+
+[[settings-pipeline]]
+==== Pipeline settings
+
+include::pipeline-settings.asciidoc[]
+
+
+[[settings-pipeline-config]]
+==== Pipeline configuration settings
+
+include::pipeline-config-settings.asciidoc[]
+
+
+[[settings-api]]
+===== API settings
+
+include::api-settings.asciidoc[]
+
+
+[[settings-debug]]
+===== Debug settings
+
+{loglevel}:: {loglevel-desc} 
+{pathlogs}:: {pathlogs-desc}
+{logformat}:: {logformat-desc}
