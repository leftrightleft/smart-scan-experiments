diff --git a/.github/ISSUE_TEMPLATE/bug.md b/.github/ISSUE_TEMPLATE/bug.md
index 44dce289def..d838418bc11 100644
--- a/.github/ISSUE_TEMPLATE/bug.md
+++ b/.github/ISSUE_TEMPLATE/bug.md
@@ -36,7 +36,7 @@ If the affected version of Logstash is 7.9 (or earlier), or if it is NOT using t
 
 1. JVM version (`java -version`)
 2. JVM installation source (e.g. from the Operating System's package manager, from source, etc).
-3. Value of the `JAVA_HOME` environment variable if set.
+3. Value of the `JAVA_HOME`/`LS_JAVA_HOME` environment variable if set.
 
 **OS version** (`uname -a` if on a Unix-like system):
 
diff --git a/bin/logstash.lib.sh b/bin/logstash.lib.sh
index 6d153344462..c1ad9422c66 100755
--- a/bin/logstash.lib.sh
+++ b/bin/logstash.lib.sh
@@ -14,6 +14,7 @@
 # The following env var will be used by this script if set:
 #   LS_GEM_HOME and LS_GEM_PATH to overwrite the path assigned to GEM_HOME and GEM_PATH
 #   LS_JAVA_OPTS to append extra options to the JVM options provided by logstash
+#   LS_JAVA_HOME to point to the java home (takes precedence over JAVA_HOME)
 #   JAVA_HOME to point to the java home
 
 unset CDPATH
@@ -90,15 +91,25 @@ setup_java() {
   if [ -z "$JAVACMD" ]; then
     setup_bundled_jdk_part
     JAVACMD_TEST=`command -v java`
-    if [ -n "$JAVA_HOME" ]; then
+    if [ -n "$LS_JAVA_HOME" ]; then
+      echo "Using LS_JAVA_HOME defined java: ${LS_JAVA_HOME}."
+      if [ -x "$LS_JAVA_HOME/bin/java" ]; then
+        JAVACMD="$LS_JAVA_HOME/bin/java"
+        if [ -d "${LOGSTASH_HOME}/${BUNDLED_JDK_PART}" -a -x "${LOGSTASH_HOME}/${BUNDLED_JDK_PART}/bin/java" ]; then
+          echo "WARNING: Using LS_JAVA_HOME while Logstash distribution comes with a bundled JDK."
+        fi
+      else
+        echo "Invalid LS_JAVA_HOME, doesn't contain bin/java executable."
+      fi
+    elif [ -n "$JAVA_HOME" ]; then
       echo "Using JAVA_HOME defined java: ${JAVA_HOME}"
       if [ -x "$JAVA_HOME/bin/java" ]; then
         JAVACMD="$JAVA_HOME/bin/java"
         if [ -d "${LOGSTASH_HOME}/${BUNDLED_JDK_PART}" -a -x "${LOGSTASH_HOME}/${BUNDLED_JDK_PART}/bin/java" ]; then
-          echo "WARNING, using JAVA_HOME while Logstash distribution comes with a bundled JDK"
+          echo "WARNING: Using JAVA_HOME while Logstash distribution comes with a bundled JDK."
         fi
       else
-        echo "Invalid JAVA_HOME, doesn't contain bin/java executable"
+        echo "Invalid JAVA_HOME, doesn't contain bin/java executable."
       fi
     elif [ -d "${LOGSTASH_HOME}/${BUNDLED_JDK_PART}" -a -x "${LOGSTASH_HOME}/${BUNDLED_JDK_PART}/bin/java" ]; then
       echo "Using bundled JDK: ${LOGSTASH_HOME}/${BUNDLED_JDK_PART}"
@@ -112,7 +123,7 @@ setup_java() {
   fi
 
   if [ ! -x "$JAVACMD" ]; then
-    echo "could not find java; set JAVA_HOME or ensure java is in PATH"
+    echo "Could not find java; set LS_JAVA_HOME or ensure java is in PATH."
     exit 1
   fi
 
diff --git a/bin/setup.bat b/bin/setup.bat
index a1138e40161..cbdbd5c312d 100644
--- a/bin/setup.bat
+++ b/bin/setup.bat
@@ -20,19 +20,25 @@ for %%I in ("%LS_HOME%..") do set LS_HOME=%%~dpfI
 
 rem ### 2: set java
 
-if defined JAVA_HOME (
+if defined LS_JAVA_HOME (
+  set JAVA="%LS_JAVA_HOME%\bin\java.exe"
+  echo Using LS_JAVA_HOME defined java: %LS_JAVA_HOME%
+  if exist "%LS_HOME%\jdk" (
+    echo WARNING: Using LS_JAVA_HOME while Logstash distribution comes with a bundled JDK.
+  )
+) else if defined JAVA_HOME (
   set JAVA="%JAVA_HOME%\bin\java.exe"
   echo Using JAVA_HOME defined java: %JAVA_HOME%
   if exist "%LS_HOME%\jdk" (
-    echo WARNING, using JAVA_HOME while Logstash distribution comes with a bundled JDK
+    echo WARNING: Using JAVA_HOME while Logstash distribution comes with a bundled JDK.
   )
 ) else (
   if exist "%LS_HOME%\jdk" (
     set JAVA="%LS_HOME%\jdk\bin\java.exe"
-    echo "Using bundled JDK: %JAVA%""
+    echo "Using bundled JDK: %JAVA%."
   ) else (
     for %%I in (java.exe) do set JAVA="%%~$PATH:I"
-    echo "Using system java: %JAVA%"
+    echo "Using system java: %JAVA% ."
   )
 )
 
diff --git a/docs/static/jvm.asciidoc b/docs/static/jvm.asciidoc
index cee1000d9a3..cb682e452a9 100644
--- a/docs/static/jvm.asciidoc
+++ b/docs/static/jvm.asciidoc
@@ -22,10 +22,10 @@ for the official word on supported versions across releases.
 https://staging-website.elastic.co/downloads/logstash[downloads] that include
 AdoptOpenJDK 11, the latest long term support (LTS) release of JDK.
 
-Use the JAVA_HOME environment variable if you want to use a JDK other than the
+Use the LS_JAVA_HOME environment variable if you want to use a JDK other than the
 version that is bundled. 
-If you have the JAVA_HOME environment variable set to use a custom JDK, Logstash
-will continue to use the JDK version you have specified, even after you upgrade. 
+If you have the LS_JAVA_HOME environment variable set to use a custom JDK, Logstash
+will continue to use the JDK version you have specified, even after you upgrade.
 =====
 
 [float]
@@ -47,17 +47,21 @@ Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.1+13-LTS, mixed mode)
 
 [float]
 [[java-home]]
-==== `JAVA_HOME`
+==== `LS_JAVA_HOME` and `JAVA_HOME`
 
-{ls} uses the Java version set in `JAVA_HOME`. The `JAVA_HOME` environment
-variable must be set for {ls} to operate correctly. 
+{ls} uses the Java version set in `LS_JAVA_HOME`. The `LS_JAVA_HOME` environment
+variable must be set for {ls} to operate correctly.
 
-On some Linux systems, you may need to have the `JAVA_HOME` environment
+If {ls} doesn't find `LS_JAVA_HOME` it tries to fall back to `JAVA_HOME`.
+Note that this fallback behavior is experimental and the usage of `JAVA_HOME`
+could be subject to removal in later releases.
+
+On some Linux systems, you may need to have the `LS_JAVA_HOME` environment
 exported before installing {ls}, particularly if you installed Java from
 a tarball. 
 {ls} uses Java during installation to automatically detect your environment and
 install the correct startup method (SysV init scripts, Upstart, or systemd). If
-{ls} is unable to find the `JAVA_HOME` environment variable during package
+{ls} is unable to find the `LS_JAVA_HOME` environment variable during package
 installation, you may get an error message, and {ls} will not start properly.
 
 [float]
diff --git a/qa/acceptance/spec/shared_examples/installed_with_jdk.rb b/qa/acceptance/spec/shared_examples/installed_with_jdk.rb
index 4e18a291901..9323797fbba 100644
--- a/qa/acceptance/spec/shared_examples/installed_with_jdk.rb
+++ b/qa/acceptance/spec/shared_examples/installed_with_jdk.rb
@@ -23,6 +23,7 @@
 
   before(:all) do
     #unset to force it using bundled JDK to run LS
+    logstash.run_command("unset LS_JAVA_HOME")
     logstash.run_command("unset JAVA_HOME")
   end
 
diff --git a/qa/docker/shared_examples/container.rb b/qa/docker/shared_examples/container.rb
index 1458a616031..6722bc30061 100644
--- a/qa/docker/shared_examples/container.rb
+++ b/qa/docker/shared_examples/container.rb
@@ -14,7 +14,7 @@
       console_out = exec_in_container(@container, 'logstash --version')
       console_filtered = console_out.split("\n")
             .delete_if do |line|
-              line =~ /Using JAVA_HOME defined java|Using system java: /
+              line =~ /Using LS_JAVA_HOME defined java|Using JAVA_HOME defined java|Using system java: /
             end.join
       expect(console_filtered).to match /#{version}/
     end
diff --git a/qa/integration/services/logstash_service.rb b/qa/integration/services/logstash_service.rb
index e568bb7d4fa..08dfa5013e9 100644
--- a/qa/integration/services/logstash_service.rb
+++ b/qa/integration/services/logstash_service.rb
@@ -118,10 +118,10 @@ def start_with_stdin
       @process.io.stdout = @process.io.stderr = out
       @process.duplex = true
       java_home = java.lang.System.getProperty('java.home')
-      @process.environment['JAVA_HOME'] = java_home
+      @process.environment['LS_JAVA_HOME'] = java_home
       @process.start
       wait_for_logstash
-      puts "Logstash started with PID #{@process.pid}, JAVA_HOME: #{java_home}" if alive?
+      puts "Logstash started with PID #{@process.pid}, LS_JAVA_HOME: #{java_home}" if alive?
     end
   end
 
@@ -137,10 +137,10 @@ def spawn_logstash(*args)
       @process = build_child_process(*args)
       @env_variables.map { |k, v|  @process.environment[k] = v} unless @env_variables.nil?
       java_home = java.lang.System.getProperty('java.home')
-      @process.environment['JAVA_HOME'] = java_home
+      @process.environment['LS_JAVA_HOME'] = java_home
       @process.io.inherit!
       @process.start
-      puts "Logstash started with PID #{@process.pid}, JAVA_HOME: #{java_home}" if @process.alive?
+      puts "Logstash started with PID #{@process.pid}, LS_JAVA_HOME: #{java_home}" if @process.alive?
     end
   end
 
diff --git a/qa/integration/specs/cli/keystore_spec.rb b/qa/integration/specs/cli/keystore_spec.rb
index 7d77fc3b045..714d93b5d1d 100644
--- a/qa/integration/specs/cli/keystore_spec.rb
+++ b/qa/integration/specs/cli/keystore_spec.rb
@@ -44,7 +44,7 @@
     it "works" do
       env = {'LOGSTASH_KEYSTORE_PASS' => 'PaSSWD'}
       if ENV['BUILD_JAVA_HOME']
-        env['JAVA_HOME'] = ENV['BUILD_JAVA_HOME']
+        env['LS_JAVA_HOME'] = ENV['BUILD_JAVA_HOME']
       end
       keystore_list = @logstash.run_cmd(['bin/logstash-keystore', 'create'], true, env)
       expect(keystore_list.stderr_and_stdout).to_not match(/ERROR/)
@@ -63,7 +63,7 @@
     it "works" do
       env = {'LOGSTASH_KEYSTORE_PASS' => 'PaSSWD'}
       if ENV['BUILD_JAVA_HOME']
-        env['JAVA_HOME'] = ENV['BUILD_JAVA_HOME']
+        env['LS_JAVA_HOME'] = ENV['BUILD_JAVA_HOME']
       end
       keystore_list = @logstash.run_cmd(['bin/logstash-keystore', 'list'], true, env)
       expect(keystore_list.stderr_and_stdout).to_not match(/ERROR/)
diff --git a/qa/integration/specs/cli/prepare_offline_pack_spec.rb b/qa/integration/specs/cli/prepare_offline_pack_spec.rb
index c3273d5a8b5..747c26f35fa 100644
--- a/qa/integration/specs/cli/prepare_offline_pack_spec.rb
+++ b/qa/integration/specs/cli/prepare_offline_pack_spec.rb
@@ -86,7 +86,7 @@
       filters = @logstash_plugin.list(plugins_to_pack.first)
                                 .stderr_and_stdout.split("\n")
                                 .delete_if do |line|
-                                  line =~ /cext|├──|└──|logstash-integration|JAVA_OPT|fatal|^WARNING|^warning: ignoring JAVA_TOOL_OPTIONS|^OpenJDK 64-Bit Server VM warning|Option \w+ was deprecated|Using JAVA_HOME defined java|Using system java: |\[\[: not found/
+                                  line =~ /cext|├──|└──|logstash-integration|JAVA_OPT|fatal|^WARNING|^warning: ignoring JAVA_TOOL_OPTIONS|^OpenJDK 64-Bit Server VM warning|Option \w+ was deprecated|Using LS_JAVA_HOME defined java|Using JAVA_HOME defined java|Using system java: |\[\[: not found/
                                 end
 
       expect(unpacked.plugins.collect(&:name)).to include(*filters)
diff --git a/x-pack/ci/integration_tests.sh b/x-pack/ci/integration_tests.sh
index 47dd0a5ffbc..2ca952210b7 100755
--- a/x-pack/ci/integration_tests.sh
+++ b/x-pack/ci/integration_tests.sh
@@ -14,7 +14,7 @@ export CI=true
 
 if [ -n "$BUILD_JAVA_HOME" ]; then
   GRADLE_OPTS="$GRADLE_OPTS -Dorg.gradle.java.home=$BUILD_JAVA_HOME"
-  export JAVA_HOME="$BUILD_JAVA_HOME"
+  export LS_JAVA_HOME="$BUILD_JAVA_HOME"
 fi
 
 ./gradlew runXPackIntegrationTests
\ No newline at end of file
