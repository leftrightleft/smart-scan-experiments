diff --git a/.github/workflows/codeql.yml b/.github/workflows/codeql.yml
index 56e2e90..fa564fa 100644
--- a/.github/workflows/codeql.yml
+++ b/.github/workflows/codeql.yml
@@ -1,4 +1,4 @@
-name: "CodeQL"
+name: "CodeQL Test"
 
 on:
   push:
@@ -14,8 +14,29 @@ env:
   DOTNET_VERSION: '6.0.x'
 
 jobs:
+  cloud_formation_test:
+    name: Cloud Formation Security Test
+    runs-on: 'ubuntu-latest'
+    permissions:
+      actions: read
+      contents: read
+      security-events: write
+
+    steps:
+    - name: Checkout repository
+      uses: actions/checkout@v3
+      
+    - uses: stelligent/cfn_nag@master
+      with:
+        extra_args: -o sarif
+        output_path: cfn_nag.sarif
+        
+    - uses: github/codeql-action/upload-sarif@v2
+      with:
+        sarif_file: cfn_nag.sarif
+
   analyze:
-    name: Analyze
+    name: CodeQL Analyze
     runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
     permissions:
       actions: read
@@ -25,11 +46,20 @@ jobs:
     strategy:
       fail-fast: false
       matrix:
-        language: [ 'csharp' ]
+        language: [ 'csharp', 'javascript' ]
 
     steps:
     - name: Checkout repository
       uses: actions/checkout@v3
+      
+    - uses: stelligent/cfn_nag@master
+      with:
+        extra_args: -o sarif
+        output_path: cfn_nag.sarif
+        
+    - uses: github/codeql-action/upload-sarif@v1
+      with:
+        sarif_file: cfn_nag.sarif
 
     - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
       uses: actions/setup-dotnet@v1
diff --git a/backend/src/mylibrary.js b/backend/src/mylibrary.js
new file mode 100644
index 0000000..fe764d2
--- /dev/null
+++ b/backend/src/mylibrary.js
@@ -0,0 +1,42 @@
+var express = require("express");
+var bodyParser = require("body-parser");
+const { Pool } = require("pg");
+
+module.exports.handler = function (event) {
+  
+  console.log(event);
+
+  const pool = new Pool({
+    user: "dbuser",
+    host: "database.server.com",
+    database: "mydb",
+    password: process.env.POSTGRES_PASSWORD,
+    port: 3211,
+  });
+
+  var app = express();
+
+  app.use(bodyParser.json());
+
+  app.use(
+    bodyParser.urlencoded({
+      extended: true,
+    })
+  );
+
+  app.get("/", function (req, res) {
+    const search = req.params.q;
+
+    if (search != "") {
+      var squery = 'SELECT * FROM users WHERE name = "' + search + '"';
+      pool.query(squery, (err, res) => {
+        console.log(err, res);
+        pool.end();
+      });
+    }
+  });
+
+  app.listen(8000, function () {
+    console.log("Server running");
+  });
+};
diff --git a/template.yml b/template.yml
new file mode 100644
index 0000000..8aeef52
--- /dev/null
+++ b/template.yml
@@ -0,0 +1,19 @@
+AWSTemplateFormatVersion: '2010-09-09'
+Transform: 'AWS::Serverless-2016-10-31'
+Description: 'Serverless thing'
+
+Globals:
+  Api:
+    Cors:
+      AllowMethods: "'*'"
+      AllowHeaders: "'*'"
+      AllowOrigin: "'*'"
+
+Resources:
+  OrderManagerJsFunction:
+    Type: 'AWS::Serverless::Function'
+    Properties:
+      FunctionName: MY-SERVERLESS-THING
+      Handler: mylibrary.handler
+      Runtime: nodejs12.x
+      CodeUri: backend/src/
\ No newline at end of file
