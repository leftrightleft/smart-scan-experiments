diff --git a/src/main/java/com/github/demo/service/BookDatabase.java b/src/main/java/com/github/demo/service/BookDatabase.java
index 8e33099..411fc08 100644
--- a/src/main/java/com/github/demo/service/BookDatabase.java
+++ b/src/main/java/com/github/demo/service/BookDatabase.java
@@ -9,7 +9,6 @@ public interface BookDatabase {
 
     List<Book> getAll() throws BookServiceException;
 
-    //add method for getBooksByTitle
     List<Book> getBooksByTitle(String title) throws BookServiceException;
 
     void populate(Collection<Book> books) throws BookServiceException;
diff --git a/src/main/java/com/github/demo/service/BookDatabaseImpl.java b/src/main/java/com/github/demo/service/BookDatabaseImpl.java
index 539b227..c29f637 100644
--- a/src/main/java/com/github/demo/service/BookDatabaseImpl.java
+++ b/src/main/java/com/github/demo/service/BookDatabaseImpl.java
@@ -105,9 +105,43 @@ public List<Book> getAll() throws BookServiceException {
 
     @Override
     public List<Book> getBooksByTitle(String name) throws BookServiceException {
-      List<Book> books = new ArrayList<Book>();
-      return books;
-  }
+    List<Book> books = new ArrayList<Book>();
+
+    if (!isValid()) {
+        throw new BookServiceException("Database connection is not valid, check logs for failure details.");
+    }
+
+    Statement stmt = null;
+
+    try {
+        String query = "SELECT * FROM books WHERE title LIKE " + "'%" + name + "%'";
+        stmt = connection.createStatement();
+        ResultSet result = stmt.executeQuery(query);
+
+        while (result.next()) {
+            Book book = new Book(
+                result.getString("author"),
+                result.getString("title"),
+                result.getString("image")
+            );
+            books.add(book);
+        }
+    } catch (SQLException e) {
+        logger.error("Failed to obtain books", e);
+        throw new BookServiceException(e);
+    } finally {
+        try {
+            if (stmt != null) {
+                stmt.close();
+            }
+        } catch (SQLException e) {
+            // Ignore
+            stmt = null;
+        }
+    }
+
+    return books;
+}
 
     @Override
     public void destroy() {
