diff --git a/.devcontainer/devcontainer.json b/.devcontainer/devcontainer.json
index bf23e0c..17ee766 100644
--- a/.devcontainer/devcontainer.json
+++ b/.devcontainer/devcontainer.json
@@ -17,16 +17,18 @@
     }
   },
   "extensions": [
-    "ms-azuretools.vscode-docker",
-    "redhat.java",
-    "vscjava.vscode-maven",
-    "vscjava.vscode-java-debug",
-    "vscjava.vscode-java-dependency",
-    "vscjava.vscode-java-test",
-    "dgileadi.java-decompiler",
-    "redhat.vscode-xml",
-    "redhat.vscode-yaml"
-  ],
+	"ms-azuretools.vscode-docker",
+	"redhat.java",
+	"vscjava.vscode-maven",
+	"vscjava.vscode-java-debug",
+	"vscjava.vscode-java-dependency",
+	"vscjava.vscode-java-test",
+	"dgileadi.java-decompiler",
+	"redhat.vscode-xml",
+	"redhat.vscode-yaml",
+	"GitHub.copilot-chat",
+	"GitHub.copilot"
+],
   "settings": {
     "terminal.integrated.profiles.linux": {
       "bash": {
diff --git a/src/main/java/com/github/demo/model/Book.java b/src/main/java/com/github/demo/model/Book.java
index ca14e0c..6ab4a50 100644
--- a/src/main/java/com/github/demo/model/Book.java
+++ b/src/main/java/com/github/demo/model/Book.java
@@ -11,21 +11,36 @@ public class Book {
 
     private String cover;
 
-    public Book() {
+    private int rating;
 
+    public Book() {
+        this.title = "";
+        this.author = "";
+        this.cover = "";
+        this.rating = 0;
     }
 
     public Book(String author, String title) {
+        this();
         this.author = author;
         this.title = title;
     }
 
     public Book(String author, String title, String cover) {
+        this();
         this.author = author;
         this.title = title;
         this.cover = cover;
     }
 
+    public Book(String author, String title, String cover, int rating) {
+        this();
+        this.author = author;
+        this.title = title;
+        this.cover = cover;
+        this.rating = rating;
+    }
+
     public String getTitle() {
         return title;
     }
@@ -53,4 +68,12 @@ public String getCover() {
     public void setCover(String cover) {
         this.cover = cover;
     }
+
+    public int getRating() {
+        return rating;
+    }
+
+    public void setRating(int rating) {
+        this.rating = rating;
+    }
 }
diff --git a/src/main/java/com/github/demo/service/BookDatabaseImpl.java b/src/main/java/com/github/demo/service/BookDatabaseImpl.java
index 9023ef5..68753a5 100644
--- a/src/main/java/com/github/demo/service/BookDatabaseImpl.java
+++ b/src/main/java/com/github/demo/service/BookDatabaseImpl.java
@@ -92,7 +92,8 @@ public List<Book> getAll() throws BookServiceException {
                 Book book = new Book(
                     rs.getString("author"),
                     rs.getString("title"),
-                    rs.getString("image")
+                    rs.getString("image"),
+                    rs.getInt("rating")
                 );
                 books.add(book);
             }
@@ -123,7 +124,8 @@ public List<Book> getBooksByTitle(String name) throws BookServiceException {
                 Book book = new Book(
                     results.getString("author"),
                     results.getString("title"),
-                    results.getString("image")
+                    results.getString("image"),
+                    results.getInt("rating")
                 );
                 books.add(book);
             }
@@ -169,6 +171,7 @@ public void populate(Collection<Book> books) throws BookServiceException {
                     ps.setString(1, book.getTitle());
                     ps.setString(2, book.getAuthor());
                     ps.setString(3, book.getCover());
+                    ps.setInt(4, book.getRating());
                     ps.execute();
                 }
                 logger.info("Database populated.");
diff --git a/src/main/java/com/github/demo/service/BookUtils.java b/src/main/java/com/github/demo/service/BookUtils.java
index 6232d5a..848bfd5 100644
--- a/src/main/java/com/github/demo/service/BookUtils.java
+++ b/src/main/java/com/github/demo/service/BookUtils.java
@@ -10,12 +10,12 @@ public class BookUtils {
     public static List<Book> getSampleBooks() {
         List<Book> books = new ArrayList<Book>(6);
 
-        books.add(new Book("Jeff Sutherland","Scrum: The Art of Doing Twice the Work in Half the Time", "scrum.jpg"));
-        books.add(new Book("Eric Ries","The Lean Startup: How Constant Innovation Creates Radically Successful Businesses", "lean.jpg"));
-        books.add(new Book("Geoffrey A. Moore","Crossing the Chasm", "chasm.jpg"));
-        books.add(new Book("David Thomas","The Pragmatic Programmer: From Journeyman to Master", "pragmatic.jpg"));
-        books.add(new Book("Frederick P. Brooks Jr.", "The Mythical Man-Month: Essays on Software Engineering", "month.jpg"));
-        books.add(new Book("Steve Krug","Don't Make Me Think, Revisited: A Common Sense Approach to Web Usability", "think.jpg"));
+        books.add(new Book("Jeff Sutherland", "Scrum: The Art of Doing Twice the Work in Half the Time", "scrum.jpg", 5));
+        books.add(new Book("Eric Ries", "The Lean Startup: How Constant Innovation Creates Radically Successful Businesses", "lean.jpg", 2));
+        books.add(new Book("Geoffrey A. Moore", "Crossing the Chasm", "chasm.jpg", 4));
+        books.add(new Book("David Thomas", "The Pragmatic Programmer: From Journeyman to Master", "pragmatic.jpg", 1));
+        books.add(new Book("Frederick P. Brooks Jr.", "The Mythical Man-Month: Essays on Software Engineering", "month.jpg", 5));
+        books.add(new Book("Steve Krug", "Don't Make Me Think, Revisited: A Common Sense Approach to Web Usability", "think.jpg", 3));
 
         return books;
     }
diff --git a/src/main/java/com/github/demo/servlet/BookServlet.java b/src/main/java/com/github/demo/servlet/BookServlet.java
index 626765c..6dace96 100644
--- a/src/main/java/com/github/demo/servlet/BookServlet.java
+++ b/src/main/java/com/github/demo/servlet/BookServlet.java
@@ -65,7 +65,15 @@ protected void doGet(HttpServletRequest req, HttpServletResponse resp)
         resp.setContentType("text/html; charset=UTF-8");
 
         try {
-            List<Book> books = bookService.getBooks();
+            List<Book> books;
+
+            String searchTerm = req.getParameter("title");
+            if (searchTerm != null) {
+                books = bookService.searchBooks(searchTerm);
+            } else {
+                books = bookService.getBooks();
+            }
+
             ctx.setVariable("books", books);
             engine.process("books", ctx, resp.getWriter());
         } catch (BookServiceException e) {
diff --git a/src/main/webapp/static/books.html b/src/main/webapp/static/books.html
index dbba20d..69b19e5 100644
--- a/src/main/webapp/static/books.html
+++ b/src/main/webapp/static/books.html
@@ -80,6 +80,13 @@
                   <h4 class="media-heading"><a href="#">[[${book.title}]]</a></h4>
                   <h5 class="media-heading"> by <a href="#">[[${book.author}]]</a></h5>
                   <span>Status: </span><span class="text-success"><strong>In Stock</strong></span>
+                  <!-- Rating shown in stars -->
+                  <div>
+                    <span>Rating: </span>
+                    <span th:each="i : ${#numbers.sequence(1, book.rating)}">
+                      <img src="/static/images/star.png" style="width: 12px; height: 12px;" />
+                    </span>
+                  </div>
                 </div>
               </div>
             </td>
